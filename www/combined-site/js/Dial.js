var DB_z = false; var Roo,KgZ; var svgNS = "http://www.w3.org/2000/svg"; var $mswhl; function init() { KgZ = dge("wjL"); Roo = dge("Roo"); if(document.addEventListener) { Roo.addEventListener("mousedown",Down,false); Roo.addEventListener("mouseup",Up,false); Roo.addEventListener("mousemove",Move,false); Roo.addEventListener("click",Zoom,false); $mswhl = (/Firefox/i.test(navigator.userAgent)) ? "DOMMouseScroll" : "mousewheel"; Roo.addEventListener($mswhl,mzoom,true); }
else if(document.attachEvent) { try { Roo.attachEvent("mousedown",Down); Roo.attachEvent("mouseup",Up); Roo.attachEvent("mousemove",Move); Roo.attachEvent("click",Zoom); } catch(e) {  }  } if(SET_DEFAULTS) { for(var i=0; i<vgr.length; i++) { try { if(isNaN(parseFloat(DEFAULT_VALUES[i]))) { warning("ERROR ATTEMPTING TO PARSE THE VALUE FOR: <b>"+DEFAULT_FIELD_DESCR[i]+"</b>",true); warning("The value given: <b>"+DEFAULT_VALUES[i]+"</b>, does not appear to be numeric.",true); warning("<b>THIS NEW DEFAULT HAS BEEN IGNORED.</b>",true); return; }
else { document.forms[0].elements[vgr[i]].value = DEFAULT_VALUES[i]; VFD.vgR[vgr[i]] = DEFAULT_VALUES[i]; }  } catch(e) { warning('<b>ERROR ATTEMPTING TO LOAD DEFAULT VALUES :<BR />'+e.message,true); warning("<b>HALTING EXECUTION OF SETTING NEW DEFAULTS</b>: The state of the default values is <i>indeterminant</i> and may be a mix of new and old values.",true); return; }
}  } VFD.SSs = "BlP"; dge("NIV").checked = true; dge("lJX").checked = true; dge("AZo").checked = true; dge("seS").checked = true; dge("r1").click(); VFD.init(Roo); leO(VFD.SSs); oKK('help_browser_type',false); dge("manpanctrl").click(); }
var vgr = new Array( 'pcX', 'lat', 'oyQ', 'msp', 'Wic', 'Fry', 'wcF', 'AxD', 'pDT', 'Uiq', 'LNV', 'rKk' ); var VFD = { SGj : {}, zi_ : {}, aYi : {}, WAM : {}, cDw : {}, XtZ : {}, gwQ : {}, cTx : {}, GRH : {}
, Ana : { "path" : { "substyle" : new Array(2.0,2.0), "eotdate" : new Array(1.0,1.0), "shepherd_lcl" : new Array(0.5,0.5), "shepherd_eot" : new Array(0.5,0.5), "shepherd_std" : new Array(0.5,0.5), "shepherd_swe" : new Array(0.5,0.5), "origin" : new Array(0.25,0.25), "tuR" : new Array(0.5,0.5), "TMR" : new Array(0.5,0.5), "iWv" : new Array(0.5,0.5), "babylonian" : new Array(0.5,0.5), "italian" : new Array(0.5,0.5) }
, "circle" : { "ixa" : new Array(1.67,1.67), "origin" : new Array(0.5,0.5), "babylonian" : new Array(1.0,1.0), "italian" : new Array(1.0,1.0), "eotdate" : new Array(3,3), "NVq" : new Array(1.67,1.67), "dpoint_dialhh" : new Array(1.0,1.0) }
}, SSs : "BlP", AxD : 0, pDT : 0, vgR : {  'pcX' : (new Date()).getFullYear(), 'lat' : 37.5, 'msp' : 93.3, 'oyQ' : 90, 'Wic' : 10, 'Fry' : 24, 'wcF' : 24, 'AxD' : 5, 'pDT' : 3.04, 'Uiq' : 10, 'LNV' : 0, 'rKk' : 0 }
, lat : 0, pcX : 2010, JcA : "anl", hemisphere : "North", msp : 0, oyQ : 0, msP : 0, Vgr : "parallel", rRJ : "RN", infinity : 99999, tSn : 23.44, QGD : -23.44, Tlw : 100, LNV : 0, FFN : 90, rKk : 0, Wic : 10, mlQ : 0, wcF : 72, Fry : 72, Uiq : 12, xFU : false, iKe : 0, mmW : 0, WNh : 0, GoX : 0, Xeu : 0, WoN : 0, tJW : 0, Fyz : 0, gx : 0, gy : 0, gz : 0, A : 0, B : 0, C : 1, D : 0, xh: 0, yh: 0, zh: 0, xv: 0, yv: 0, zv: 0, dxV: 0, dyV: 0, dzV: 0, dxH: 0, dyH: 0, dzH: 0, SmS : new Array(-180,-165,-150,-135,-120,-105,-90,-75,-60,-45,-30,-15,0,15,30,45,60,75,90,105,120,135,150,165), qha : new Array("12am","1am","2am","3am","4am","5am", "6am" ,"7am" ,"8am" ,"9am" ,"10am" ,"11am" ,"Noon" ,"1pm" ,"2pm" ,"3pm" ,"4pm" ,"5pm" ,"6pm", "7pm","8pm","9pm","10pm","11pm"), _nl : new Array("XII","I","II","III","IV","V", "VI" ,"VII" ,"VIII" ,"IX" ,"X" ,"XI" ,"XII" ,"I" ,"II" ,"III" ,"IV" ,"V" ,"VI", "VII","VIII","IX","X","XI"), tMe : new Array(), decl : new Array(-23.44,-20,-11.5,0,11.5,20,23.44), TzB : new Array(-23.44,-20,-11.5,0,11.5,20,23.44), twx : new Array(-23.44,-20,-11.5,0,11.5,20,23.44), colors : {"-23.44":"#00f", "-20":"#00f", "-11":"#00f", "0":"#0a0", "11":"#f00", "20":"#f00", "23.44":"#f00" }
, CqK : 0, zcoor : 0, ycoor : 0, HTM : 0, WKM : 0, nx : 0, ny : 0, LMq : 0, $OS : "", init : function(cnvs) { if (navigator.appVersion.indexOf("Mac") != -1 ) {$OS = "Mac";} else if (navigator.appVersion.indexOf("PowerPC") != -1 ) {$OS = "Mac";}
else if (navigator.appVersion.indexOf("Win") != -1 ) {$OS = "Win";} else if (navigator.appVersion.indexOf("SunOS") != -1 ) {$OS = "Solaris";} else if (navigator.appVersion.indexOf("Linux") != -1 ) {$OS = "Linux";}
else {$OS = "unknown";} this.aYi = cnvs; this.EBU(); mOs(this.pcX); }, Awt : function() { mOs(this.pcX); this.SdN(); this.AYf = d2rad(this.lat); this.Kep = d2rad(this.msp); this.msP = - parseFloat(this.msp) + parseFloat(this.oyQ); for(var i=0; i<this.SmS.length; i++) { this.tMe[i] = (parseFloat(this.SmS[i]) + parseFloat(this.msP)).toFixed(2); }
if(this.rKk == 0) { this.LNV = 0; document.forms[0]["LNV"].value = 0; } switch(this.SSs) { case "BlP" : this.tqJ(); this.xFU = true; break; case "ncP" : this.aQy(); this.xFU = true; break; case "ZPB" : this.rKk = 0; this.FFN = 90; this.AVh(); this.xFU = true; break; case "YPj" : this.FFN = 90; this.rKk = 0; this.LNV = 0; this.Vgr = "perpendicular"; this.tqJ(); this.xFU = true; break; case "tnf" : this.FFN = 90; this.rKk = 0; this.LNV = 0; this.Vgr = "perpendicular"; this.tqJ(); mOs(this.pcX); this.xFU = true; break; default : warning("Unrecognized dial type '<b>"+this.SSs+"</b>'...execution halting.",true); this.xFU = false; break; }
}, aQy : function() { this.A = -1 * Math.cos(d2rad(this.FFN))*Math.sin(d2rad(this.LNV)); this.B = -1 * Math.cos(d2rad(this.FFN))*Math.cos(d2rad(this.LNV)); this.C = Math.sin(d2rad(this.FFN)); this.nx = Math.cos(d2rad(this.LNV)); this.ny = -1 * Math.sin(d2rad(this.LNV)); this.xv = -this.AxD * Math.cos(d2rad(this.FFN)) * Math.sin(d2rad(this.LNV)); this.yv = -this.AxD * Math.cos(d2rad(this.FFN)) * Math.cos(d2rad(this.LNV)); this.zv = this.AxD * Math.sin(d2rad(this.FFN)); this.xh = -this.pDT * Math.cos(d2rad(this.FFN)) * Math.sin(d2rad(this.LNV)); this.yh = -this.pDT * Math.cos(d2rad(this.FFN)) * Math.cos(d2rad(this.LNV)); this.zh = this.pDT * Math.sin(d2rad(this.FFN)); this.dxV = Math.sin(d2rad(this.FFN)) * Math.sin(d2rad(this.LNV)); this.dyV = Math.sin(d2rad(this.FFN)) * Math.cos(d2rad(this.LNV)); this.dzV = Math.cos(d2rad(this.FFN)); this.dxH = -Math.cos(d2rad(this.LNV)); this.dyH = Math.sin(d2rad(this.LNV)); this.dzH = 0; this.mmW = this.pDT * Math.tan(d2rad(this.FFN)); }
, tqJ : function() { this.A = -1 * Math.cos(d2rad(this.FFN))*Math.sin(d2rad(this.LNV)); this.B = -1 * Math.cos(d2rad(this.FFN))*Math.cos(d2rad(this.LNV)); this.C = Math.sin(d2rad(this.FFN)); this.nx = Math.cos(d2rad(this.LNV)); this.ny = -1 * Math.sin(d2rad(this.LNV)); if(this.Vgr == "parallel") { this.CqK = this.Wic * Math.sin(this.AYf); this.ycoor = this.Wic * Math.cos(this.AYf); this.zcoor = -1 * this.B * this.ycoor / this.C; this.gy = this.Wic * Math.cos(this.AYf); this.gz = this.Wic * Math.sin(this.AYf); var g_dot_n = fhx(1,this.gx,this.gy,this.gz,1,this.A,this.B,this.C); if(g_dot_n < 0) { this.gy *= -1; this.gz *= -1; }
} else { this.gx = this.Wic * this.A; this.gy = this.Wic * this.B; this.gz = this.Wic * this.C; } if(this.Vgr == "parallel") { this.tJW = 0; this.Fyz = 0; this.WNh = (this.A*this.gx + this.B*this.gy + this.C*this.gz).toFixed(2); this.GoX = rad2d(Math.asin(this.WNh/this.Wic)).toFixed(2); var arr1 = gBO(1,this.A,this.B,this.C,1,this.gx,this.gy,this.gz); var ang = rad2d(Math.atan(this.WNh/arr1[0])).toFixed(2); var arr2 = this.yum(this.A,this.B,this.C,this.gx,this.gy,this.gz); this.Xeu = arr2[0].toFixed(2); this.WoN = arr2[1].toFixed(2); if(this.GoX < 7.5) warning("ATTN: The style is only "+parseFloat(this.GoX).toFixed(2)+" degrees off the dial plane." +" The tip of the style is "+parseFloat(this.WNh).toFixed(2)+" units above the plane." +" Try adjusting the dial orientation or changing the style type to <i>perpendicular</i>.",true); }
else { if(this.rKk == 0) { if(this.lat == 0) { this.Fyz = Infinity; } else { this.Fyz = -this.Wic/Math.tan(this.AYf); } this.tJW = 0; } else { var arr = this.yum(0,Math.cos(this.AYf),Math.sin(this.AYf),this.gx,this.gy,this.gz); if(!isNaN(arr[0]) && !isNaN(arr[1]) && sAY(0,0,arr[0],arr[1]) < this.infinity) { this.tJW = arr[0]; this.Fyz = arr[1]; }
else { this.tJW = this.infinity; this.Fyz = this.infinity; }  }  } if(this.FFN != 90) { if(parseFloat(this.FFN) == 0) { this.mmW = this.gz; } else { var x,y; if(this.B != 0) { x = 0; y = -this.C * this.gz / this.B; }
else { x = -this.C * this.gz / this.A; y = 0; } this.mmW = (gBO(1,this.nx,this.ny,0,1,x,y,this.gz))[0]; if(this.gz < 0) this.mmW *= -1; }  } else { this.mmW = 1000; }  }, sSS : {  'BlP' : 'classic', 'ncP' : 'bifilar', 'ZPB' : 'analemmatic', 'YPj' : 'cylinder', 'tnf' : 'eqoftime' }
, AVh : function() { var ostr = this.Zze("ocE") + this.hGn("YqN"); var cstr = "<br /><table>" +"<tr><th colspan='6' style='letter-spacing:5px'>ELLIPSE</th></tr>" +"<tr>" +"<th>Watch Time</th>" + "<th>X-Coor</th>" + "<th>Y-Coor</th>" + "<th>R</th>" + "<th>Theta</th>" + "</tr>"; this.gwQ['gWQ'] = {}
; this.gwQ['GWQ'] = {}; this.gwQ['Gwq'] = new Array(); var haMAX = 180 - rad2d((Math.acos(Math.tan(d2rad(this.tSn))*Math.tan(Math.abs(this.AYf))))).toFixed(0); var t = Math.tan(d2rad(this.tSn))*Math.tan(this.AYf); var xc,zc,r,theta,hhour,hhxc,hhzc; for(var i=0; i<this.tMe.length; i++) { this.gwQ['gWQ'][this.SmS[i]] ={}
; if((!isNaN(haMAX) && Math.abs(this.SmS[i]) <= haMAX) || isNaN(haMAX)) { xc = this.Uiq*Math.sin(d2rad(this.tMe[i])); zc = this.Uiq*Math.cos(d2rad(this.tMe[i]))*Math.sin(this.AYf); this.gwQ['gWQ'][this.SmS[i]]['xc'] = xc; this.gwQ['gWQ'][this.SmS[i]]['zc'] = zc; r = Math.sqrt(xc*xc + zc*zc); theta = (xc == 0) ? 0 : rad2d(Math.atan(zc/xc)); theta += ((zc < 0 && xc < 0) || (zc > 0 && xc < 0)) ? 180 : 0 ; theta += (zc < 0 && xc > 0) ? 360 : 0 ; cstr += "<tr>" +"<td style='text-align:right'>"+c2tf(12+this.SmS[i]/15,true,true)+"</td>" + "<td>"+xc.toFixed(2)+"</td>" + "<td>"+zc.toFixed(2)+"</td>" + "<td>"+r.toFixed(2)+"</td>" + "<td>"+(gxo(xc,zc)).toFixed(2)+"</td>" + "</tr>"; }
hhour = parseFloat(this.tMe[i]) + 7.5/1; this.gwQ['GWQ'][hhour] ={}; if((!isNaN(haMAX) && Math.abs(hhour) <= haMAX) || isNaN(haMAX)) { hhxc = this.Uiq*Math.sin(d2rad(hhour)); hhzc = this.Uiq*Math.cos(d2rad(hhour))*Math.sin(this.AYf); this.gwQ['GWQ'][hhour]['xc'] = hhxc; this.gwQ['GWQ'][hhour]['zc'] = hhzc; r = Math.sqrt(hhxc*hhxc + hhzc*hhzc); cstr += "<tr>" +"<td title='Click to remove row from table.' "  +" style='text-align:right;white-space:nowrap;cursor:pointer' "  +" onclick='javascript:this.parentNode.parentNode.removeChild(this.parentNode);void(0);'>" +" <span style='font-size:4pt;color:#f88'>[X]</span> "  +c2tf(parseFloat(12+(hhour/1-this.msP/1)/15).toFixed(1),true,true) +"</td>" + "<td>"+hhxc.toFixed(2)+"</td>" + "<td>"+hhzc.toFixed(2)+"</td>" + "<td>"+r.toFixed(2)+"</td>" + "<td>"+(gxo(hhxc,hhzc)).toFixed(2)+"</td>" + "</tr>"; }
} cstr += "</table>"; var gstr = "<br /><table>" +"<tr><th colspan='4' style='letter-spacing:5px'>GNOMON</th></tr>" +"<tr>" + "<th>Date</th>" + "<th>X-Coor</th>" + "<th>Y-Coor</th>" + "</tr>"; var b,offset,b; for(var mon in GjE) { b = this.Uiq*Math.tan(d2rad(GjE[mon][1]['d']))*Math.cos(this.AYf); this.gwQ['Gwq'].push({'Decl':GjE[mon][1]['d'],'Date':mon+' 1','YCoor':b,'EoT':GjE[mon][1]['e']}
); gstr += "" +"<tr>" + "<td>"+mon+" 1</td>" + "<td>0</td>" + "<td>"+b.toFixed(2)+"</td>" + "</tr>"; } b = this.Uiq*Math.tan(d2rad(this.tSn))*Math.cos(this.AYf); this.gwQ['Gwq'].push({'Decl':this.tSn,'Date':'Jun 21','YCoor':b}
); gstr += "<tr><td>Dec 21</td><td>0</td><td>"+b.toFixed(2)+"</td></tr>"; b = this.Uiq*Math.tan(d2rad(this.QGD))*Math.cos(this.AYf); this.gwQ['Gwq'].push({'Decl':this.QGD,'Date':'Dec 21','YCoor':b}); gstr += "<tr><td>Jun 21</td><td>0</td><td>"+b.toFixed(2)+"</td></tr>"; gstr += "</table>"; var dec = (Math.abs(this.lat) > 90-Math.abs(this.tSn)) ? (90 - Math.abs(this.lat)) : this.tSn ; var bx1 = this.Uiq * Math.cos(this.AYf) * Math.sqrt( 1 - Math.pow(Math.sin(this.AYf)/Math.cos(d2rad(dec)),2)); var bx2 = this.Uiq * Math.cos(this.AYf) * Math.sqrt( 1 - Math.pow(Math.sin(this.AYf)/Math.cos(d2rad(0)),2)); var bxave = parseFloat((bx1/1 + bx2/1)/2).toFixed(2); var bxrng = Math.abs(parseFloat(bx1 - bx2).toFixed(2)); var bstr = '<br /><table><tr><th colspan="2">Bailey Point Locations</th></tr>'; bstr += '<tr><td>Aver Coor:</td><td>(+/- '+bxave+' , 0 )</td></tr>'; bstr += '<tr><td>Range:</td><td>'+bxrng+'</td></tr>'; bstr += '</table>'; dge("ddc").innerHTML = ostr+"<table><tr><td style='text-align:center' align='center' valign='top'>"+cstr+"</td><td style='text-align:center' align='center' valign='top'>"+gstr+"</td><td style='text-align:center' align='center' valign='top'>"+bstr+"</td></tr></table>"; dge("ddp").innerHTML = ostr+"<table><tr><td style='text-align:center' align='center' valign='top'>"+cstr+"</td><td style='text-align:center' align='center' valign='top'>"+gstr+"</td><td style='text-align:center' align='center' valign='top'>"+bstr+"</td></tr></table>"; }
, ktc : function() { if(this.SSs == 'ncP') { var mz = new Array(); var bz = new Array(); for(var ha in this.zi_) { if(this.zi_[ha].length > 1) { var dp1 = this.zi_[ha][0]; var dp2 = this.zi_[ha][this.zi_[ha].length-1]; delZ = dp2.bnT - dp1.bnT; delX = dp2.JGN - dp1.JGN; mz.push((Math.abs(delX) > 0.0001) ? delZ/delX: this.infinity); bz.push(dp1.bnT - mz[mz.length-1]* dp1.JGN); }
} var xcS = 0; var zcS = 0; var arrX = new Array(); var arrZ = new Array(); if(mz.length > 2) { for(var i=0; i<mz.length-2; i++) { var xc = (bz[i+1] - bz[i])/(mz[i] - mz[i+1]); arrX.push(xc); xcS += xc; var zc = mz[i]*xc + bz[i]; arrZ.push(zc); zcS += zc; }
var statX = qgj(arrX); var aveX = statX[0]; var stdX = statX[1]; var statZ = qgj(arrZ); var aveZ = statZ[0]; var stdZ = statZ[1]; var sumX=0; var sumZ=0; var xterms = 0; var zterms = 0; for(var i=0; i<arrX.length; i++) { if(Math.abs(arrX[i] - aveX) < stdX) { sumX += arrX[i]; xterms++; }
else { }  } for(var i=0; i<arrZ.length; i++) { if(Math.abs(arrZ[i] - aveZ) < stdZ) { sumZ += arrZ[i]; zterms++; } else { }  } this.tJW = sumX/xterms; this.Fyz = sumZ/zterms; }  } var dp1,dp2,theta,m,b,dpz,delX,delZ; if(sAY(0,0,this.tJW,this.Fyz) > this.infinity) {  }
else { for(var ha in this.zi_) { if(this.zi_[ha].length > 1) { dpz = sxa(this.zi_[ha][0],this.zi_[ha][this.zi_[ha].length-1]); dp1 = dpz[0]; dp2 = dpz[1]; delZ = dp2.bnT - dp1.bnT; delX = dp2.JGN - dp1.JGN; theta = gxo(delX,delZ); if(!this.cDw[ha]) this.cDw[ha] = {}
; this.cDw[ha]['theta'] = theta; this.cDw[ha]['decl'] = new Array(); this.cDw[ha]['radius'] = new Array(); if(dp1 == this.zi_[ha][0]) { for(var i=0; i<this.zi_[ha].length; i++) { this.cDw[ha]['decl'].push(this.zi_[ha][i].decl); this.cDw[ha]['radius'].push(sAY(this.tJW,this.Fyz,this.zi_[ha][i].JGN,this.zi_[ha][i].bnT)); }
} else { for(var i=this.zi_[ha].length-1; i>=0; i--) { this.cDw[ha]['decl'].push(this.zi_[ha][i].decl); this.cDw[ha]['radius'].push(sAY(this.tJW,this.Fyz,this.zi_[ha][i].JGN,this.zi_[ha][i].bnT)); }  }
}  }  } this.IMr(); function sxa(p1,p2) { var d1 = sAY(VFD.tJW,VFD.Fyz,p1.JGN,p1.bnT); var d2 = sAY(VFD.tJW,VFD.Fyz,p2.JGN,p2.bnT); var closest = (d1 < d2) ? p1 : p2 ; var furthest = (closest == p1) ? p2 : p1 ; return new Array(closest,furthest); }
}, EOP : function(target) { if(this.cTx['YTL'] && this.cTx['YTL'].length > 0) { if(dge('yGw'+target)) { dge('yGw'+target).parentNode.removeChild(dge('yGw'+target)); } var ostr = "<table><tr><th colspan='14' style='background:#f0f5f5;color:#800'>" + "<span onclick='oKK(\"zRC\",true)' style='float:right;border:1pt solid red;padding:0 2px 0 2px' class='WIF' title='Help'>?</span>" + "Equation of Time / Analemma Data</th></tr>" + "<tr><th>Hour Angle</th>" + "<th>Fields</th>"; for(var month in GjE) { ostr += "<th>"+month+" 1</th>"; }
ostr += "</tr>"; var MHJ = this.cTx['YTL'][0]; var fields = new Array(); for(var amonth in this.cTx[MHJ]) { for(var afield in this.cTx[MHJ][amonth]) { fields.push(afield); } break; } for(var i=0; i < this.cTx['YTL'].length; i++) { ha = this.cTx['YTL'][i]; ostr += "<tr><td rowspan='"+fields.length+"' valign='top' style='background:#f0f5f5;'><b>" + this.Lrg(ha,"ampm",false) +"</b><br />(" + ha + "<sup style='font-size:6pt'>DEGREES</sup>)</td>"; var bg; for(var j=0; j<fields.length; j++) { bg = (j%2 == 0) ? "#f8f8f8" : "#fff" ; ostr += (j==0) ? "" : "<tr>"; ostr += "<td title='"+this.cTx['UTN'][fields[j]]+"' style='font-weight:bold;background:"+bg+"'>"+fields[j]+"</td>"; for(var amonth in this.cTx[ha]) { ostr += "<td style='background:"+bg+"'>"+ parseFloat(this.cTx[ha][amonth][fields[j]]).toFixed(2) +"</td>"; }
ostr += "</tr>"; }  } ostr += "</table>"; var adiv = document.createElement("div"); adiv.setAttribute('id','yGw'+target); adiv.innerHTML = ostr; dge(target).appendChild(adiv); }  }, IMr : function() { var cstr = ''; if(this.SSs == 'YPj') { cstr = "<input title='Close' style='float:right;margin:0px 0px 0px 0px' type='button' class='close' onclick='this.parentNode.style.display=\"none\";' value='X' />" +"<div style='font-weight:bold;color:red;text-align:center'>There is no polar layout data for this dial type.</div>"; }
else { cstr = "<a class='top' style='float:left;position:relative;top:0px;left:0px' href='#top'>TOP</a>" + "<div id='ddp_blip'><input title='Close' style='float:right;margin:0px 0px 0px 0px' type='button' class='close' onclick='this.parentNode.parentNode.style.display=\"none\";' value='X' />" + "<img alt='Print' title='Print data table.' onclick='Lqf(\"ddp\");' style='cursor:pointer;margin:0px 10px 0px 10px;float:right' src='Dial_icon_print.gif' />" + "<span onclick='oKK(\"Arn\",true)' style='float:right;border:1pt solid red;padding:0 2px 0 2px' class='WIF' title='Help'>?</span></div>" + this.hGn("YqN"); cstr += "<table>"; var maxCols = 0; var nCols; for(var ha in this.cDw) { maxCols = (maxCols > this.cDw[ha]['radius'].length) ? maxCols : this.cDw[ha]['radius'].length; }
maxCols++; for(var ha in this.cDw) { nCols = this.cDw[ha]['radius'].length; var clockTime = this.ALq(ha); cstr += "<tr>" +"<th colspan='"+maxCols+"'><span style='color:#000'>Time: "+clockTime+"</span> | <span style='color:#800'>Hour Angle: "+ha+"</span> | " +"<span valign='top' style='font-size:9pt;cursor:pointer;color:#008' onclick='oKK(\"JNc\",true)' title='[?] Angle'>Theta: "+this.cDw[ha]['theta'].toFixed(2)+"</span>" +"</th>" +"</tr>"; var r1 = "<tr><td style='background:#e0e8ef'>DECL:</td>"; var r2 = "<tr><td style='background:#e0e8ef'>RADIUS:</td>"; for(var i=0; i<this.cDw[ha]['radius'].length; i++) {  { r1 += "<td style='text-align:left' align='left'>"+parseFloat(this.cDw[ha]['decl'][i]).toFixed(2) +"</td>"; r2 += "<td>" +parseFloat(this.cDw[ha]['radius'][i]).toFixed(2) +"</td>"; }
} r1 += "</tr>"; r2 += "</tr>"; cstr += r1 + r2; } cstr += "</table>"; } dge("ddp").innerHTML = cstr; }, LRx : function(thew) { var lTp = document.createElementNS(svgNS,"g"); lTp.setAttribute("id","lTp"); lTp.style.display = (dge("L_v").checked) ? 'block' : 'none'; thew.appendChild(lTp); if(this.tJW == this.infinity && this.Fyz == this.infinity) { var n = document.createTextNode("The dial origin is at infinity."); var t = document.createElementNS(svgNS,"text"); t.setAttribute("x",this.wcF*this.iKe/2); t.setAttribute("y",10); t.setAttribute("text-anchor","middle"); t.setAttribute("color","red"); t.setAttribute("style","font-size:8pt;color:red;"); t.appendChild(n); }
else { var title1,title2,plotx,plotz,coorx,coorz; if(this.Vgr == "parallel") { title1 = "<b>Substyle</b> : Projection of the style onto the plane of the dial."; title2 = "Substyle Coor: "; coorx = this.Xeu; coorz = this.WoN; }
else { title1 = "Projection of Earth axis passing through gnomon tip onto the plane of the dial." +"<br />This is the same thing as the <i>substyle</i> of a polar gnomon."; title2 = "Dial Center (point at which hour lines converge)."; coorx = this.tJW; coorz = this.Fyz; }
plotx = this.iKe*coorx + this.HTM; plotz = -this.iKe*coorz + this.WKM; var ph = document.createElementNS(svgNS,"path"); ph.setAttribute("d","M "+this.HTM+","+this.WKM+" L "+plotx+","+plotz); ph.setAttribute("onmouseover","lFc(evt,'"+title1+"');"); ph.setAttribute("onmouseout","zJF();"); ph.setAttribute("id",'dialorigin1'); ph.setAttribute("fill","none"); ph.setAttribute("stroke","#888"); ph.setAttribute("stroke-width",1); ph.setAttribute("cursor","pointer"); lTp.appendChild(ph); var circ = document.createElementNS(svgNS,"circle"); circ.setAttribute("class","substyle"); circ.setAttribute("onmouseover","lFc(evt,'"+title2+ " <br /> Coor: ( "+parseFloat(coorx).toFixed(2)+" , "+parseFloat(coorz).toFixed(2)+" )');"); circ.setAttribute("onmouseout","zJF();"); circ.setAttribute("cursor","pointer"); ph.setAttribute("id",'dialorigin2'); circ.setAttribute("cx",plotx); circ.setAttribute("cy",plotz); circ.setAttribute("fill","#00f"); circ.setAttribute("r",this.Ana['path']['substyle'][0]); lTp.appendChild(circ); }
this.Gxh(thew); }, Gxh : function(wrpr) { if(!wrpr){wrpr = this.WAM;} var title,cx,cy; var cntr = ''; switch(this.SSs) { case "BlP": cntr = (this.Vgr == "parallel") ? " and Center" : ""; title = "Dial Origin"+cntr+": <br /> Coor: ( 0 , 0 ) <br />Intersection of style and dial plane."; cx = this.HTM; cy = this.WKM; break; case "ncP": title = "Dial Origin (Intersection of dial threads)."; cx = this.HTM; cy = this.WKM; break; case "ZPB": title = "Dial Origin"; cx = this.HTM; cy = this.WKM; break; case "YPj": title = "Dial Origin"; if(this.__j == 'ipf') { cx = this.HTM; cy = this.WKM + this.iKe*this.mlQ; }
else { cx = 0; cy = 0; } break; case "tnf" : title = "Origin"; cx = this.HTM; cy = this.WKM; break; default: title = "Dial Origin"; warning("UNDETECTED DIAL TYPE WHILE DRAWING CENTER: <B>"+this.SSs+"</B>",true); break; }
var or = 3; var c = document.createElementNS(svgNS,"circle"); c.setAttribute("class","origin"); c.setAttribute("onmouseover","lFc(evt,'"+title+"');"); c.setAttribute("onmouseout","zJF();"); c.setAttribute("id","dialorigin"); c.setAttribute("cx",cx); c.setAttribute("cy",cy); c.setAttribute("r",parseFloat(this.Ana['circle']['origin'][0])*6); c.setAttribute("fill","#fff"); c.setAttribute("stroke","#f00"); c.setAttribute("cursor","pointer"); c.setAttribute("stroke-width",this.Ana['circle']['origin'][0]); wrpr.appendChild(c); var pth = document.createElementNS(svgNS,"path"); pth.setAttribute("d","M "+cx+","+(cy-or)+" L "+cx+","+(cy+or)); pth.setAttribute("onmouseover","lFc(evt,'"+title+"');"); pth.setAttribute("onmouseout","zJF();"); pth.setAttribute("id","mLy"); pth.setAttribute("class","origin"); pth.setAttribute("fill","none"); pth.setAttribute("stroke","#f00"); pth.setAttribute("stroke-width",this.Ana['path']['origin'][0]); pth.setAttribute("cursor","pointer"); wrpr.appendChild(pth); var pth2 = document.createElementNS(svgNS,"path"); pth2.setAttribute("d","M "+(cx-or)+","+(cy)+" L "+(cx+or)+","+(cy)); pth2.setAttribute("onmouseover","lFc(evt,'"+title+"');"); pth2.setAttribute("onmouseout","zJF();"); pth2.setAttribute("class","origin"); pth2.setAttribute("fill","none"); pth2.setAttribute("id","YZb"); pth2.setAttribute("stroke","#f00"); pth2.setAttribute("stroke-width",0.5); pth2.setAttribute("cursor","pointer"); wrpr.appendChild(pth2); }
, EBU : function(o) { cleardb(); this.pcX = parseFloat(document.forms[0]["pcX"].value); this.SSs = (noY) ? noY : this.SSs; this.lat = document.forms[0]["lat"].value; this.hemisphere = "North"; if(parseFloat(this.lat) < 0) { this.hemisphere = "South"; }
this.msp = document.forms[0]["msp"].value; this.oyQ = document.forms[0]["oyQ"].value; this.LNV = document.forms[0]["LNV"].value; this.rKk = document.forms[0]["rKk"].value; this.FFN = 90 - parseFloat(this.rKk); this.AYf = d2rad(this.lat); this.Kep = d2rad(this.msp); this.Wic = document.forms[0]["Wic"].value; this.wcF = document.forms[0]["wcF"].value; this.Fry = document.forms[0]["Fry"].value; this.Tlw = ( parseFloat(this.Fry) > parseFloat(this.wcF) ) ? 5*this.Fry : 5*this.wcF ; this.Uiq = document.forms[0]["Uiq"].value; this.AxD = document.forms[0]["AxD"].value; this.pDT = document.forms[0]["pDT"].value; for(var i=0; i<document.forms[0].elements.length; i++) { if((document.forms[0].elements[i].name == "rRJ") && (document.forms[0].elements[i].checked == true)) { this.rRJ = document.forms[0].elements[i].value; }
if((document.forms[0].elements[i].name == "Vgr") && (document.forms[0].elements[i].checked == true)) { this.Vgr = document.forms[0].elements[i].value; } if((document.forms[0].elements[i].name == "__j") && (document.forms[0].elements[i].checked == true)) { this.__j = document.forms[0].elements[i].value; }
if((document.forms[0].elements[i].name == "JcA") && (document.forms[0].elements[i].checked == true)) { this.JcA = document.forms[0].elements[i].value; }  } this.wcF = (this.SSs == "YPj") ? 2*Math.PI*this.Uiq : this.wcF; this.SdN(); this.WoK(); this.nIq(); }
, YeR : function(dvar) { if(tp_layout.enabled){tp_layout.tplo_reload_all();} if(dge("dialsetup").style.display == "block") { this.SbG("close"); } CkQ(this.SSs,dvar); if(!this.xFU) { this.Awt(); } if(!this.xFU) { warning("Unable to calculate dial...!?...execution halted.",true); return; }
if(dge("WAM")) { this.aYi.removeChild(dge("WAM")); } this.WAM = document.createElementNS(svgNS,"g"); this.WAM.setAttribute("id","WAM"); this.aYi.appendChild(this.WAM); this.iDj(this.WAM); if((this.SSs == "BlP") || (this.SSs == "ncP")) { this.QBG(this.WAM); this.ktc(); if(this.SSs == "BlP") { this.LRx(this.WAM); }
else if(this.SSs == "ncP") { this.Vim(this.WAM); this.hNW(this.WAM); } this.ZlA(this.WAM); } else if(this.SSs == "ZPB") { this.wvU(this.WAM); } else if(this.SSs == "YPj") { dge("ddc").innerHTML = ""; this.ZNx(this.WAM); if(this.__j == 'ipf') { this.QBG(this.WAM); this.ZlA(this.WAM); }
} else if(this.SSs == 'tnf') { this.GXK(); } this.Ydk(this.WAM,this.rRJ); this.hGn(); showZoom(); show_north(); this.iLI(); dge("Dialwrapper").style.display = "block"; dge("ZaA").style.display = "block"; dge("ZaA").innerHTML = "<img title='Print Dial Graphic' alt='Print' onclick='printDialGraphic();' style='cursor:pointer;margin:0px 5px 0 0;' src='Dial_icon_print.gif' />" + "Dial Type: <b style='color:red;font-variant:small-caps'>"+this.sSS[this.SSs]+"</b>"; this.Ini(); this.tCI(); if(this.SSs=='YPj' && this.__j=='iPF' && dge('SGl').style.display=='none'){dge('xjO').click();}
ZvB(); }, GXK : function(cb) { var n = new Array(); for(var i=0; i<this.WAM.childNodes.length; i++) {n.push(this.WAM.childNodes[i]);} for(var i=0; i<n.length; i++) {this.WAM.removeChild(n[i]);} this.xXi(this.WAM); var mfac = (cb && cb.checked) ? -1 : 1 ; var fntsz=8; var maxx = -1000; var minx = 1000; var maxy = -1000; var miny = 1000; var xv,yv,sx,sy,lbl,txt; for(var m in GjE) { for(var d in GjE[m]) { xv = (this.JcA == 'anl') ? parseFloat(GjE[m][d]['e']) : parseFloat(GjE[m][d]['n']); maxx = (maxx > xv) ? maxx : xv ; minx = (minx < xv) ? minx : xv ; yv = (this.JcA == 'anl') ? parseFloat(GjE[m][d]['d']) : parseFloat(GjE[m][d]['e']); maxy = (maxy > yv) ? maxy : yv ; miny = (miny < yv) ? miny : yv ; }
} sx = (Math.abs(maxx) > Math.abs(minx)) ? Math.abs(maxx) : Math.abs(minx) ; sy = (Math.abs(maxy) > Math.abs(miny)) ? Math.abs(maxy) : Math.abs(miny) ; this.sx = 1.1*sx; this.sy = mfac*1.1*sy; var pwrapper = FWe({'type':'g','id':'eotPathWrapper'}
); this.WAM.appendChild(pwrapper); var cwrapper = FWe({'type':'g','id':'eotCircleWrapper'}); this.WAM.appendChild(cwrapper); var cnt = 0; var ltr,xc,zc; var pstr = ''; if(this.JcA == 'anl') { var ap = 'M'+c2gs('x',-this.wcF/2)+',' +c2gs('z',0) +' L '+c2gs('x',this.wcF/2)+',' +c2gs('z',0); this.WAM.appendChild(FWe({ 'type':'path', "d":ap, "onmouseover":"lFc(evt,'Equation of Time Axis');", "onmouseout":"zJF();", "id":"eotanaxaxis", "fill":"none", "stroke":"#000", "stroke-width":0.5, "cursor":"pointer" }
)); ap = 'M'+c2gs('x',0)+',' +c2gs('z',-this.Fry/2) +' L '+c2gs('x',0)+',' +c2gs('z',this.Fry/2); this.WAM.appendChild(FWe({ 'type':'path', "d":ap, "onmouseover":"lFc(evt,'Solar Declination Axis');", "onmouseout":"zJF();", "id":"eotanayaxis", "fill":"none", "stroke":"#000", "stroke-width":0.5, "cursor":"pointer" }
)); lbl = document.createTextNode('Year: '+this.pcX); txt = FWe({ 'type':"text", "x":c2gs('x',0), "y":c2gs('z',-this.Fry/4), "fill":"#000", "font-weight":"bold", "text-anchor":"middle", "style":"font-size:"+fntsz+"pt" }
); txt.appendChild(lbl); this.WAM.appendChild(txt); lbl = document.createTextNode('Sun Fast'); txt = FWe({ 'type':"text", "x":c2gs('x',this.wcF/4), "y":c2gs('z',this.Fry*(6)/this.sy/2), "fill":"#080", "font-style":"italic", "font-weight":"normal", "text-anchor":"middle", "style":"font-size:"+(fntsz)+"pt" }
); txt.appendChild(lbl); this.WAM.appendChild(txt); lbl = document.createTextNode('Sun Slow'); txt = FWe({ 'type':"text", "x":c2gs('x',-this.wcF/4), "y":c2gs('z',this.Fry*(8)/this.sy/2), "fill":"#080", "font-style":"italic", "font-weight":"normal", "text-anchor":"middle", "style":"font-size:"+(fntsz)+"pt" }
); txt.appendChild(lbl); this.WAM.appendChild(txt); var earr = new Array(-15,-10,-5,5,10,15); for(var i=0; i<earr.length; i++) { ap = 'M' +c2gs('x',this.wcF*earr[i]/this.sx/2)+',' +c2gs('z',-this.Fry/2) +' L ' +c2gs('x',this.wcF*earr[i]/this.sx/2)+',' +c2gs('z',this.Fry/2); this.WAM.appendChild(FWe({ 'type':'path', "d":ap, "onmouseover":"lFc(evt,'EQT: "+earr[i]+"');", "onmouseout":"zJF();", "id":"eotanayaxis"+earr[i], "fill":"none", "stroke":"#000", "stroke-dasharray":"5", "stroke-width":0.3, "cursor":"pointer" }
)); lbl = document.createTextNode(earr[i]); txt = FWe({ 'type':"text", 'cursor':'pointer', "x":c2gs('x',this.wcF*earr[i]/this.sx/2), "y":c2gs('z',0), "onmouseover":"lFc(evt,'EQT: "+earr[i]+"');", "onmouseout":"zJF();", "fill":"#800", "id":"eotyaxis"+earr[i], "font-weight":"bold", "text-anchor":"middle", "style":"font-size:"+fntsz+"pt" }
); txt.appendChild(lbl); this.WAM.appendChild(txt); } var darr = new Array(-20,-15,-10,-5,5,10,15,20); for(var i=0; i<darr.length; i++) { ap = 'M' +c2gs('x',-this.wcF/2)+',' +c2gs('z',this.Fry*darr[i]/this.sy/2) +' L ' +c2gs('x',this.wcF/2)+',' +c2gs('z',this.Fry*darr[i]/this.sy/2); this.WAM.appendChild(FWe({ 'type':'path', "d":ap, "onmouseover":"lFc(evt,'DECL: "+darr[i]+"');", "onmouseout":"zJF();", "id":"eotanaxaxis"+darr[i], "fill":"none", "stroke":"#f00", "stroke-dasharray":"5", "stroke-width":0.3, "cursor":"pointer" }
)); lbl = document.createTextNode(darr[i]); txt = FWe({ 'type':"text", 'cursor':'pointer', "x":c2gs('x',0), "y":c2gs('z',this.Fry*darr[i]/this.sy/2), "onmouseover":"lFc(evt,'DECL: "+darr[i]+"');", "onmouseout":"zJF();", "fill":"#800", "id":"declyaxis"+darr[i], "font-weight":"bold", "text-anchor":"middle", "style":"font-size:"+fntsz+"pt" }
); txt.appendChild(lbl); this.WAM.appendChild(txt); } var VnF = FWe({'type':'g','id':'SCg'}); this.WAM.appendChild(VnF); var circarr = new Array(); var lx,lz,min,sec,sgn; for(var m in GjE) { for(var d in GjE[m]) { ltr = (cnt==0) ? 'M' : 'L' ; GjE[m][d]['x'] = parseFloat(this.wcF*parseFloat(GjE[m][d]['e'])/this.sx/2).toFixed(2); GjE[m][d]['y'] = parseFloat(this.Fry*parseFloat(GjE[m][d]['d'])/this.sy/2).toFixed(2); xc = c2gs('x',GjE[m][d]['x']); zc = c2gs('z',GjE[m][d]['y']); pstr += ltr+''+xc+','+zc+' '; sgn = (GjE[m][d]['e'] < 0) ? '-' : '' ; min = parseInt(GjE[m][d]['e']); sec = Math.abs((parseFloat(GjE[m][d]['e']) - min)*60).toFixed(0); min = Math.abs(min); cwrapper.appendChild(FWe({ 'type':"circle", 'id':'dpoint'+m+d, 'class':'NVq', "onmouseover":"lFc(evt,'<b>"+m+" "+d+"</b><br />EoT: "+sgn+min+"<sup>min</sup> "+sec+"<sup>sec</sup><br />DECL: "+parseFloat(GjE[m][d]['d']).toFixed(2)+"<br />Coor:( "+GjE[m][d]['x']+" , "+GjE[m][d]['y']+" )');", "onmouseout":"zJF();", "cursor":"pointer", "cx":xc, "cy":zc, "fill":"#008", "r":1 }
)); if(d == 1) { this.wNs(VnF,m,d,true); if(m=='Jan') { lx = xc; lz = zc; }  } cnt++; }  } pwrapper.appendChild(FWe({ 'type':'path', "d":pstr, "title":"Equation of Time: "+this.pcX, "onmouseover":"lFc(evt,'Equation of Time: "+this.pcX+"');", "onmouseout":"zJF();", "id":"equationoftime", "fill":"none", "stroke":"#00f", "stroke-width":0.01, "cursor":"pointer" }
)); } else if(this.JcA == 'std') { var ap = 'M'+c2gs('x',0)+',' +c2gs('z',0) +' L '+c2gs('x',this.wcF)+',' +c2gs('z',0); this.WAM.appendChild(FWe({ 'type':'path', "d":ap, "onmouseover":"lFc(evt,'Calendar Date');", "onmouseout":"zJF();", "id":"eotanaxaxis", "fill":"none", "stroke":"#000", "stroke-width":0.5, "cursor":"pointer" }
)); lbl = document.createTextNode('Year: '+this.pcX); txt = FWe({ 'type':"text", "x":c2gs('x',this.wcF/2), "y":c2gs('z',this.Fry*0.9/2), "fill":"#000", "font-weight":"bold", "text-anchor":"middle", "style":"font-size:"+fntsz+"pt" }
); txt.appendChild(lbl); this.WAM.appendChild(txt); lbl = document.createTextNode('Sun Fast'); txt = FWe({ 'type':"text", "x":c2gs('x',this.wcF/2), "y":c2gs('z',mfac*this.Fry/4), "fill":"#080", "font-style":"italic", "font-weight":"normal", "text-anchor":"middle", "style":"font-size:"+(fntsz)+"pt" }
); txt.appendChild(lbl); this.WAM.appendChild(txt); lbl = document.createTextNode('Sun Slow'); txt = FWe({ 'type':"text", "x":c2gs('x',this.wcF/2), "y":c2gs('z',-mfac*this.Fry/4), "fill":"#080", "font-style":"italic", "font-weight":"normal", "text-anchor":"middle", "style":"font-size:"+(fntsz)+"pt" }
); txt.appendChild(lbl); this.WAM.appendChild(txt); var darr = new Array(-15,-10,-5,5,10,15); for(var i=0; i<darr.length; i++) { ap = 'M' +c2gs('x',0)+',' +c2gs('z',this.Fry*darr[i]/this.sy/2) +' L ' +c2gs('x',this.wcF)+',' +c2gs('z',this.Fry*darr[i]/this.sy/2); this.WAM.appendChild(FWe({ 'type':'path', "d":ap, "onmouseover":"lFc(evt,'EoT: "+darr[i]+"');", "onmouseout":"zJF();", "id":"eotanaxaxis"+darr[i], "fill":"none", "stroke":"#f00", "stroke-dasharray":"5", "stroke-width":0.3, "cursor":"pointer" }
)); lbl = document.createTextNode(darr[i]); txt = FWe({ 'type':"text", 'cursor':'pointer','dy':0, "x":c2gs('x',2), "y":c2gs('z',this.Fry*darr[i]/this.sy/2), "onmouseover":"lFc(evt,'EoT: "+darr[i]+"<sup>min</sup>');", "onmouseout":"zJF();", "fill":"#800", "id":"declyaxis"+darr[i], "font-weight":"bold", "text-anchor":"middle", "style":"font-size:"+fntsz+"pt" }
); txt.appendChild(lbl); this.WAM.appendChild(txt); } var eot,min,sec; for(var m in GjE) { for(var d in GjE[m]) { ltr = (cnt==0) ? 'M' : 'L' ; GjE[m][d]['x'] = parseFloat(this.wcF*parseInt(GjE[m][d]['n'])/365).toFixed(2); GjE[m][d]['y'] = parseFloat(this.Fry*GjE[m][d]['e']/this.sy/2).toFixed(2); xc = c2gs('x',GjE[m][d]['x']); zc = c2gs('z',GjE[m][d]['y']); if(($OS != "Linux") || ($OS == "Linux" && d!=1)) {pstr += ltr+''+xc+','+zc+' ';}
if((d==1 && m!='Jan') || (d==1 && $OS == 'Linux')) { ap = 'M' +xc+',' +c2gs('z',-this.Fry/2) +' L ' +xc+',' +c2gs('z',this.Fry/2); this.WAM.appendChild(FWe({ 'type':'path', "d":ap, "onmouseover":"lFc(evt,'DATE: <b>"+m+" "+d+"</b>');", "onmouseout":"zJF();", "id":"eotstdyaxis"+m+d, "fill":"none", "stroke":"#000", "stroke-dasharray":"5", "stroke-width":0.3, "cursor":"pointer" }
)); } if(d==15) { lbl = document.createTextNode(m); txt = FWe({ 'type':"text", 'cursor':'pointer', "x":xc, "y":c2gs('z',0), "onmouseover":"lFc(evt,'DATE: "+m+" "+d+"');", "onmouseout":"zJF();", "fill":"#800", "id":"eotyaxis"+m, "font-weight":"bold", "text-anchor":"middle", "style":"font-size:"+(fntsz/1.25)+"pt" }
); txt.appendChild(lbl); this.WAM.appendChild(txt); } min = parseInt(GjE[m][d]['e']); sec = ((parseFloat(GjE[m][d]['e']) - min)*60).toFixed(0); if(($OS != 'Linux') || (d==1 && $OS == 'Linux')) { cwrapper.appendChild(FWe({ 'type':"circle", 'id':'dpoint'+m+d, 'class':'NVq', "onmouseover":"lFc(evt,'<b>"+m+" "+d+"</b><br />EoT: "+min+"<sup>min</sup> "+sec+"<sup>sec</sup><br />Coor:( "+GjE[m][d]['x']+" , "+GjE[m][d]['y']+" )');", "onmouseout":"zJF();", "cursor":"pointer", "cx":xc, "cy":zc, "fill":"#008", "r":1 }
)); } cnt++; }  }  } else { } pwrapper.appendChild(FWe({ 'type':'path', "d":pstr, "onmouseover":"lFc(evt,'Equation of Time: "+this.pcX+"');", "onmouseout":"zJF();", "id":"equationoftime", "fill":"none", "stroke":"#000", "stroke-width":0.01, "cursor":"pointer" }
)); jzv("right",0.0001); var ostr = this.Zze("TeY") + this.hGn("YqN"); ostr += '<table>'; var rows = []; var rows2 = []; var r2 = '<tr>'; for(var m in GjE) { if(!rows[0]){rows.push('');} rows[0] += '<th colspan="2">'+m+'</th>'; r2 += '<td colspan="2" align="center">( X , Y )</td>'; if(!rows2[0]){rows2.push('');}
for(var i=1; i<32; i++) { if(!rows[i]){rows.push('');} if(!rows2[i]){rows2.push('');} if(GjE[m][i]) { rows[i] += '<td class="dtable" colspan="2">( '+GjE[m][i]['x']+' , '+GjE[m][i]['y']+' )</td>'; rows2[i] += '<td class="dtable" colspan="2">[ '+parseFloat(GjE[m][i]['e']).toFixed(2)+' , '+parseFloat(GjE[m][i]['d']).toFixed(2)+' ]</td>'; }
else { rows[i] += '<td class="dtable">---</td><td class="dtable">---</td>'; rows2[i] += '<td class="dtable">---</td><td class="dtable">---</td>'; }  }  } r2 += '</tr>'; for(var i=0; i<rows.length; i++) { ostr += "<tr>"+((i==0) ? "<th colspan='2' rowspan='1'>Day</th>" : "<td onclick='this.parentNode.parentNode.removeChild(this.parentNode.nextSibling);this.parentNode.parentNode.removeChild(this.parentNode)' style='cursor:pointer' class='gmetal' rowspan='2'>"+i+"<br /><a title='Click to \"prune\" this row from the table.' style='font-size:7pt' href='javascript:void(0)'>[X]</a></td><td>(x,y)</td>" )+rows[i]+"</tr>"; if(i==0){ostr += '';}
else{ostr += "<tr style='background:#fff8f8'><td>[eot,dec]</td>"+rows2[i]+"</tr>";} } ostr += '</table>'; dge("ddc").innerHTML = ostr; }, wNs : function(VnF,m,d,shwtxt) { xc = c2gs('x', GjE[m][d]['x']); zc = c2gs('z', GjE[m][d]['y']); var fntsz = 8; var len = 3; var ntheta = parseInt(GjE[m][d]['pa']) + 90; if(this.sy && this.sy < 0) { ntheta = 360 - ntheta; }
var dx = parseFloat(len * Math.cos(d2rad(ntheta))).toFixed(0); var dz = parseFloat(len * Math.sin(d2rad(ntheta))).toFixed(0); var x1 = parseFloat(xc) + parseFloat(dx); var z1 = parseFloat(zc) - parseFloat(dz); var x2 = parseFloat(xc) - parseFloat(dx); var z2 = parseFloat(zc) + parseFloat(dz); var pstr = 'M '+x1+','+z1+' L '+x2+','+z2; var sgn = (parseFloat(GjE[m][d]['e']) < 0 ) ? '-' : '' ; var min = parseInt(GjE[m][d]['e']); var sec = Math.abs((parseFloat(GjE[m][d]['e']) - min)*60).toFixed(0); min = Math.abs(min); VnF.appendChild(FWe({ 'type':'path', "d":pstr, 'cursor':'pointer', 'class':'eotdate', 'id':'mhN'+m+d, "onmouseover":"lFc(evt,'Date: <b>"+m+' '+d+'</b><br /> EoT: '+sgn+min+"<sup>m</sup> "+sec+"<sup>s</sup><br />Coor:( " +GjE[m][d]['x']+ " , "+GjE[m][d]['y']+" )');", "onmouseout":"zJF();", "fill":"none", "stroke":"#00f", "stroke-width":this.Ana['path']['eotdate'][0]/5, "cursor":"pointer" }
)); if(shwtxt) { lbl = document.createTextNode(m+' '+d); txt = FWe({ 'type':"text", "x":xc, "y":zc, "dx":10, "dy":0, "fill":"#008", "id":"datetxt"+m+d, "font-weight":"normal", "text-anchor":"start", "style":"font-size:"+fntsz+"pt" }
); txt.appendChild(lbl); VnF.appendChild(txt); } VnF.appendChild(FWe({ 'type':'circle', 'r':this.Ana['circle']['eotdate'][0], 'cursor':'pointer', 'class':'eotdate', 'id':'eot'+m+d, 'fill': "#f00", "onmouseover":"lFc(evt,'Date: <b>"+m+' '+d+'</b><br /> EoT: '+sgn+min+"<sup>min</sup> "+sec+"<sup>sec</sup> <br />Coor:( " +GjE[m][d]['x']+ " , "+GjE[m][d]['y']+" )');", "onmouseout":"zJF();", 'cy':zc, 'cx':xc }
)); }, O_p : function(cb) { var dn = cb.value; if(dge('_px'+dn)) { dge('_px'+dn).style.display = (cb.checked) ? 'block' : 'none' ;  } else { var w = FWe({'type':'g','id':'_px'+dn}); this.WAM.appendChild(w); for(var m in GjE) { for(var d in GjE[m]) { if(d == dn) { this.wNs(w,m,d,false) }
}  }  } jzv('right',0.0001); }, xXi : function(wrapper) { var w = this.iKe * this.wcF; var h = this.iKe * this.Fry; var os1 = (this.JcA == 'anl') ? w/2 : 0; var os2 = (this.JcA == 'anl') ? w/2 : w; var d = "M"+ (this.HTM - os1)+","+(this.WKM - h/2)+" "  +"L"+ (this.HTM - os1)+","+(this.WKM + h/2)+" "  +"L"+ (this.HTM + os2)+","+(this.WKM + h/2)+" "  +"L"+ (this.HTM + os2)+","+(this.WKM - h/2)+" "  +"L"+ (this.HTM - os1)+","+(this.WKM - h/2) ; wrapper.appendChild(FWe({'type':'path','fill':'none','stroke':'#000','stroke-width':'1.3','d':d}
)); }, hNW : function(wp) { var bwrap; if(dge('mSc')) { bwrap = dge('mSc'); } else { bwrap = FWe({'type':'g','id':'mSc'}); wp.appendChild(bwrap); } var ofs = 3; var dcxg = c2gs('x',this.tJW); var dczg = c2gs('z',this.Fyz); var dcx = parseFloat(this.tJW).toFixed(3); var dcz = parseFloat(this.Fyz).toFixed(3); var t = "Dial Center: ( "+dcx+' , '+dcz+" ) Point at which hour lines converge."; bwrap.appendChild(FWe({ 'type':"circle", 'id':'ZUf', "onmouseover":"lFc(evt,'"+t+"');", "onmouseout":"zJF();", "cursor":"pointer", "cx":dcxg, "cy":dczg, "fill":"#fff", "stroke":"#00f", "stroke-width":"0.5", "r":3 }
)); bwrap.appendChild(FWe({ 'type':'path', 'id':'FFx', "onmouseover":"lFc(evt,'"+t+"');", "onmouseout":"zJF();","d":"M "+dcxg+","+(parseFloat(dczg)-parseFloat(ofs))+" L "+dcxg+","+(parseFloat(dczg)+parseFloat(ofs)), "class":"origin", "fill":"none", "stroke":"#00f", "stroke-width":this.Ana['path']['origin'][0], "cursor":"pointer" }
)); bwrap.appendChild(FWe({ 'type':'path', 'id':'JTn', "onmouseover":"lFc(evt,'"+t+"');", "onmouseout":"zJF();","d":"M "+(parseFloat(dcxg)-parseFloat(ofs))+","+(dczg)+" L "+(parseFloat(dcxg)+parseFloat(ofs))+","+(dczg), "fill":"none", "stroke":"#00f", "stroke-width":this.Ana['path']['origin'][0], "cursor":"pointer" }
)); this.Gxh(wp); }, wanx : false, ZNx : function(wrapr) { var oadj = (this.__j == 'ipf') ? 2 : 1 ; var w = this.iKe * 2*Math.PI*this.Uiq; var h = this.iKe * this.Fry; var d; if(this.__j == 'ipf') { d = "M "+(this.HTM - w/2)+","+(this.WKM) +" "  + "L "+ (this.HTM - w/2)+","+(this.WKM + h)+" "  + "L "+ (this.HTM + w/2)+","+(this.WKM + h)+" "  + "L "+ (this.HTM + w/2)+","+(this.WKM ) +" "  + "L "+ (this.HTM - w/2)+","+(this.WKM) +" "; }
else { d = "M "+(this.HTM)+","+(this.WKM) +" "  + "L "+ (this.HTM)+","+(this.WKM + h)+" "  + "L "+ (this.HTM + w)+","+(this.WKM + h)+" "  + "L "+ (this.HTM + w)+","+(this.WKM ) +" "  + "L "+ (this.HTM)+","+(this.WKM) +" "; }
wrapr.appendChild(FWe({'type':'path','id':'cylindercanvas','fill':'none','stroke':'#000','stroke-width':'1.0','d':d})); var inset = 0.0; var lbls; var rot,fntsz,bscale; if(this.__j == "ipf") { rot=0; fntsz=8; bscale = 0.98; lbls = { "1.0": "N", "0.75": "NE", "0.5": "E", "0.25": "SE", "0": "S", "-0.25": "SW", "-0.5": "W", "-0.75": "NW", "-1.0":"N" }
; } else { rot=90; fntsz=8; bscale = 0.995; lbls = {}; var ard = new Array(1,11,21); var frx; for(var m in GjE) { for(var i=0; i<ard.length; i++) { frx = parseFloat(GjE[m][ard[i]]['n'])/365; lbls[frx] = ard[i]; }
}  } var tpos,mx,my; var tcnt = 0; var mname = ''; for(var os in lbls) { tpos = (tcnt==0) ? bscale*parseFloat(os) : parseFloat(os) ; if(this.__j == 'iPF' && tcnt % 3 == 0) { mname = getMonthName(parseInt(tcnt/3)); }
mx = this.HTM+parseFloat(os)*this.wcF*this.iKe/oadj, wrapr.appendChild(FWe({ 'type':'path', "d":"M "+mx+","+0+" L "+mx+","+(this.iKe*this.Fry), "onmouseover":"lFc(evt,'Cylinder Marker for: "+mname+' '+lbls[os]+"');", "onmouseout":"zJF();", "id":"cylindermarker"+mname+lbls[os], "fill":"none", "stroke":"#ddd", "stroke-dasharray":"2", "stroke-width":1, "cursor":"pointer" }
)); if(this.__j == 'iPF' && tcnt % 3 == 0) { var nm = document.createTextNode(mname); var tm = FWe({ 'type':"text", "x":(this.HTM + parseFloat(tpos)*this.wcF*this.iKe/oadj + 7), "y":0.96*parseFloat(h), "fill":"#800", "id":"cylmarkertxt"+mname, "font-weight":"bold", "text-anchor":"middle", "style":"font-size:"+fntsz+"pt" }
); tm.appendChild(nm); wrapr.appendChild(tm); } tcnt++; var n = document.createTextNode(lbls[os]); var t = FWe({'type':"text", "x":(this.HTM + parseFloat(tpos)*this.wcF*this.iKe/oadj +0), "y":0.98*parseFloat(h), "fill":"#800", "id":"cylmarkertxt"+mname+lbls[os], "font-weight":"normal", "text-anchor":"middle", "style":"font-size:"+fntsz+"pt"}
); t.appendChild(n); wrapr.appendChild(t); } this.Gxh(wrapr); if(this.__j == 'ipf') { var minD; var pCJ,eSt; for(var ha in this.zi_) { d = ''; minD = this.decl[this.decl.length-1]; if(this.zi_[ha].length > 1) { this.XtZ[ha] = {}
; this.XtZ[ha]['x1'] = this.HTM + this.iKe*parseFloat(this.zi_[ha][0].JGN); this.XtZ[ha]['z1'] = this.WKM - this.iKe*parseFloat(this.zi_[ha][0].bnT); this.XtZ[ha]['x2'] = this.HTM + this.iKe*parseFloat(this.zi_[ha][this.zi_[ha].length-1].JGN); this.XtZ[ha]['z2'] = this.WKM - this.iKe*parseFloat(this.zi_[ha][this.zi_[ha].length-1].bnT); for(var i=0; i<this.zi_[ha].length; i++) { minD = (minD > this.zi_[ha][i].decl) ? this.zi_[ha][i].decl : minD; }
if(minD > this.decl[0]) { eSt = parseFloat(ha) + parseFloat(this.msP); pCJ = -1*rad2d(Math.atan(1/Math.tan(this.AYf) * Math.cos(d2rad(eSt)))); } for(var i=0; i<this.zi_[ha].length; i++) { ltr = (i==0) ? 'M' : 'L'; if(pCJ && eSt) { var adp = new EoK(this.SSs,eSt,pCJ+=.01); d += 'M' + (this.HTM+this.iKe*parseFloat(adp.JGN)) +","+ (this.WKM - this.iKe*parseFloat(adp.bnT)); ltr = 'L'; this.XtZ[ha]['x1'] = this.HTM + this.iKe*parseFloat(adp.JGN); this.XtZ[ha]['z1'] = this.WKM - this.iKe*parseFloat(adp.bnT); pCJ = null; eSt = null; }
d += ltr + (this.HTM+this.iKe*parseFloat(this.zi_[ha][i].JGN)) +","+ (this.WKM - this.iKe*parseFloat(this.zi_[ha][i].bnT)); var decl1,decl2,incr; if(i != this.zi_[ha].length-1) { decl1 = parseFloat(this.zi_[ha][i].decl); decl2 = parseFloat(this.zi_[ha][i+1].decl); incr = (decl2-decl1)/10; var idp; for(var idecl=decl1+incr; idecl<decl2; idecl+=incr) { idp = new EoK(this.SSs,this.zi_[ha][i].ha,idecl); d += 'L' + (this.HTM+this.iKe*parseFloat(idp.JGN)) +","+ (this.WKM - this.iKe*parseFloat(idp.bnT)); }
}  }  } wrapr.appendChild(FWe({'type':"path", "d":d, "onmouseover":"lFc(evt,'Hour Angle: "+ha+"');", "onmouseout":"zJF();", 'id':'kUi'+ha , "cursor":"pointer", "fill":"none", "class":"TMR", "stroke":"#444", "stroke-width":this.Ana['path']['TMR'][0]}
)); }  } else { this.wfy(wrapr,false,false,"#000","lcl","LOCAL TIME"); } this.IMr(); }, xyR : function(cb,sfx) { switch (sfx) { case 'txt': if(dge('Djx')) { dge('Djx').style.display = (cb.checked) ? "block" : "none"; }
else { warning("Could not find text element...?...",true); } break; default: var clr; switch(sfx) { case 'lcl': clr="#000"; break; case 'eot': clr="#f00"; break; case 'std': clr="#00f"; break; case 'swe': clr="#0a0"; break; default: clr='#000'; break; }
if(dge('tCD'+sfx)) { dge('xPc'+sfx).style.display = (cb.checked) ? "block" : "none"; dge('tCD'+sfx).style.display = (cb.checked) ? "block" : "none"; } else { var v1,v2,UVs; switch(sfx) { case 'lcl': v1=false; v2=false; UVs = 'LOCAL TIME'; break; case 'eot': v1=true; v2=false; UVs = 'LOCAL TIME corrected for EoT'; break; case 'std': v1=false;v2=true; UVs = 'STANDARD TIME'; break; case 'swe': v1=true; v2=true; UVs = 'STANDARD TIME corrected for EoT'; break; default: v1=false;v2=false; UVs = 'LOCAL TIME'; break; }
this.wfy(this.WAM,v1,v2,clr,sfx,UVs); } cb.parentNode.style.borderRight = (cb.checked) ? '8pt solid '+clr : 'none'; cb.parentNode.style.paddingRight="5px"; break; } jzv('right',0.0001); }, wfy : function(wrapr,_zr,MAN,clr,pid_str,UVs) { var dl = (MAN) ? this.msP/15 : 0 ; var Jwe = 'Djx'; var RnK = 'xPc'+pid_str; var NnO = 'tCD'+pid_str; var lIY; if(dge(NnO)) { lIY = dge(NnO); }
else { lIY = FWe({'type':'g','id':NnO}); wrapr.appendChild(lIY); } var dt,jd,scoor,ddecl,acirc,t,del,frac,title; var dims = 24*3600000; var dap,zed,ps,dcnt,xp,yp; var yr = (new Date()).getFullYear(); var dt = new Date(yr,0,1,12); bgMilliSec = dt.getTime(); var darr = new Array(); var dobj = {}
; for(var j=0; j<366; j++) { dobj[j] = {}; dt.setTime(bgMilliSec + (j-1)*dims); jd = new mfb(dt.getFullYear(),dt.getUTCMonth()+1,dt.getDate()); scoor = new FCM(jd.jday); darr.push(scoor.DECL); dobj[j]['mon'] = dt.getUTCMonth(); dobj[j]['day'] = dt.getDate(); dobj[j]['decl'] = scoor.DECL; dobj[j]['frac'] = j/365; if(_zr) { etime = new Hgb(scoor.time,scoor.longitude,scoor.ADB,scoor.eccentricity); dobj[j]['eot'] = etime.etime/60; }
} var maxz = {}; var hastr = {}; var haz = []; var mha = Math.acos(Math.tan(d2rad(23.5))*Math.tan(Math.abs(this.AYf))); mha = (isNaN(mha)) ? 12 : parseInt(rad2d(Math.PI - mha/1)/15); var sha = (pid_str == 'lcl') ? 0 : -mha ; for(var ha = sha; ha<mha; ha+=1) { title = ConvertHA2Time(ha,false); title = c2tf(12+ha,true,true); maxz[ha] = {}
; hastr[ha] = {}; hastr[ha]['title'] = title; hastr[ha]['data'] = {}; maxz[ha]['zed'] = 1000; dcnt = 0; ps = ''; var tha; for(var i=1;i<=365;i+=1) { frac = i/365; if(dobj[i]['day'] == 1 || dobj[i]['day'] == 11 || dobj[i]['day'] == 21) { hastr[ha]['data'][dobj[i]['mon']+'/'+dobj[i]['day']] = 0; }
tha = (_zr) ? (ha + parseFloat(dl) + parseFloat(dobj[i]['eot']))*15 : (ha + parseFloat(dl))*15; dap = new EoK(this.SSs,tha,dobj[i]['decl']); if(dap.isValid) { ps += (dcnt==0) ? 'M' : 'L' ; dcnt++; zed = -this.Wic*Math.tan(d2rad(dap.alt)); zed = (Math.abs(zed) > this.Fry) ? -this.Fry : zed; if(zed < parseFloat(maxz[ha]['zed'])) { maxz[ha]['zed'] = zed; maxz[ha]['xfrac'] = frac; }
yp = c2gs('y',zed); xp = c2gs('x',frac*this.wcF); ps += xp+","+yp+" "; if(dobj[i]['day'] == 1 || dobj[i]['day'] == 11 || dobj[i]['day'] == 21) { hastr[ha]['data'][dobj[i]['mon']+'/'+dobj[i]['day']] = zed; }
if(1==2) { acirc = FWe({'type':'circle', 'r':'0.5', 'cursor':'pointer', 'class':'shepherd'+pid_str, 'id':'Tyu'+pid_str, 'fill': (ha==0) ? "#f00" : "#000", "onmouseover":"lFc(evt,'HA:"+ha+" DECL:"+dArr[di]+" "+parseFloat(dap.azm).toFixed(2)+" "+parseFloat(dap.alt).toFixed(2)+"');", "onmouseout":"zJF();", 'cy':c2gs('y',zed), 'cx':c2gs('x',frac*this.wcF/2) }
); lIY.appendChild(acirc); }  }  } title = ConvertHA2Time(ha,true) + ((ha>0 && pid_str=='lcl') ? ' / '+ ConvertHA2Time(-ha,true) : '' ); maxz[ha]['title'] = title; lIY.appendChild(FWe({'type':'path', 'd':ps, 'cursor':'pointer', 'id':'xyz'+pid_str, 'class':'shepherd_'+pid_str, 'stroke':clr, 'stroke-dasharray':((ha<0) ? 5 : 0 ), "stroke-width":this.Ana['path']['shepherd_'+pid_str][0], 'fill':'none', "onmouseover":"lFc(evt,'<b>Time: "+title+"</b> ("+UVs+")');", "onmouseout":"zJF();" }
)); } if(pid_str=='lcl') { var twrapr; if(dge(Jwe)) { twrapr = dge(Jwe); } else { twrapr = FWe({'type':'g','id':Jwe}); wrapr.appendChild(twrapr); } for(var ha in maxz) { if(maxz[ha]['xfrac']) { var n = document.createTextNode(maxz[ha]['title']); var t = FWe({'type':"text", "x":(this.HTM+parseFloat(maxz[ha]['xfrac'])*this.wcF*this.iKe +0), "y":c2gs('z',maxz[ha]['zed']), "fill":"#800", "id":"declinationtxt"+maxz[ha]['title'], "font-weight":"bold", "text-anchor":"middle", "style":"font-size:8pt"}
); t.appendChild(n); twrapr.appendChild(t); }  }  } var D; if(dge('EOQ')) { D = dge('EOQ'); } else { D = document.createElement("div"); D.setAttribute('id','EOQ'); dge('ddc').appendChild(D); } D.innerHTML = "" + "<div id='ddc_blip'><input title='Close' style='float:right;margin:0px 0px 0px 0px' type='button' class='close' onclick='this.parentNode.parentNode.parentNode.style.display=\"none\";' value='X' />" + "<img alt='Print' title='Print data table.' onclick='Lqf(\"ddc\");' style='cursor:pointer;margin:0px 10px 0px 10px;float:right' src='Dial_icon_print.gif' />" + "<span onclick='oKK(\"vJm\",true)' style='float:right;border:1pt solid red;padding:0 2px 0 2px' class='WIF' title='Help'>?</span></div>" + this.hGn("YqN"); var O = ''; O += "<table id='datatable"+pid_str+"'>"; O += '<tr><td style="text-align:left;color:#800" colspan="37">'+UVs+'</td></tr>'; var s1 = "<tr><th align='center' rowspan='2'>TIME</th>"; var s2 = "<tr>"; for(var i=0; i<12; i++) { s1 += "<th colspan='3'>"+getMonthName(i)+"</th>"; for(var j=1; j<22; j+=10) { s2 += "<th>"+j+"</th>"; }
} s1 += "</tr>"; s2 += "</tr>"; O += s1 + s2; var s3 = "<tr><th align='right' style='color:#800;white-space:nowrap'>X-coordinate==</th>"; for(var idx in dobj) { if(dobj[idx]['day'] == 1 || dobj[idx]['day'] == 11 || dobj[idx]['day'] == 21) { s3 += "<td style='font-size:8pt;background:#f0f5f5;'>"+(parseFloat(dobj[idx]['frac'])*this.wcF).toFixed(2)+"</td>"; }
} s3 += "</tr>"; O += s3; var dstr; var rows = new Array(); for(var ha in hastr) { dstr = ''; for(var p in hastr[ha]['data']) { dstr += "<td style='font-size:8pt;white-space:nowrap'>"+parseFloat(hastr[ha]['data'][p]).toFixed(2)+"</td>"; }
dstr = "<tr>" +"<td style='white-space:nowrap;background:#f0f5f5;'>"+hastr[ha]['title']+"</td>" + dstr +"</tr>"; rows.push(dstr); } for(var r=rows.length-1; r>=0; r--) { O += rows[r]; } O += "</table>"; if(dge(RnK)) { dge(RnK).innerHTML = O; }
else { var E = document.createElement("div"); E.setAttribute("id",RnK); E.innerHTML = O; dge("ddc").appendChild(E); }  }, wvU : function(wpr) { var xc,zc,color,xg,zg; var minZ = 1000; var maxZ = -1000; if(!dge('zrV')) { wpr.appendChild(FWe({'type':'g','id':'zrV'}
)); } var dbG = FWe({'type':'g','id':'RGu'}); wpr.appendChild(dbG); for(var i=0; i< this.gwQ['Gwq'].length; i++) { minZ = (minZ < parseFloat(this.gwQ['Gwq'][i]['YCoor'])) ? minZ : parseFloat(this.gwQ['Gwq'][i]['YCoor']); maxZ = (maxZ > parseFloat(this.gwQ['Gwq'][i]['YCoor'])) ? maxZ : parseFloat(this.gwQ['Gwq'][i]['YCoor']); }
wpr.appendChild(FWe({'type':"path", "d":"M "+c2gs('x',-1.5*this.Uiq)+","+(this.WKM)+" L "+c2gs('x',1.5*this.Uiq)+","+(this.WKM), "class":"ewns", "id":"eastwest", "fill":"none", "stroke":"#ccc", "stroke-dasharray":"10", "stroke-width":"1" }
)); wpr.appendChild(FWe({'type':"path", "d":"M "+this.HTM+","+c2gs('z',-1.5*this.Uiq)+" L "+this.HTM+","+c2gs('z',1.5*this.Uiq), "class":"ewns", "id":"northsouth", "fill":"none", "stroke":"#ccc", "stroke-dasharray":"10", "stroke-width":"1" }
)); var path = document.createElementNS(svgNS,"path"); path.setAttribute("d","M "+this.HTM+","+(-this.iKe*minZ + this.WKM)+" L "+this.HTM+","+(-this.iKe*maxZ + this.WKM)); path.setAttribute("onmouseover","lFc(evt,'Gnomon Position');"); path.setAttribute("onmouseout","zJF();"); path.setAttribute("id","jCC"); path.setAttribute("cursor","pointer"); path.setAttribute("fill","none"); path.setAttribute("stroke","#000"); path.setAttribute("stroke-width","0.5"); wpr.appendChild(path); this.Gxh(wpr); var del = 3; for(var ha in this.gwQ['gWQ']) { if(!isNaN(parseFloat(this.gwQ['gWQ'][ha]['xc']))) { circ = document.createElementNS(svgNS,"circle"); xc = parseFloat(this.gwQ['gWQ'][ha]['xc']).toFixed(2); zc = parseFloat(this.gwQ['gWQ'][ha]['zc']).toFixed(2); xg = c2gs('x',xc); zg = c2gs('z',zc); wpr.appendChild(FWe({'type':"path", "d":"M "+(xg-del)+","+(zg)+" L "+(parseFloat(xg)+parseFloat(del))+","+(zg), "id":"chb"+"vert_"+ha, "class":"analemmahourmark", "cursor":"pointer", "fill":"none", "stroke":"#000", "stroke-width":"1" }
)); wpr.appendChild(FWe({'type':"path", "d":"M "+(xg)+","+(zg-del)+" L "+(xg)+","+(parseFloat(zg)+parseFloat(del)), "id":"chb"+"horz_"+ha, "class":"analemmahourmark", "cursor":"pointer", "fill":"none", "stroke":"#000", "stroke-width":"1" }
)); circ.setAttribute("onmouseover","lFc(evt,'Time: <b>"+c2tf(12+ha/15,true,true)+"</b> <br /> Coor : ( "+xc+" , "+zc+" )"+"');"); circ.setAttribute("onmouseout","zJF();"); circ.setAttribute("id","analemmatic_"+this.ALq(ha)); circ.setAttribute("class","cHb"); circ.setAttribute("cursor","pointer"); circ.setAttribute("cx",xg); circ.setAttribute("cy",zg); color = (parseFloat(ha) % 45 == 0) ? "#c00" : "#008"; circ.setAttribute("fill",color); circ.setAttribute("r",3); wpr.appendChild(circ); }
} var x1,z1,x2,z2,nz,ofs,fctr,mtxt,dec; var maxX = -1000; var maxZ = -1000; var minX = 1000; var minZ = 1000; var mstr = 'Jul 1Aug 1Sep 1Oct 1Nov 1Dec 1'; for(var i=0; i<this.gwQ['Gwq'].length; i++) { dec = this.gwQ['Gwq'][i]['decl']; fctr = (mstr.indexOf(this.gwQ['Gwq'][i]['Date']) != -1) ? -1 : 1; ofs = this.Uiq*this.iKe/8; x1 = (dec == this.QGD || dec == this.tSn) ? this.HTM-ofs : this.HTM; z1 = this.WKM-this.iKe*parseFloat(this.gwQ['Gwq'][i]['YCoor']); x2 = parseFloat(this.HTM) + parseFloat(ofs)*(fctr); z2 = z1; maxX = (maxX >= x1) ? (maxX >= x2) ? maxX : x2 : x1 ; minX = (minX <= x1) ? (minX <= x2) ? minX : x2 : x1 ; maxZ = (maxZ >= z1) ? (maxZ >= z2) ? maxZ : z2 : z1 ; minZ = (minZ <= z1) ? (minZ <= z2) ? minZ : z2 : z1 ; if(i<this.gwQ['Gwq'].length - 1) { nz = this.WKM+this.iKe*parseFloat(this.gwQ['Gwq'][i+1]['YCoor']); }
wpr.appendChild(FWe({'type':'path', 'id':'Chb'+i, "d":"M "+x1+","+ z1 +" L"+x2+","+z2, "fill":"none", "stroke":"#000", "stroke-width":"0.2" })); var zc = parseFloat(this.gwQ['Gwq'][i]['YCoor']).toFixed(2); wpr.appendChild(FWe({'type':'circle','cursor':'pointer','onmouseover':'lFc(evt,"Coordinate: ( 0 , '+zc+' )");','onmouseout':'zJF();','stroke':'#000','stroke-width':0.2,'r':'1.5','fill':'#88f','cx':this.HTM,'cy':z1}
)); var del,mon,zed; if(this.gwQ['Gwq'][i]['Date'].indexOf(' 1') != -1) { zed = z1; var mon = this.gwQ['Gwq'][i]['Date'].substring(0,3); mtxt = document.createTextNode(mon); if(this.gwQ['Gwq'][i+1]) { del = (-z1 + (this.WKM-this.iKe*parseFloat(this.gwQ['Gwq'][i+1]['YCoor'])))/2; del = (mon == "Dec" || mon == "Jun") ? 0 : del; zed = (mon == "Dec") ? maxZ+7 : (mon == "Jun") ? minZ-7 : zed ; }
var t = document.createElementNS(svgNS,"text"); t.setAttribute("x",(x1+x2)/2); t.setAttribute("y",zed); t.setAttribute("dy",del); t.setAttribute("text-anchor","middle"); t.setAttribute("style","font-size:5pt"); t.appendChild(mtxt); wpr.appendChild(t); }
} var p = "M "+minX+","+minZ+" L "+minX+","+maxZ+" L "+maxX+","+maxZ+" L "+maxX+","+minZ+" L "+minX+","+minZ; dbG.appendChild(FWe({'type':'path', 'id':'Chb'+'box', 'opacity':0.85, "d":p, "stroke":"#000", "stroke-width":"0.2","fill":"#fff" }
)); var xos = 0.75*this.iKe*parseFloat(this.Uiq); var zos = parseFloat(this.iKe*this.Uiq*Math.sin(this.AYf)) + 15*Math.cos(this.AYf); zos *= (this.lat < 0) ? -1 : 1; var len = 30; var path = document.createElementNS(svgNS,"path"); path.setAttribute("d","M "+(xos + this.HTM)+","+(-zos + this.WKM)+" L "+(len + xos + this.HTM)+","+(-zos + this.WKM)); path.setAttribute("fill","none"); path.setAttribute("stroke","#000"); path.setAttribute("stroke-width","0.5"); wpr.appendChild(path); var path = document.createElementNS(svgNS,"path"); path.setAttribute("d","M "+(xos + this.HTM)+","+(-zos+this.WKM)+" L "+(xos+this.HTM)+","+(-zos - len + this.WKM)); path.setAttribute("fill","none"); path.setAttribute("stroke","#000"); path.setAttribute("stroke-width","0.5"); wpr.appendChild(path); var n = document.createTextNode("North"); var t = document.createElementNS(svgNS,"text"); t.setAttribute("x",(xos+this.HTM)); t.setAttribute("y",(-zos - (len*1.1) + this.WKM)); t.setAttribute("text-anchor","middle"); t.setAttribute("style","font-size:8pt"); t.appendChild(n); wpr.appendChild(t); n = document.createTextNode("East"); t = document.createElementNS(svgNS,"text"); t.setAttribute("x",(1.1*len + xos+this.HTM)); t.setAttribute("y",(-zos + this.WKM)); t.setAttribute("text-anchor","start"); t.setAttribute("style","font-size:8pt"); t.appendChild(n); wpr.appendChild(t); }
, arn : function(cb) { if(dge('GWq')) { dge('GWq').style.display = (cb.checked) ? 'block' : 'none' ;  } else { var hhwpr = FWe({'type':'g','id':'GWq'}); this.WAM.appendChild(hhwpr); var del = 2; var knt = 0; for(var ha in this.gwQ['GWQ']) { if(!isNaN(parseFloat(this.gwQ['GWQ'][ha]['xc']))) { circ = document.createElementNS(svgNS,"circle"); xc = parseFloat(this.gwQ['GWQ'][ha]['xc']).toFixed(2); zc = parseFloat(this.gwQ['GWQ'][ha]['zc']).toFixed(2); xg = c2gs('x',xc); zg = c2gs('z',zc); hhwpr.appendChild(FWe({'type':"path", "d":"M "+(xg-del)+","+(zg)+" L "+(parseFloat(xg)+parseFloat(del))+","+(zg), "id":"chB"+"vert_"+ha, "class":"analemmahourmark", "cursor":"pointer", "fill":"none", "stroke":"#000", "stroke-width":"1" }
)); hhwpr.appendChild(FWe({'type':"path", "d":"M "+(xg)+","+(zg-del)+" L "+(xg)+","+(parseFloat(zg)+parseFloat(del)), "id":"chB"+"horz_"+ha, "class":"analemmahourmark", "cursor":"pointer", "fill":"none", "stroke":"#000", "stroke-width":"1" }
)); circ.setAttribute("onmouseover","lFc(evt,'Time: <b>"+c2tf(parseFloat(12+(ha/1-this.msP/1)/15).toFixed(1),true,true)+"</b> <br /> Coor : ( "+xc+" , "+zc+" )"+"');"); circ.setAttribute("onmouseout","zJF();"); circ.setAttribute("id","analemmatic_"+this.ALq(ha)); circ.setAttribute("class","cHb"); circ.setAttribute("cursor","pointer"); circ.setAttribute("cx",xg); circ.setAttribute("cy",zg); circ.setAttribute("fill","#4a4"); circ.setAttribute("r",2); hhwpr.appendChild(circ); knt++; }
}  } jzv('left',0.001); }, rAn : function(cb) { if(Math.abs(this.lat) > 90-Math.abs(this.tSn)) { warning("<i>Bailey</i> positions are not computed beyond the tropics of <i>Capricorn</i> or <i>Cancer</i>.",true); cb.checked = false; return; }
if(dge('ron')) { dge('ron').style.display = (cb.checked) ? 'block' : 'none' ;  } else { var dec = (Math.abs(this.lat) > 90-Math.abs(this.tSn)) ? (90 - Math.abs(this.lat)) : this.tSn ; var bx1 = this.Uiq * Math.cos(this.AYf) * Math.sqrt( 1 - Math.pow(Math.sin(this.AYf)/Math.cos(d2rad(dec)),2)); var bx2 = this.Uiq * Math.cos(this.AYf) * Math.sqrt( 1 - Math.pow(Math.sin(this.AYf)/Math.cos(d2rad(0)),2)); var bxave = (bx1/1 + bx2/1)/2; var ron = FWe({ 'type':'g','id':'ron'}
); this.WAM.appendChild(ron); var dzee = 10; var w = Math.abs(bx1/1 - bx2/1).toFixed(2); var dba = parseFloat(bxave).toFixed(2); var d = "M "+c2gs('x',bx1)+","+(this.WKM/1+dzee/1) +" L "+c2gs('x',bx1)+","+(this.WKM/1+-dzee/1) +" L "+c2gs('x',bx2)+","+(this.WKM/1+-dzee/1) +" L "+c2gs('x',bx2)+","+(this.WKM/1+dzee/1) +" L "+c2gs('x',bx1)+","+(this.WKM/1+dzee/1) ; ron.appendChild(FWe({ 'type':'path', 'cursor':'pointer', 'id':'roN'+'_east', 'class':'bailey_position', "onmouseover":"lFc(evt,'East Bailey Position <br /> Center Coor: ( "+dba+" , 0 )<br /> Marker Width: "+w+"');", "onmouseout":"zJF();", "d":d, "fill":"#0ff", "stroke":'#000', "stroke-width":"1.0" }
)); var d = "M "+c2gs('x',-bx1)+","+(this.WKM/1+dzee/1) +" L "+c2gs('x',-bx1)+","+(this.WKM/1+-dzee/1) +" L "+c2gs('x',-bx2)+","+(this.WKM/1+-dzee/1) +" L "+c2gs('x',-bx2)+","+(this.WKM/1+dzee/1) +" L "+c2gs('x',-bx1)+","+(this.WKM/1+dzee/1) ; ron.appendChild(FWe({ 'type':'path', 'cursor':'pointer', 'id':'roN'+'_west', 'class':'bailey_position', "onmouseover":"lFc(evt,'West Bailey Position <br /> Center Coor: ( "+(-dba)+" , 0 )<br /> Marker Width: "+w+"');", "onmouseout":"zJF();", "d":d, "fill":"#0ff", "stroke":'#000', "stroke-width":"1.0" }
)); } jzv('right',0.001); }, nAL : function(nbr) { var shadowrap; if(!dge('zrV')) { shadowrap = FWe({'type':'g','id':'zrV'}); this.WAM.appendChild(shadowrap); } else { shadowrap = dge("zrV"); } if(parseInt(nbr) == 0) { shadowrap.style.display = "none"; }
else if(parseInt(nbr) == 3) { shadowrap.style.display = "block"; if(dge("shadowline3")) { dge("shadowline3").style.display = "block"; if(dge("shadowline7")) { dge("shadowline7").style.display = "none"; }
} else { var sw3 = FWe({'type':'g','id':'shadowline3'}); shadowrap.appendChild(sw3); this.nuS(sw3,this.QGD); this.nuS(sw3,0); this.nuS(sw3,this.tSn); }  } else if(parseInt(nbr) == 7) { this.nAL(3); if(dge("shadowline7")) { dge("shadowline7").style.display = "block"; }
else { var sw7 = FWe({'type':'g','id':'shadowline7'}); shadowrap.appendChild(sw7); this.nuS(sw7,-20); this.nuS(sw7,-11); this.nuS(sw7,11); this.nuS(sw7,20); }  } else { warning("An unhandled argument was passed to nAL(nbr) : "+nbr,true); }
jzv("left",0.001); }, nuS : function(sw,decl) { var b = this.Uiq*Math.tan(d2rad(decl))*Math.cos(this.AYf); var maxHA; if(Math.abs(this.lat) > (90-this.tSn)) { var arc = 90 - Math.abs(this.lat); if(((this.lat < 0 && decl < 0) || (this.lat > 0 && decl > 0)) && (arc < Math.abs(decl))) { maxHA = 180; }
} maxHA = (maxHA) ? maxHA : IDS(this.AYf,d2rad(decl)); var d = ""; var ltr,dpt,xcr,zcr,dex,dez; var dcnt=0; var as = ""; var pO_ = FWe({'type':'g','id':'myO'}); for(var ha = -maxHA+0.1; ha<maxHA; ha+=(maxHA/25)) { ltr = (dcnt==0) ? "M" : "L"; dpt = new EoK(this.SSs,ha,decl); if(dpt.isValid) { dcnt++; var aaa = 450 - parseFloat(dpt.azm); dex = (this.Wic/Math.tan(d2rad(dpt.alt))*Math.cos(d2rad(dpt.theta))); dez = -(this.Wic/Math.tan(d2rad(dpt.alt))*Math.sin(d2rad(dpt.theta))); xcr = this.iKe*(dex) + this.HTM; zcr = -this.iKe*(dez+b) + this.WKM; pO_.appendChild(FWe({'type':'circle','r':'0.50', "onmouseover":"lFc(evt,'( "+parseFloat(dex).toFixed(2)+","+parseFloat(dez+b).toFixed(2)+" )"+"');", "onmouseout":"zJF();",'cursor':'pointer','fill':this.colors[decl],'cx':xcr,'cy':zcr}
)); d += ltr+xcr+','+zcr+' '; }  } d += (maxHA==180) ? 'Z':''; var txt = '<br />Maximum reach of shadow for a gnomon with' +'<br /> a height equal to the <i>dial scale</i>' +'<br /> on dates associated with stated declination.' +''; sw.appendChild(FWe({'type':'path', 'class':'analemma_shadowline', 'cursor':'pointer', 'id':'analemma_shadowline_declination'+decl, "onmouseover":"lFc(evt,'Declination: <b>"+decl+"</b>"+txt+"');", "onmouseout":"zJF();", "d":d, "fill":"none", "stroke":this.colors[decl], "stroke-width":"0.5" }
)); sw.appendChild(pO_); this.temp_pstr[decl] = d; }, temp_pstr : {}, temp_show_pstr : function() { for(var dcl in this.temp_pstr) { warning(dcl+' <br /> '+this.temp_pstr[dcl]+' <hr /> ',true); }  }, ONY : function(cb) { var clr = '#08f'; if(cb.checked) { if(dge('bCk')) { dge('bCk').style.display = 'block'; cb.parentNode.style.borderRight = '8pt solid '+clr; return; }
else { var pp1 = new EoK(this.SSs,0,20,true); var pp2 = new EoK(this.SSs,0,-20,true); var x1,z1,x2,z2; var delx = pp2.JGN-pp1.JGN; var delz = pp2.bnT-pp1.bnT; var m; if(Math.abs(delx) > Math.abs(delz)) { m = delz/delx; x1 = c2gs('x',this.tJW + this.Tlw); x2 = c2gs('x',this.tJW - this.Tlw); z1 = c2gs('z',this.Fyz + m*this.Tlw); z2 = c2gs('z',this.Fyz - m*this.Tlw); }
else { m = delx/delz; z1 = c2gs('z',this.Fyz + this.Tlw); z2 = c2gs('z',this.Fyz - this.Tlw); x1 = c2gs('x',this.tJW + m*this.Tlw); x2 = c2gs('x',this.tJW - m*this.Tlw); } var nlwrp = FWe({'type':'g','id':'bCk'}
); this.WAM.insertBefore(nlwrp,this.WAM.childNodes[0]); nlwrp.appendChild(FWe({ 'type':'path', "onmouseover":"lFc(evt,'Noon Line...the sun on the <i>local</i> meridian.');", "onmouseout":"zJF();", 'class':'noonline', 'id':'noonline', 'd':'M '+x1+','+z1+' L '+x2+' ,'+z2, 'cursor':'pointer', 'fill':'none', 'stroke-dasharray':'5', 'stroke':clr, 'stroke-width':this.Ana['path']['substyle'][0] }
)); cb.parentNode.style.borderRight = '8pt solid '+clr; }  } else { if(dge('bCk')) { dge('bCk').style.display = 'none'; cb.parentNode.style.borderRight = 'none'; }  }  }, Dvc : function(cb) { if(cb.checked) { if(dge('_fN')) { dge('_fN').style.display = 'block'; }
else { this.SAX(); }  } else { if(dge('_fN')) {dge('_fN').style.display = 'none';} } jzv('right',0.0001); }, SAX : function() { var sobj = {  "cursor":"pointer", "display":"block", "class":"TMR", "fill":"none", "stroke":"#888", "stroke-dasharray":"5", "stroke-width":this.Ana['path']['TMR'][0] }
; var JMQ = FWe({'type':'g','id':'_fN'}); this.WAM.appendChild(JMQ); var hh,hs; for(var k=0; k<this.tMe.length-1; k++) { hh = (parseFloat(this.tMe[k]) + parseFloat(this.tMe[k+1]))/2; hs = (parseFloat(this.SmS[k]) + parseFloat(this.SmS[k+1]))/2; sobj["onmouseover"] = "lFc(evt,'Std Time: <b>"+c2tf((12+hs/15),true,true)+"</b> <br /> Std Hour Angle: "+hs+" degrees.<hr />Local Time: <b>"+c2tf((12+hh/15),true,true)+"</b> <br />Local Hour Angle: "+parseFloat(hh).toFixed(2)+" degrees.');"; sobj["onmouseout"] = "zJF();"; sobj["id"] = "RuG"+hh; this.ckN(JMQ,hh,sobj); }
}, yQW : function(cb,htype) { if(this.SSs=='YPj' && this.__j=='iPF') { warning("This option is unavailable for <bShepherd</b> dials.",true); return; } var color = (htype=='babylonian') ? 'orange' : 'fuchsia' ; if(Math.abs(this.lat) >= 90-this.tSn) { warning("Latitude of dial exceeds allowable limit for this option.",true); cb.checked = false; return; }
var hwrap; if(!dge(htype+'_wrapper')) { hwrap = FWe({'type':'g','id':htype+'_wrapper'}); this.WAM.appendChild(hwrap); } else { hwrap = dge(htype+"_wrapper"); } if(cb.checked) { hwrap.style.display = "block"; cb.parentNode.style.borderRight = "8pt solid "+color; cb.parentNode.style.paddingRight = "5pt"; if(!hwrap.hasChildNodes()) { this.TZs(hwrap,htype,color); }
else { dge('hhl_'+htype).style.display = 'block'; } dge('show_hrs_'+htype).style.display = 'block'; } else { hwrap.style.display = "none"; cb.parentNode.style.borderRight = "none"; dge('show_hrs_'+htype).style.display = 'none'; dge('hhl_'+htype).style.display = 'none'; }
jzv('right',0.0001); }, TZs : function (hwrap,htype,color) { var factor = (htype=='babylonian') ? -1 : 1 ; var tprefix = (htype=='babylonian') ? "Hours from sunrise: " : "Hours until sunset: " ; var h,adp,xb,zb,ltr,pltx,pltz,cnt,pstr,hfh,prevP,nextP,firstP,lastP,H; var maxd = this.pgY('max',false); var mind = this.pgY('min',false); H=[]; var hstr = '<table><tr><th colspan="3" style="color:#800">'+htype.toUpperCase()+' Hour Marker Positions</th></tr>' +"<tr><th>"+tprefix.toUpperCase()+"</th>" +"<th>First Position (x,y)</th>" +"<th>Second Position (x,y)</th>" +"</tr>"; for(var i=1; i<24; i++) { firstP = null; lastP = null; prevP = null; nextP = null; hfh = (htype=='babylonian') ? i : 24-i; pstr = ''; cnt = 0; for(var decl=mind; decl<=maxd+1; decl+=(maxd-mind)/10) { ltr = (cnt==0) ? 'M' : 'L' ; h = -factor*hfh*15 + factor*IDS(this.AYf,d2rad(decl)); adp = new EoK(this.SSs,h,decl); prevP = nextP; nextP = adp; if(nextP.isValid) { if(cnt==0) { firstP = nextP; if(firstP.decl != mind && prevP) { firstP = this.d_s(firstP,prevP,'decl',1); }
} lastP = nextP; xb = nextP.JGN; zb = nextP.bnT; pltx = c2gs('x',xb); pltz = c2gs('z',zb); cnt++; } if(prevP && prevP.isValid && !nextP.isValid) { lastP = this.d_s(prevP,nextP,'decl',1); } if(this.cmdline2) if(nextP.decl == maxd) {lastP = nextP;}
} var x1,z1,x2,z2; if(firstP && lastP) { x1 = c2gs('x',parseFloat(firstP.JGN)); z1 = c2gs('z',parseFloat(firstP.bnT)); x2 = c2gs('x',parseFloat(lastP.JGN)); z2 = c2gs('z',parseFloat(lastP.bnT)); var ip = ''; if(this.SSs=='YPj') { ip += QzX(firstP,lastP,(Math.round(parseInt(sAY(x1,z1,x2,z2))/10) + 1/1)); }
var d = 'M '+x1+','+z1+ip+' L'+x2+','+z2; hwrap.appendChild(FWe({'type':'path', "onmouseover":"lFc(evt,'"+tprefix+hfh +"');", "onmouseout":"zJF();",'class':htype, 'id':htype+hfh ,'d':d, 'cursor':'pointer', 'fill':'none', 'stroke':color, 'stroke-width':this.Ana['path'][htype][0] }
)); hwrap.appendChild(FWe({'type':'circle', "onmouseover":"lFc(evt,'"+tprefix+hfh +"<br /> COOR: ("+parseFloat(firstP.JGN).toFixed(2)+" , "+parseFloat(firstP.bnT).toFixed(2)+" )"+"');", "onmouseout":"zJF();",'class':htype, 'stroke':'#000','stroke-width':'0.2','cursor':'pointer', 'r':this.Ana['circle'][htype][0], 'fill':color, 'cx':x1, 'cy':z1 }
)); hwrap.appendChild(FWe({'type':'circle', "onmouseover":"lFc(evt,'"+tprefix+hfh +"<br /> COOR: ("+parseFloat(lastP.JGN).toFixed(2)+" , "+parseFloat(lastP.bnT).toFixed(2)+" )"+"');", "onmouseout":"zJF();",'class':htype, 'stroke':'#000','stroke-width':'0.2','cursor':'pointer', 'r':this.Ana['circle'][htype][0], 'fill':color, 'cx':x2, 'cy':z2 }
)); H.push({'x':(x1/2+x2/2),'z':(z1/2+z2/2),'n':hfh}); hstr += "<tr><td>"+i+"</td>" +"<td class='datacol'>( "+parseFloat(firstP.JGN).toFixed(2)+" , "+parseFloat(firstP.bnT).toFixed(2)+" )</td>" +"<td class='datacol'>( "+ parseFloat(lastP.JGN).toFixed(2)+" , "+ parseFloat(lastP.bnT).toFixed(2)+" )</td>" +"</tr>"; }
} hstr += '</table>'; var W = FWe({'type':'g','id':'HHM_'+htype,'style':'display:none'}); hwrap.appendChild(W); for(var i=0;i<H.length;i++) { W.appendChild(FWe({ 'type':'circle', "onmouseover":"lFc(evt,'"+tprefix+H[i].n+"');", "onmouseout":"zJF();",'class':htype, 'stroke':'#000','stroke-width':'0.2','cursor':'pointer', 'r':5, 'fill':color, 'cx':H[i].x, 'cy':H[i].z }
)); var n = document.createTextNode(H[i].n); var t = FWe({ 'type':'text', "x":H[i].x, "y":H[i].z, "dy":4, "text-anchor":"middle", "style":"font-size:7pt" }); t.appendChild(n); W.appendChild(t); } if(!(this.SSs == "BlP" || this.SSs == "ncP")) { hstr = "<input type='button' class='btn' value='X' style='float:right' title='Close' onclick='this.parentNode.style.display=\"none\"' />" +" <blockquote style='border:1pt solid red;margin-top:50px;padding:50px;font-weight:bold'>"+htype.toUpperCase()+" hour lines are curved paths " +" for 'cylinder' dials. It would be best to import the " +" DXF file into a CAD utility and work with the information contained in the drawing.</blockquote>"; }
if(dge("hhl_"+htype)) { dge("hhl_"+htype).innerHTML = hstr; } else { var D = document.createElement('div'); D.setAttribute('id','hhl_'+htype); D.innerHTML = hstr; dge("ddc").appendChild(D); } h=null;adp=null;xb=null;zb=null;ltr=null;pltx=null;pltz=null;cnt=null;pstr=null;hfh=null;prevP=null;nextP=null;firstP=null;lastP=null; }
, toggle_HHR : function(ht) { var t = dge('HHM_'+ht); t.style.display = (t.style.display=="block")?"none":"block"; }, d_s : function(UTL,UTl,vname,cnt) { var res = 0.001; var v1 = parseFloat(eval("UTL."+vname)); var v2 = parseFloat(eval("UTl."+vname)); if(cnt) { cnt++; if(cnt>50) { warning('LOOP LIMIT OF 50 EXCEEDED WHILE TRYING TO CAPTURE COORDINATES AT THE DIAL LIMIT!',true); return UTL; }
} else { warning("LOOP CNT UNDEFINED...EXITING CAPTURE OF HORIZON",true); return UTL; } if(Math.abs(v1 - v2) < res) { return UTL; } var aveha = (parseFloat(UTL.ha) + parseFloat(UTl.ha))/2; var avedecl = (UTL.decl + UTl.decl)/2; var dpAve = new EoK(this.SSs,aveha,avedecl); if(dpAve.isValid) { return this.d_s(dpAve,UTl,vname,cnt) }
else { return this.d_s(UTL,dpAve,vname,cnt) } v1 = null; v2 = null; }, Vim : function(wrpper) { var path = document.createElementNS(svgNS,"path"); var zee = this.WKM; var wee = c2gs('x',1.5*this.wcF); path.setAttribute("d","M "+(-wee)+","+zee+" L "+wee+","+zee); path.setAttribute("onmouseover","lFc(evt,'X-Axis Thread. Height: "+parseFloat(VFD.pDT).toFixed(2)+"');"); path.setAttribute("onmouseout","zJF();"); path.setAttribute("cursor","pointer"); path.setAttribute("fill","none"); path.setAttribute("stroke","#f44"); path.setAttribute("stroke-width","1.0"); path.setAttribute("stroke-dasharray","20"); wrpper.appendChild(path); var path = document.createElementNS(svgNS,"path"); var xee = this.HTM; var hee = c2gs('z',1.5*this.Fry); path.setAttribute("d","M "+xee+","+hee+" L "+xee+","+(-hee)); path.setAttribute("onmouseover","lFc(evt,'Y-Axis Thread. Height: "+parseFloat(VFD.AxD).toFixed(2)+"');"); path.setAttribute("onmouseout","zJF();"); path.setAttribute("cursor","pointer"); path.setAttribute("fill","none"); path.setAttribute("stroke","#f44"); path.setAttribute("stroke-width","1.0"); path.setAttribute("stroke-dasharray","20"); wrpper.appendChild(path); }
, Ydk : function(wrapper,D_d) { if(!wrapper || wrapper == null || wrapper == undefined) { wrapper = this.WAM; } D_d = (D_d == undefined) ? "none" : D_d; if(dge("nVl")) { wrapper.removeChild(dge("nVl")); }
if(D_d == "none") return; var g = document.createElementNS(svgNS,"g"); g.setAttribute("id","nVl"); wrapper.appendChild(g); var n,t,x1,z1,x2,z2,time,dx1,dx2,dz1,dz2; var offsetX = 0.4; var offsetZ = 0.4; if(this.SSs == "ZPB") { var xc,zc; for(var ha in this.gwQ['gWQ']) { if(!isNaN(parseFloat(this.gwQ['gWQ'][ha]['xc']))) { xc = this.gwQ['gWQ'][ha]['xc']; zc = this.gwQ['gWQ'][ha]['zc']; this.Lrg(ha,D_d,false,""); n = document.createTextNode(this.Lrg(ha,D_d,false,"")); t = document.createElementNS(svgNS,"text"); px1 = 1.1*xc*this.iKe + this.HTM; pz1 = -1.1*zc*this.iKe + this.WKM; t.setAttribute("x",px1); t.setAttribute("y",pz1); t.setAttribute("text-anchor","middle"); t.setAttribute("style","font-size:7pt"); t.appendChild(n); g.appendChild(t); }
}  } else { var omega,delta; for(var ha in this.XtZ) { time = this.Lrg(ha,D_d,false,""); x1 = parseFloat(this.XtZ[ha]['x1']); z1 = parseFloat(this.XtZ[ha]['z1']); x2 = parseFloat(this.XtZ[ha]['x2']); z2 = parseFloat(this.XtZ[ha]['z2']); omega = gxo(x2-x1,z2-z1); dx1 = offsetX * Math.cos(d2rad(omega+180))*this.iKe; dz1 = offsetZ * Math.sin(d2rad(omega+180))*this.iKe; n = document.createTextNode(time); t = document.createElementNS(svgNS,"text"); t.setAttribute("x",x1); t.setAttribute("y",z1); t.setAttribute("dx",dx1); t.setAttribute("dy",dz1); t.setAttribute("text-anchor","middle"); t.setAttribute("style","font-size:7pt"); t.appendChild(n); g.appendChild(t); dx2 = -dx1*1.5; dz2 = -dz1*2.5; n = document.createTextNode(time); t = document.createElementNS(svgNS,"text"); t.setAttribute("x",x2); t.setAttribute("y",z2); t.setAttribute("dx",dx2); t.setAttribute("dy",dz2); t.setAttribute("text-anchor","middle"); t.setAttribute("style","font-size:7pt"); t.appendChild(n); g.appendChild(t); }
}  }, QBG : function(wrapper) { for(var i=0; i<this.tMe.length; i++) { this.ckN(wrapper,this.tMe[i]); }  }, ckN : function(wrapper,ha,styleObj) { var points = new Array(); var p1,p2,Kde,kde,KDe; for(var i=0; i<this.TzB.length; i++) { points.push(new EoK(this.SSs,ha,this.TzB[i])); }
if(this.TzB.indexOf(this.tSn) == -1) {  } if(this.TzB.indexOf(this.QGD) == -1) {  } for(var i=0; i<points.length; i++) { Kde = points[i]; if(Kde.isValid) { if(!this.zi_[Kde.SmS]) { this.zi_[Kde.SmS] = new Array(); }
this.zi_[Kde.SmS].push(Kde); } if(i==0) { kde = points[i+1]; if(Kde.isValid) { p1 = Kde; } if(!kde.isValid) { p2 = this.d_s(Kde,kde,'decl',1); }  } else if(i==points.length-1) { if(Kde.isValid) { p2 = Kde; }
} else { KDe = points[i-1]; kde = points[i+1]; if(!KDe.isValid && Kde.isValid) { p1 = this.d_s(Kde,KDe,'decl',1); } if(!kde.isValid && Kde.isValid) { p2 = this.d_s(Kde,kde,'decl',1); }  }  } if(p1 && p2) { if(!this.zi_[p1.SmS]) { this.zi_[p1.SmS] = new Array(); }
if(this.zi_[p1.SmS].length > 0) { if(p1 != this.zi_[p1.SmS][0]) { this.zi_[p1.SmS].unshift(p1); } if(p2 != this.zi_[p1.SmS][this.zi_[p1.SmS].length-1]) { this.zi_[p1.SmS].push(p2); }  } else { this.zi_[p1.SmS].push(p1); this.zi_[p1.SmS].push(p2); }
this.nbN(wrapper,p1,p2,styleObj); } points = null; p1 = null; p2 = null; Kde = null; kde = null; KDe = null; }, nbN : function(w,p1,p2,styleObj) { if(!styleObj) { var display = (dge('oDP').checked) ? "block" : "none"; }
var x1 = c2gs('x',p1.JGN); var x2 = c2gs('x',p2.JGN); var z1 = c2gs('z',p1.bnT); var z2 = c2gs('z',p2.bnT); var ha = p1.SmS; if(!this.XtZ[ha]){this.XtZ[ha] = {};} { this.XtZ[ha]['x1'] = x1; this.XtZ[ha]['z1'] = z1; this.XtZ[ha]['x2'] = x2; this.XtZ[ha]['z2'] = z2; }
var path = document.createElementNS(svgNS,"path"); if(this.SSs == 'YPj') { var hHB = ((Math.abs(this.lat) < this.tSn) && (Math.abs(ha) < 20)) ? 100 : 25; var pstr = "M "+x1+","+z1; pstr += QzX(p1,p2,hHB,null); pstr += " L "+x2+","+z2; }
else { pstr = "M "+x1+","+z1+" L "+x2+","+z2; } if(styleObj) { path.setAttribute("d",pstr); for(var prp in styleObj) { path.setAttribute(prp,styleObj[prp]); }  } else { var nha = (ha < 0) ? parseFloat(ha) + parseFloat(12) : ha ; var t = "Standard Time: <b>"+c2tf(12+p1.SmS/15,true,true)+"</b> <br />Std Hour Angle: "+p1.SmS+" degrees." + "<hr />Local Time: <b>"+c2tf(12+p1.ha/15,true,true)+"</b> <br />Local Hour Angle: "+p1.ha+" degrees." + ""; path.setAttribute("d",pstr); path.setAttribute("onmouseover","lFc(evt,'"+t+"');"); path.setAttribute("onmouseout","zJF();"); path.setAttribute("cursor","pointer"); path.setAttribute("display",display); path.setAttribute("class","TMR"); path.setAttribute("fill","none"); path.setAttribute("id","kUi"+ha); var fill = (ha == 0) ? "#0a0" : "#444" ; path.setAttribute("stroke",fill); path.setAttribute("stroke-width",this.Ana['path']['TMR'][0]); }
w.appendChild(path); if(styleObj) { w.appendChild(FWe({ 'type':"circle", "onmouseover":"lFc(evt,'Coor: <b>( "+c2ds('x',x2) +" , "+c2ds('z',z2) +" )</b> ');", "onmouseout":"zJF();", "class":"dpoint_dialhh", "cursor":"pointer", "stroke":"green", "stroke-width":0.3, "fill":"#ccf", "cx":x2, "cy":z2, "r":this.Ana['circle']['dpoint_dialhh'][0] }
)); w.appendChild(FWe({ 'type':"circle", "onmouseover":"lFc(evt,'Coor: <b>( "+c2ds('x',x1) +" , "+c2ds('z',z1) +" )</b> ');", "onmouseout":"zJF();", "class":"dpoint_dialhh", "cursor":"pointer", "stroke":"green", "stroke-width":0.3, "fill":"#ccf", "cx":x1, "cy":z1, "r":this.Ana['circle']['dpoint_dialhh'][0] }
)); }  }, ZlA : function(wrapper) { var ostr = "" + "<div id='ddc_blip'><input title='Close' style='float:right;margin:0px 0px 0px 0px' type='button' class='close' onclick='this.parentNode.parentNode.style.display=\"none\";' value='X' />" + "<img alt='Print' title='Print data table.' onclick='Lqf(\"ddc\");' style='cursor:pointer;margin:0px 10px 0px 10px;float:right' src='Dial_icon_print.gif' />" + "<span onclick='oKK(\"POg\",true)' style='float:right;border:1pt solid red;padding:0 2px 0 2px' class='WIF' title='Help'>?</span></div>" + this.hGn("YqN"); for(var i=0; i<this.decl.length; i++) { ostr += this.zWX(wrapper,this.decl[i],true); }
dge("ddc").innerHTML = ostr; }, Zze : function(hid) { return "<div id='ddc_blip'><input title='Close' style='float:right;margin:0px 0px 0px 0px' type='button' class='close' onclick='this.parentNode.parentNode.style.display=\"none\";' value='X' />" + "<img alt='Print' title='Print data table.' onclick='Lqf(\"ddc\");' style='cursor:pointer;margin:0px 10px 0px 10px;float:right' src='Dial_icon_print.gif' />" + "<span onclick='oKK(\""+hid+"\",true)' style='float:right;border:1pt solid red;padding:0 2px 0 2px' class='WIF' title='Help'>?</span></div>" }
, dhs : function(dec) { var tplo_hdg = ""; if(tp_layout.enabled) { tplo_hdg = "<th title='Fetch Intermediate Data for this Declination.' style='cursor:pointer' onclick='tp_layout.fetch_intermediate_pts("+dec+")'>( D1 , D2 )</th>"; }
return "<div id='wCL"+dec+"'><br /><table>" +"<tr>" +"<th colspan='4'><a class='top' style='float:left' href='#top'>TOP</a><span style='color:#a00;'>Declination: "+dec+"</span></th>" +"<th colspan='3'>Solar Direction Cosines</th>" +"<th colspan='3'>3D Dial Coor</th>" +"<th colspan='2' title='2D Coordinates on the dial plane (Horizontal is x-axis.)'>" +"2D Dial Coor " +"</th>" +"</tr>" +"<tr>" +"<th>Watch Time</th>" +"<th title='Longitude-corrected hour angle.'>HA</th>" +"<th title='Solar altitude.'>ALT</th>" +"<th title='Solar azimuth.'>AZM</th>" + "<th>dx</th><th>dy</th><th>dz</th>" + "<th>x</th><th>y</th><th>z</th>" + "<th title='Horizontal x-coordinate in the plane of the dial.'>DF-x</th>" + "<th title='Perpendicular y-coordinate in the plane of the dial.'>DF-y</th>" + tplo_hdg + "</tr>"; }
, r_A : function(cobj) { var dnbr = (cobj.value=='uhP') ? 1 : 7 ; var y = (new Date()).getFullYear(); var dc = {}; var ad,dt,jd,sc,ix,mn; for(var m=1; m<=12; m++) { mn = getMonthName(m-1); jd = new mfb(y,m,dnbr); sc = new FCM(jd.jday); if(dnbr == 7) { ix = (m-6>0) ? 13-m : m ; }
else { ix = m; } if(!dc[ix]) { dc[ix] = {}; dc[ix]['tv'] = 0; dc[ix]['tc'] = 0; dc[ix]['lbl'] = ''; } dc[ix]['tv'] += parseFloat(sc.DECL); dc[ix]['tc']++; dc[ix]['lbl'] += mn+' '+dnbr+' / '; } var darr = new Array(); for(var i in dc) { darr.push((dc[i]['tv']/dc[i]['tc']).toFixed(2)); this.GRH[darr[darr.length-1]] = dc[i]['lbl'].substring(0,dc[i]['lbl'].length-2); }
for(var i=0; i<darr.length; i++) { if(cobj.checked && this.twx.indexOf(parseFloat(darr[i])) == -1) { document.forms[0].newsc.value = darr[i]; dge('BIG').onclick(); } else { dge('sclink'+darr[i]).onclick(); }
} document.forms[0].newsc.value = ''; }, zWX : function(wrapper,decl,returnHTML,filloveride) { var fetchHTML = returnHTML || false; var strHTML = this.dhs(decl); var fill = (decl == 0) ? this.colors[0] : (decl > 0) ? this.colors[this.tSn] : this.colors[this.QGD] ; var qzD,ha,decl,BJa,Upc,yIc,MIg,ltr,pathStr,numPts,ChJ,xg,zg,title,pkg; if(filloveride) { fill = filloveride; }
if(!dge('TeG')) { qzD = FWe({'type':'g','id':'TeG','display':'block'}); wrapper.appendChild(qzD); } else { qzD = dge('TeG'); } var tMO; if(!dge('declination'+decl)) { tMO = FWe({'type':'g','id':'declination'+decl,'display':'block'}
); qzD.appendChild(tMO); } else { tMO = dge('declination'+decl); } var circArr = new Array(); var points = new Array(); for(var j=0; j<this.SmS.length; j++) { points.push(new EoK(this.SSs,this.tMe[j],decl)); }
pathStr = ''; numPts = 0; var hHB,cflag; for(var j=0; j<this.SmS.length; j++) { hHB = 10; if(this.SSs=='YPj' && Math.abs(this.SmS[j]) <20 ) { var delz = this.Wic/Math.tan(d2rad(Math.abs(this.lat - decl))); if(delz > this.Fry/2) { hHB = 30; if(delz < this.Fry) { cflag = true; }
}  } ChJ = false; yIc = points[j]; if(yIc.isValid) { numPts++; if(j==0) { pkg = this.Ifp(yIc,fill); pathStr += 'M'+pkg['x']+','+pkg['z']+' '; strHTML += yIc.toHTML(this.qha[j]); circArr.push(pkg['c']); MIg = points[j+1]; if(MIg.isValid) { pathStr += QzX(yIc,MIg,hHB); pkg = this.Ifp(MIg,fill); circArr.push(pkg['c']); }
} else if(j==this.SmS.length-1) { pathStr += 'L'+c2gs('x',yIc.JGN)+','+c2gs('y',yIc.bnT)+' '; var ldp = new EoK(this.SSs,(parseFloat(yIc.ha)+15),decl); pathStr += QzX(yIc,ldp,hHB); pathStr += 'L'+c2gs('x',ldp.JGN)+','+c2gs('y',ldp.bnT)+' '; pkg = this.Ifp(yIc,fill); circArr.push(pkg['c']); strHTML += yIc.toHTML(this.qha[j]); ChJ = true; }
else { Upc = points[j-1]; MIg = points[j+1]; if(!Upc.isValid) { var cdp = this.d_s(yIc,Upc,'ha',1); pkg = this.Ifp(cdp,fill); pathStr += 'M'+pkg['x']+','+pkg['z']+' '; strHTML += cdp.toHTML(VXR(cdp.ha-this.msP)); circArr.push(pkg['c']); pathStr += QzX(cdp,yIc,hHB); pkg = this.Ifp(yIc,fill); pathStr += 'L'+pkg['x']+','+pkg['z']+' '; strHTML += yIc.toHTML(this.qha[j]); circArr.push(pkg['c']); if(MIg.isValid) { pathStr += QzX(yIc,MIg,hHB); }
else if(!MIg.isValid) { var cdp = this.d_s(yIc,MIg,'ha',1); pkg = this.Ifp(cdp,fill); circArr.push(pkg['c']); pathStr += QzX(yIc,cdp,hHB); pathStr += 'L'+pkg['x']+','+pkg['z']+' '; strHTML += cdp.toHTML(VXR(cdp.ha-this.msP)); }
} else if(!MIg.isValid) { pkg = this.Ifp(yIc,fill); pathStr += 'L'+pkg['x']+','+pkg['z']+' '; strHTML += yIc.toHTML(this.qha[j]); circArr.push(pkg['c']); var cdp = this.d_s(yIc,MIg,'ha',1); pkg = this.Ifp(cdp,fill); circArr.push(pkg['c']); pathStr += QzX(yIc,cdp,hHB); pathStr += 'L'+pkg['x']+','+pkg['z']+' '; strHTML += cdp.toHTML(VXR(cdp.ha-this.msP)); }
else if(MIg.isValid) { var w = null; if(this.SSs=='YPj' && (sAY(yIc.JGN,yIc.bnT,MIg.JGN,MIg.bnT) > VFD.wcF/$wf)) { bp_arr.push({'fp':yIc,'sp':MIg}); hHB = 30; } pkg = this.Ifp(yIc,fill); pathStr += 'L'+pkg['x']+','+pkg['z']+' '; strHTML += yIc.toHTML(this.qha[j]); circArr.push(pkg['c']); pathStr += QzX(yIc,MIg,hHB,w); }
}  } else { if(numPts > 0) { tMO.appendChild(FWe({'type':"path", "d":pathStr, 'display':'block' ,"class":"tuR", "id":"vWP"+decl, "onmouseover":"lFc(evt,'Declination: "+decl+"');", "onmouseout":"zJF();", "cursor":"pointer", "fill":"none", "stroke":fill, "stroke-width":this.Ana['path']['tuR'][0]}
)); numPts = 0; } pathStr = ''; }  } if(ChJ) { tMO.appendChild(FWe({'type':"path", "d":pathStr, 'display':'block' ,"class":"tuR", "id":"vWP"+decl, "cursor":"pointer", "fill":"none", "stroke":fill, "stroke-width":this.Ana['path']['tuR'][0]}
)); } for(var i=0; i<circArr.length; i++) { tMO.appendChild(circArr[i]); } if(bp_arr.length > 0) { var c1,c2; var pth = dge('vWP'+decl); var ds = pth.getAttribute('d'); ds = ds.substring(1,ds.length); var coors = ds.split(/L/); var pb = ''; var p1; var f = false; for(var i=0; i<coors.length-1; i++) { pb += (pb == '') ? 'M' : 'L' ; c1 = coors[i].split(/,/); c2 = coors[i+1].split(/,/); pb += c1[0]+','+c1[1]+' '; if(!f && sAY(c1[0],c1[1],c2[0],c2[1]) > this.wcF/$wf) { f = true; p1 = pb; pb = ''; }
} tMO.appendChild(FWe({ 'type':"path", "d":p1, 'display':'block' ,  "class":"tuR", "id":"vWP"+decl+'_a', "cursor":"pointer", "fill":"none", "stroke":fill, "stroke-width":this.Ana['path']['tuR'][0] })); tMO.appendChild(FWe({ 'type':"path", "d":pb, 'display':'block' ,  "class":"tuR", "id":"vWP"+decl+'_b', "cursor":"pointer", "fill":"none", "stroke":fill, "stroke-width":this.Ana['path']['tuR'][0] }
)); } if(bp_arr.length > 0) { tMO.removeChild(dge('vWP'+decl)); bp_arr = new Array(); } circArr = null; points = null; strHTML += "</table></div>"; if(fetchHTML) { return strHTML; } else { var pn = dge("ddc"); var cns = pn.childNodes; var wje = new Array(); var cid; for(var ci=0; ci<cns.length; ci++) { if(cns[ci].getAttribute("id")) { cid = cns[ci].getAttribute("id"); if(!isNaN(parseFloat(cid.match(/-?\d+\.*\d*$/)))) { wje.push(cid.match(/-?\d+\.*\d*$/)); }
}  } var newdiv = document.createElement("div"); newdiv.setAttribute("id","wCL"+decl); newdiv.setAttribute("style","display:block"); newdiv.innerHTML = strHTML; var ix = this.twx.indexOf(decl); var sidx = ix+1; try { if(wje.length == 0) { pn.appendChild(newdiv); }
else { wje.push(decl); wje.sort(numberorder); var newidx = wje.indexOf(decl); if(newidx == wje.length - 1) { pn.appendChild(newdiv); } else { sidx = newidx+1; var sdoc = dge("wCL"+wje[sidx]); sdoc.parentNode.insertBefore(newdiv,sdoc); }
}  } catch(e) { warning("EXCEPTION THROWN while trying to add cartesian layout data: "+tS(e),true); }  }  }, Ifp : function(p,fill) { var x = c2gs('x',p.JGN); var z = c2gs('z',p.bnT); var t1 = 'Standard Time: ' + c2tf(12+p.SmS/15,false,true,'b',true) + " <br /> Solar Decl. = <i>"+p.decl+"</i> <br /> Coor: ( "+(parseFloat(p.JGN)).toFixed(2)+" , "+((parseFloat(p.bnT))).toFixed(2)+" )"; var t2 = 'Standard Time: ' + c2tf(12+p.SmS/15,false,true,'',true) + " / Solar Decl. = "+p.decl+" / Coor: ( "+(parseFloat(p.JGN)).toFixed(2)+" , "+((parseFloat(p.bnT))).toFixed(2)+" )"; var c = FWe({'type':"circle", "onmouseover":"lFc(evt,'"+t1+"');", "onmouseout":"zJF();", "class":"NVq", "cursor":"pointer", "fill":fill, "cx":x, "cy":z, "r":this.Ana['circle']['NVq'][0]}
); return {'x':x,'z':z,'c':c}; }, iDj : function(wrapper) { if(this.rKk != 0) { var xhr = c2gs('x' , parseFloat(this.Tlw)); var xhl = c2gs('x' , -parseFloat(this.Tlw)); var zh = c2gs('z' , this.mmW); wrapper.appendChild(FWe({ 'type':"path",'id':'horizon', "d":"M "+(xhl)+","+zh+" L "+xhr+","+zh, "onmouseover":"lFc(evt,'Sun on the horizon.');", "onmouseout":"zJF();", "cursor":"pointer", "fill":"none", "stroke":"#000", "class":"TMR", "stroke-width":"0.5", "stroke-dasharray":"6" }
)); }  }, FCO : function(ha,state) { if(dge("kUi"+ha)) { dge("kUi"+ha).style.display = (state) ? "block" : "none"; jzv('right',0.0001); }  }, vCr : function(ckbx) { var hourAng = ckbx.value; if(!this.cTx['YTL']){ this.cTx['YTL'] = new Array(); }
if(!this.cTx['UTN']) { this.cTx['UTN'] = {}; this.cTx['UTN']['DF_x'] = "Dial Face X-coordinate"; this.cTx['UTN']['DF_y'] = "Dial Face Y-coordinate"; if(this.tJW != this.infinity && this.Fyz != this.infinity) { this.cTx['UTN']['R'] = "Radial distance from dial center."; this.cTx['UTN']['Theta'] = "Polar angle (in degrees)."; this.cTx['UTN']['// Dist'] = "Parallel distance measured along the standard hour line."; this.cTx['UTN']['|- Dist'] = "Perpendicular distance measured from the standard hour line."; }
} if(this.SSs == "ZPB") { return; } if(!dge("YFs")) { var eqtw = document.createElementNS(svgNS,"g"); eqtw.setAttribute("id","YFs"); this.aYi.appendChild(eqtw); } if(this.zi_[hourAng].length > 1) { if(dge("EqTime"+hourAng) && !ckbx.checked) { try{dge(ckbx.id+"_cal").disabled = "true";}
catch(e){} try{dge(ckbx.id+"_pts").disabled = "true";}catch(e){} dge("EqTime"+hourAng).style.display = "none"; dge("tNP"+hourAng).style.display = "none"; dge("EqTime"+hourAng+"_pts").style.display = "none"; var idx = this.cTx['YTL'].indexOf(hourAng); var len = this.cTx['YTL'].length; this.cTx['YTL'].splice(idx,1); }
else if(dge("EqTime"+hourAng) && ckbx.checked) { try{dge(ckbx.id+"_cal").disabled = "";}catch(e){} try{dge(ckbx.id+"_pts").disabled = "";}catch(e){} if(dge(ckbx.id+"_pts") && dge(ckbx.id+"_pts").checked) {dge("EqTime"+hourAng+"_pts").style.display = "block";}
dge("EqTime"+hourAng).style.display = "block"; dge("tNP"+hourAng).style.display = "block"; this.cTx['YTL'].push(hourAng); } else { this.cTx[hourAng] = {}; this.cTx['YTL'].push(hourAng); try{dge(ckbx.id+"_cal").disabled = "";}
catch(e){} try{dge(ckbx.id+"_pts").disabled = "";}catch(e){} var eqtime,ha,dp,lbl,x,z,clr,rd; var cnt = 0; var dstr = ""; var TNP = document.createElementNS(svgNS,"g"); TNP.setAttribute("id","EqTime"+hourAng); dge("YFs").appendChild(TNP); var KrA = document.createElementNS(svgNS,"g"); KrA.setAttribute("id","EqTime"+hourAng+"_pts"); KrA.setAttribute("display","none"); dge("YFs").appendChild(KrA); for(var m in GjE) { for(var d in GjE[m]) { lbl = (cnt == 0) ? "M" : "L"; eqtime = GjE[m][d]['e']; ha = parseFloat(hourAng) + parseFloat(this.msP) + parseFloat(GjE[m][d]['e'])/4; dp = new EoK(this.SSs,ha,parseFloat(GjE[m][d]['d'])); if(dp.isValid) { x = parseFloat(this.iKe) * parseFloat(dp.JGN) + this.HTM; z = -parseFloat(this.iKe) * parseFloat(dp.bnT) + this.WKM; dstr += lbl+x.toFixed(5)+","+z.toFixed(5); cnt++; }
}  } clr = (hourAng == 0) ? "#080" : "#888"; TNP.appendChild(FWe({ 'type':'path', "d":dstr, "fill":"none", "cursor":"pointer", "id":"tNP"+hourAng, "onmouseover":"lFc(evt,'<i>Analemma</i> for <br />standard time of <b>"+c2tf(12+hourAng/15,true,true)+"</b>.');", "onmouseout":"zJF();", "class":"iWv", "stroke":clr, "stroke-width":this.Ana['path']['iWv'][0]/1 }
)); var dz = new Array(1,11,22); var etime,si,sgn,f1,f2,fs; for(var m in GjE) { for(var i=0; i<dz.length; i++) { etime = parseFloat(GjE[m][dz[i]]['e']); si = 'Sun is <i>' + ((parseFloat(etime) < 0) ? 'SLOW' : 'FAST') + '</i>'; sgn = (etime < 0) ? '-' : ''; f1 = parseInt(etime); f2 = Math.abs(60*(etime - f1)).toFixed(0); fs = sgn+''+(Math.abs(f1))+'<sup>m</sup> '+f2+'<sup>s</sup>'; ha = parseFloat(hourAng) + parseFloat(this.msP) + parseFloat(GjE[m][dz[i]]['e'])/4; dp = new EoK(this.SSs,ha,parseFloat(GjE[m][dz[i]]['d'])); if(dp.isValid) { x = c2gs('x',dp.JGN); z = c2gs('z',dp.bnT); KrA.appendChild(FWe({ 'type':'circle', "onmouseover":"lFc(evt,'DATE: <b>"+m+" "+dz[i]+", "+this.pcX+"</b><br /> EoT: <b>"+fs+"</b> "+si+" <br /> <i>Coor: ( "+parseFloat(dp.JGN).toFixed(2)+" , "+parseFloat(dp.bnT).toFixed(2)+" )</i> ');", "onmouseout":"zJF();", "cursor":"pointer", "class":"ixa", "cx":x, "cy":z, "fill":clr, "r":this.Ana['circle']['ixa'][0] }
)); if(parseInt(dz[i]) == 1) { this.cTx[hourAng][m] = {}; this.cTx[hourAng][m]['DF_x'] = dp.JGN.toFixed(2); this.cTx[hourAng][m]['DF_y'] = dp.bnT.toFixed(2); if(this.cDw[hourAng]) { this.cTx[hourAng][m]['R'] = sAY(this.tJW,this.Fyz,dp.JGN,dp.bnT); this.cTx[hourAng][m]['Theta'] = gxo(dp.JGN - this.tJW, dp.bnT - this.Fyz); var delT = this.cDw[hourAng]['theta'] - this.cTx[hourAng][m]['Theta']; this.cTx[hourAng][m]['// Dist'] = this.cTx[hourAng][m]['R']*Math.cos(d2rad(delT)); this.cTx[hourAng][m]['|- Dist'] = this.cTx[hourAng][m]['R']*Math.sin(d2rad(delT)); }
}  }  }  }  }  } else { } jzv('right',0.0001); }, eHy : function(cb) { if(dge("EqTime"+cb.value+"_pts")) { dge("EqTime"+cb.value+"_pts").style.display = (cb.checked) ? 'block' : 'none'; }  }, GdN : function(cb) { var hrAng = cb.value; if(dge("EqTime"+hrAng)) { if(cb.checked) { var ipD = document.createElementNS(svgNS,"g"); ipD.setAttribute("id","EqTime"+hrAng+"dates"); dge("EqTime"+hrAng).appendChild(ipD); var dx; var dz = 3; var del = 12; var eqtime,ha,dp; for(var mon in GjE) { eqtime = GjE[mon][1]['e']; ha = parseFloat(hrAng) + parseFloat(this.msP) + parseFloat(eqtime)/4; dp = new EoK(this.SSs,ha,parseFloat(GjE[mon][1]['d'])); if(!isNaN(parseFloat(dp.JGN))) { x = parseFloat(this.iKe) * parseFloat(dp.JGN) + this.HTM; z = -parseFloat(this.iKe) * parseFloat(dp.bnT) + this.WKM; dx = (parseFloat(eqtime) > 0) ? del : -1 * del ; dx = (this.SSs == "YPj") ? -1 * dx : dx ; n = document.createTextNode(mon); t = document.createElementNS(svgNS,"text"); t.setAttribute("x",x + dx); t.setAttribute("y",z + dz); t.setAttribute("text-anchor","middle"); t.setAttribute("style","font-size:6pt"); t.appendChild(n); ipD.appendChild(t); }
}  } else { try { dge('EqTime'+hrAng).removeChild(dge("EqTime"+hrAng+"dates")); } catch(e) { warning("Unable to remove wrapper element for selected hour angle analemma dates:<br/>"+e.message,true); }
}  } else { } jzv('right',0.0001); }, hGn : function(targ) { var dl = ""; var so = ""; var po = ""; var da = ""; var Fb_ = (this.SSs == "YPj") ? (this.__j=='ipf') ? ' [Fixed] ' : " [Shepherd's] " : ''; if(targ && targ=="YqN") { if(this.SSs == 'tnf') { return 'Equation of Time: '+this.pcX+' [ Plot Width: '+this.wcF+' ] [ Plot Height: '+this.Fry+' ] '; }
else { return "<table id='nfx'><tr><th colspan='3' valign='top' style='text-align:left'>" +"Dial Summary: Type - <span style='color:#800'>"+(this.sSS[this.SSs]).toUpperCase()+Fb_+"</span></th></tr>" +"<tr><td valign='top' style='text-align:left'>" +biZ() +"</td>" +"<td valign='top' style='text-align:left'>" +mUP() +"</td>" +"<td valign='top' style='text-align:left'>" +oOS() +"</td>" +"</tr>" +"</table>"; }
} else { var o = ''; if(this.SSs == 'tnf') { o= 'Equation of Time: '+this.pcX+'<br />Plot Width: '+this.wcF+' <br />Plot Height: '+this.Fry; } else { o+="<br /><b style='font-variant:small-caps;letter-spacing:7px;font-size:9pt'>Dial Summary</b>" +"<br /><div>Dial Type : <span style='font-size:8pt'>"+(this.sSS[this.SSs]).toUpperCase()+Fb_+"</span></div>" +biZ() +mUP() +oOS() +""; }
dge("fEv").innerHTML = o; } function biZ() { return "<div>Dial Location</div><p>" +"Latitude : "+parseFloat(VFD.lat).toFixed(1)+" "+VFD.hemisphere +"<br />Longitude : "+parseFloat(VFD.msp).toFixed(1) +"<br />Time Zone Longitude : "+parseFloat(VFD.oyQ).toFixed(1)+"</p>"; }
function mUP() { var rstr = '<div>Style Orientation</div><p>'; if(VFD.SSs == "BlP") { if(VFD.Vgr=='parallel') { rstr += "Parallel to Earth's axis." +"<br />Style Angle: "+parseFloat(VFD.GoX).toFixed(2) +"<br />Style Distance: "+parseFloat(VFD.WNh).toFixed(2) +"<br />Substyle Coor: ("+parseFloat(VFD.Xeu).toFixed(2)+","+parseFloat(VFD.WoN).toFixed(2)+")" +"<br />Length/Scale: "+parseFloat(VFD.Wic).toFixed(2) +""; }
else { rstr += "Perpendicular to dial plane." +"<br />Dial Center: ("+parseFloat(VFD.tJW).toFixed(2)+","+parseFloat(VFD.Fyz).toFixed(2)+")" +"<br />Length/Scale: "+parseFloat(VFD.Wic).toFixed(2); }  }
else if(VFD.SSs == "ncP") { rstr += "Y-Axis thread offset: "+parseFloat(VFD.AxD).toFixed(2) +"<br />X-Axis thread offset: "+parseFloat(VFD.pDT).toFixed(2) +"<br />Dial Center: ("+parseFloat(VFD.tJW).toFixed(2)+","+parseFloat(VFD.Fyz).toFixed(2)+")" +""; }
else if(VFD.SSs == "ZPB") { rstr += "Gnomon is vertical and movable." +"<br />Position depends of day of year." +"<br />Height: "+parseFloat(VFD.Wic).toFixed(2); } else if(VFD.SSs == "YPj") { var stm = (VFD.__j == "ipf") ? " time of day. " : " day of year. " ; rstr += "Gnomon is horizontal and movable.<br />Position depends on "+stm +"<br />Scale/Length: "+parseFloat(VFD.Wic).toFixed(2); }
return rstr+"</p>"; } function oOS() { var rstr = "<div>Dial Face</div><p>"; var istr = (parseFloat(VFD.FFN) == 90) ? " (Horizontal) " : (parseFloat(VFD.FFN) == 0) ? ' (Vertical) ' : ''; var dstr = (parseFloat(VFD.LNV) > 0) ? " (West) " : (parseFloat(VFD.LNV) < 0) ? ' (East) ' : ' (South) '; if(VFD.SSs == "YPj") { rstr = "<div>Dial Face</div><p>" + "Radius : "+parseFloat(VFD.Uiq).toFixed(1) + "<br />Height : "+parseFloat(VFD.Fry).toFixed(1); }
else if(VFD.SSs == "ZPB") { rstr += "Horizontal" +"<br />Semi-major axis: "+VFD.Uiq +""; } else { rstr += "Dial Center : ( "+parseFloat(VFD.tJW).toFixed(2) +" , "+parseFloat(VFD.Fyz).toFixed(2)+" )" +"<br />Inclination: "+VFD.rKk + istr +"<br />Declination: "+VFD.LNV + dstr +"<br />Width : " +VFD.wcF +"<br />Height : "+VFD.Fry; }
rstr += "</p>"; return rstr; } function BaP() { var rstr = "<div>Plane Orientation</div><p>"; if(parseFloat(VFD.FFN) == 90) { rstr += "Horizontal"; rstr += "<br />Declination: "+parseFloat(VFD.LNV).toFixed(1)+""; }
else if(parseFloat(VFD.FFN) == 0) { rstr += "Vertical Dial"; if(parseFloat(VFD.LNV) == 0) { rstr += "<br />South-facing"; } else if(parseFloat(VFD.LNV) > 0) { rstr += "<br />Wall declination: "+parseFloat(VFD.LNV).toFixed(1)+" WEST"; }
else { rstr += "<br />Wall declination: "+parseFloat(VFD.LNV).toFixed(1)+" EAST"; }  } else { rstr = "<br />Inclination: "+parseFloat(VFD.rKk).toFixed(1)+"<dd>Declination: "+parseFloat(VFD.LNV).toFixed(1); }
return rstr+"</p>"; }  }, SbG : function(flag) { var s = dge("dialsetup").style.display; if(flag == "open") { WEl(); dge("Dialwrapper").style.display = "none"; dge("ddp").style.display = "none"; dge("ddc").style.display = "none"; dge("ZaA").style.display = "none"; for(var i=0; i<dialogs.length; i++) { dge(dialogs[i]).style.display = "none";}
var cbarr = new Array("ayT","_RL", "hon", "inverteot", "ONY", "MCV", "Fl_", "FjN", "NQQ", "HND", "sIa"); for(var i=0; i<cbarr.length; i++) { if(dge(cbarr[i])) { dge(cbarr[i]).checked = false; dge(cbarr[i]).parentNode.style.borderRight = 'none'; }
} var f = dge('YZH'); if(f.value.indexOf('[-]') != -1) { f.click(); } dge("dialsetup").style.display = "block"; dge(this.SSs).onclick(); location.href = "#setupAnchor"; } else if(flag =="close") { dge("dialsetup").style.display = "none"; if(VFD.dnZ){VFD.dnZ = null;}
this.EBU(); } else { warning("Unknown flag '<b>"+flag+"</b>' caught trying to toggle dial inputs.",true); }  }, SdN : function() { if(dge("WAM")) { this.aYi.removeChild(dge("WAM")); if(dge("YFs")) this.aYi.removeChild(dge("YFs")); this.bp_arr = new Array(); this.cDw = {}
; this.XtZ = {}; this.zi_ = {}; this.gwQ = {}; this.cTx = {}; this.mmW = 0; this.gx = 0; this.gy = 0; this.gz = 0; this.xFU = false; }  }, WoK : function() { var o = dge("SVGcanvas"); var ofs = 0; if(this.SSs == "tnf"){ofs=50;}
if((o.getAttribute("width") != this.wcF*this.iKe) || (o.getAttribute("height") != this.Fry*this.iKe)) { this.iKe = parseInt(screen.width/this.wcF)/2; o.setAttribute("width", this.wcF*this.iKe + ofs); o.setAttribute("height",this.Fry*this.iKe + ofs); this.HTM = this.wcF*this.iKe/2; this.WKM = this.Fry*this.iKe/2; if(this.rKk == 90) { this.WKM = this.Fry*this.iKe/8; }
} if(this.SSs == "tnf"){ this.iKe = parseInt(screen.height/this.Fry)/1.5; this.Wic = this.wcF/2; o.setAttribute("width", this.wcF*this.iKe + ofs); o.setAttribute("height",this.Fry*this.iKe + ofs); this.HTM = this.wcF*this.iKe/2 + ofs/2; this.WKM = this.Fry*this.iKe/2 + ofs/2; if(this.JcA == 'std') { this.HTM = ofs/2; }
} if(this.SSs == "ZPB") { this.iKe = parseInt(screen.width/this.Uiq)/5; o.setAttribute("width" ,this.Uiq*this.iKe*2.5); o.setAttribute("height",this.Uiq*this.iKe*2.5); this.HTM = this.Uiq*this.iKe+50; this.WKM = this.Uiq*this.iKe+50; }
if(this.SSs == "YPj") { var padding = 50; this.iKe = screen.width/(2*(2*Math.PI*this.Uiq)); o.setAttribute("width" ,screen.width/2); o.setAttribute("height",(screen.width/2)*this.Fry/(2*Math.PI*this.Uiq)); this.HTM = screen.width/4; this.WKM = 0; if(this.__j == 'iPF') { this.HTM = 0; }
}  }, RES : function(delx,delz) {  }, nIq : function() { var kJU = dge("wjL"); if(dge("TZV")) { kJU.removeChild(dge("TZV")); kJU.removeChild(dge("_Oq")); } var sb = FWe({"type":"g",'id':"TZV"}); var x1 = 10; var z1 = 20; var hgt = 3; if(this.SSs == "YPj") { z1 = this.Fry*this.iKe/mSP - z1; }
var len = this.Wic*this.iKe + 10; var sc1 = FWe({'type':"path",'id':'SCL1' ,"fill":"none" ,"stroke":"#000" ,"stroke-width":"1","d":"M "+x1+", "+z1+" L "+len+","+z1 }); var sc2 = FWe({'type':"path",'id':'SCL2' ,"fill":"none" ,"stroke":"#000" ,"stroke-width":"1","d":"M "+x1+", "+(z1-hgt)+" L "+x1+", "+(z1+hgt) }
); var sc3 = FWe({'type':"path",'id':'SCL3' ,"fill":"none" ,"stroke":"#000" ,"stroke-width":"1","d":"M "+len+","+(z1-hgt)+" L "+len+","+(z1+hgt)}); sb.appendChild(sc1); sb.appendChild(sc2); sb.appendChild(sc3); kJU.appendChild(sb); var n = document.createTextNode("Scale: "+this.Wic); var t = FWe({'type':"text", "x":x1, "y":(z1-2), "id":"_Oq", "text-anchor":"start", "style":"font-size:8pt" }
); t.appendChild(n); kJU.appendChild(t); }, _Eu : function() { var attr; for(var fHr in this.Ana) { attr = (fHr=="path") ? "stroke-width" : "r"; for(var dIa in this.Ana[fHr]) { if(dIa != "origin") this.XUu(fHr,dIa,attr,"restore"); }
}  }, XUu : function(fHr,dIa,attribute,plusminus) { var ss = document.getElementsByTagNameNS(svgNS,fHr); var currVal,newVal; for(var c=0; c<ss.length; c++) { if(ss[c]["className"]["baseVal"] == dIa) { currVal = parseFloat(ss[c].getAttribute(attribute)); newVal = (plusminus=="restore") ? this.Ana[fHr][dIa][1] : (plusminus=="plus") ? currVal *= 1.5 : currVal /= 1.5; ss[c].setAttribute(attribute,newVal); try { this.Ana[fHr][dIa][0] = newVal; }
catch(e){} }  }  }, ALq : function(h) { for(var i=0; i<this.SmS.length; i++) { if(h == this.SmS[i]) return this.qha[i]; } return "Time not found...?"; }, pgY : function(minmax,constrain) { var qoJ = constrain || false; var darr = (qoJ) ? this.decl : this.TzB; var maxv = -1000; var minv = 1000; for(var z=0; z<darr.length; z++) { maxv = (maxv > darr[z]) ? maxv : darr[z] ; minv = (minv < darr[z]) ? minv : darr[z] ;  }
if(minmax == "max") { return maxv; } else if(minmax == "min") { return minv; } else { warning("Indeterminate value returned from <b>pgY()</b>...?...Invalid argument...?...",true); return 0; }  }, Lrg : function(h,ufR,flag,txt) { flag = (flag == undefined) ? true : flag; txt = (txt == undefined) ? "" : txt; var Aqe = (flag) ? (parseFloat(h)-this.msP).toFixed(0) : h; for(var i=0; i<this.SmS.length; i++) { if(Aqe == this.SmS[i]) { return (ufR=="ampm") ? txt+this.qha[i] : txt+this._nl[i]; }
} return ""; }, yum : function(cx,cy,cz,px,py,pz) { var x,y,z; var res = 0.001; if(Math.abs(cy) > res) { y = (((this.A*cx/cy + this.C*cz/cy) * py - this.A * px - this.C * pz) / ( this.A*cx/cy + this.B + this.C*cz/cy)); x = (px + cx/cy * ( y - py )); z = (pz + cz/cy * ( y - py )); }
else if(Math.abs(cx) > res) { x = (((this.B*cy/cx + this.C*cz/cx) * px - this.B * py - this.C * pz) / ( this.B*cy/cx + this.A + this.C*cz/cx)); y = (py + cy/cx * ( x - px )); z = (pz + cz/cx * ( x - px )); }
else { z = (((this.A*cx/cz + this.B*cy/cz) * pz - this.A * px - this.B * py) / ( this.A*cx/cz + this.C + this.B*cy/cz)); x = (px + cx/cz * ( z - pz )); y = (py + cy/cz * ( z - pz )); } var dfx = (x * this.nx + y * this.ny); var zee = gBO(1,x,y,z,1,this.nx,this.ny,0); var dfz = Math.sqrt(Math.pow(z * Math.sin(d2rad(this.LNV)),2) + Math.pow(z * Math.cos(d2rad(this.LNV)),2) + Math.pow(y * Math.cos(d2rad(this.LNV)) + x * Math.sin(d2rad(this.LNV)),2) ); if(z < 0) dfz = -1*(Math.abs(dfz)); return new Array(dfx,dfz,x,y,z); }
, Ini : function() { try { if(this.dnZ) { for(var oid in this.dnZ) { if(dge(oid) && this.dnZ[oid]['o']) { if(this.dnZ[oid]['o'].checked) { if(this.dnZ[oid]['ds'] == false) { this.dnZ[oid]['o'].onclick(); dge(oid).checked = true; }
} else { if(oid.indexOf("hourline_") == 0) { this.dnZ[oid]['o'].onclick(); dge(oid).checked = false; } else if(this.dnZ[oid]['ds'] == true) { this.dnZ[oid]['o'].onclick(); dge(oid).checked = false; }
}  }  }  }  } catch(e) { warning("Whoops...an error occured while trying to display extra settings:<br />MSG: <b>"+e.message+"</b>",true); }  }, tCI : function() { var targ = dge('zel'); s = '<table id="BrQ" cellspacing="0">'; var act,tdecor,dstr; for(var i=0; i<this.twx.length; i++) { dstr = (this.GRH[this.twx[i]]) ? '<span style="font-size:7pt"> ... ( '+this.GRH[this.twx[i]]+' )</span> ' : '' ; act = (this.decl.indexOf(this.twx[i]) != -1) ? "HIDE" : "RESTORE"; tdecor = (this.decl.indexOf(this.twx[i]) != -1) ? "none;color:#000" : "line-through;color:#faa"; s += "<tr>" + "<td align='right' style='text-decoration:"+tdecor+"' class='solcalL' id='solcalL"+this.twx[i]+"'>"+this.twx[i]+"</td>" + "<td align='left' class='solcalR' id='solcalR"+this.twx[i]+"'>" + "<a href='javascript:void(0);' id='sclink"+this.twx[i]+"' onclick='VFD.DAH(\"toggle\",this,"+this.twx[i]+");void(0);'>"+act+"</a>"+dstr + "</td>" + "" + "" + "</tr>"; }
s += "</table>"; targ.innerHTML = s; }, DAH : function(action,iobj,decl) { switch (action) { case "toggle" : var idx = this.decl.indexOf(decl); if(idx == -1) { this.decl.push(decl); this.decl.sort(numberorder); if(dge("declination"+decl)) { dge("declination"+decl).style.display = 'block'; dge("wCL"+decl).style.display = 'block'; dge("solcalL"+decl).style.textDecoration = 'none'; dge("solcalL"+decl).style.color = '#000'; iobj.innerHTML = "HIDE"; }
else { this.zWX(this.WAM,decl,false); this.tCI(); } this.DwN('add',decl); } else { this.decl.splice(idx,1); dge("declination"+decl).style.display = 'none'; dge("wCL"+decl).style.display = 'none'; dge("solcalL"+decl).style.textDecoration = 'line-through'; dge("solcalL"+decl).style.color = '#faa'; iobj.innerHTML = "RESTORE"; this.DwN('pop',decl); }
break; case "insert" : var newdecl = parseFloat(document.forms[0].newsc.value); if(isNaN(newdecl)) { alert("Invalid number...please retry."); document.forms[0].newsc.select(); } else { if(Math.abs(newdecl) > this.tSn) { alert("Out of range...please retry."); document.forms[0].newsc.select(); }
else if(this.twx.indexOf(newdecl) != -1) { alert("Value already present."); document.forms[0].newsc.select(); } else { this.decl.push(newdecl); this.decl.sort(numberorder); this.twx.push(newdecl); this.twx.sort(numberorder); this.zWX(this.WAM,newdecl,false); this.tCI(); this.DwN('add',newdecl); }
} break; case "reset" : var decl,svgel,htmel,inx; for(var i=0; i<this.twx.length; i++) { if(this.TzB.indexOf(this.twx[i]) == -1) { decl = this.twx[i]; inx = this.decl.indexOf(decl); if(inx != -1){this.decl.splice(inx,1);}
try { svgel = dge("declination"+decl); htmel = dge("wCL"+decl); if(svgel){svgel.parentNode.removeChild(svgel);} if(htmel){htmel.parentNode.removeChild(htmel);} else{warning(decl,true);} } catch(e) { warning("?EXCEPTION? : "+tS(e),true); }
}  } this.DwN('reset',null); this.twx = new Array(); for(var a=0; a<this.TzB.length; a++) { this.twx.push(this.TzB[a]); } this.tCI(); dge('vfs').checked = false; dge('uhP').checked = false; break; default: break; }
jzv("left",0.001); }, DwN : function(task,dec) { switch(task) { case 'add': var dpt; for(var ha in this.zi_) { if(this.zi_[ha].length > 1) { try { dpt = new EoK(this.SSs,this.zi_[ha][0].ha,dec); if(dpt.isValid && this.decl.indexOf(dec) != -1 && this.cDw[ha]['decl'].indexOf(dec) == -1) { this.cDw[ha]['decl'].push(dec); this.cDw[ha]['decl'].sort(numberorder); this.cDw[ha]['radius'].push(sAY(this.tJW,this.Fyz,dpt.JGN,dpt.bnT)); this.cDw[ha]['radius'].sort(numberorder); }
}catch(e){} }  } break; case 'pop': var iloc; for(var ha in this.zi_) { if(this.zi_[ha].length > 1) { try { iloc = this.cDw[ha]['decl'].indexOf(dec); if(iloc != -1) { this.cDw[ha]['decl'].splice(iloc,1); this.cDw[ha]['radius'].splice(iloc,1); }
}catch(e){} }  } break; case 'reset': var ii; for(var ha in this.zi_) { if(this.zi_[ha].length > 1) { for(var ad=0; ad<this.twx.length; ad++) { try { ii = this.cDw[ha]['decl'].indexOf(this.twx[ad]); if(ii != -1) { this.cDw[ha]['decl'].splice(ii,1); this.cDw[ha]['radius'].splice(ii,1); }
}catch(e){} }  }  } for(var nd=0; nd<this.TzB.length; nd++) { this.DwN('add',this.TzB[nd]); } break; default: break; } this.IMr(); }, iLI : function() { var ostr = "<div id='EmK'><ul>"; var Woz = ""; var uKG = ""; var hlchecked,eotchecked,eotdatechecked,eotptschecked; for(var i=-180;i<=180;i+=15) { if(this.zi_[i]) { ha = i; hlchecked = "checked='true'"; eotchecked = ""; eotdatechecked = ""; eotptschecked = ""; if(this.zi_[ha].length > 1) { uKG = this.qha[this.SmS.indexOf(parseFloat(ha))]; hlchecked = (dge('oDP').checked) ? "checked='true'" : ""; if(this.dnZ && this.dnZ["hourline_"+uKG]) { hlchecked = (this.dnZ["hourline_"+uKG].checked) ? "checked='true'" : ""; }
if(this.dnZ && this.dnZ["eqt_"+uKG]) { eotchecked = (this.dnZ["eqt_"+uKG].checked) ? "checked='true'" : "" ; } if(this.dnZ && this.dnZ["eqt_"+uKG+"_cal"]) { eotdatechecked = (this.dnZ["eqt_"+uKG+"_cal"].checked) ? "checked='true'" : ""; }
if(this.dnZ && this.dnZ["eqt_"+uKG+"_pts"]) { eotptschecked = (this.dnZ["eqt_"+uKG+"_pts"].checked) ? "checked='true'" : ""; } Woz = uKG.replace(/([ap])m/," <sup style='font-size:8pt'>$1m</sup>"); ostr += "<li>" + "" + Woz + " : "  + " <input "+hlchecked+" onclick='qmo(this,true);VFD.FCO(this.value,this.checked)' title='Toggle display of the hour line.' type='checkbox' id='hourline_"+uKG+"' name='hourline_"+uKG+"' value='"+ha+"' />" + " <input "+eotchecked+" onclick='qmo(this,false);VFD.vCr(this)' title='Toggle display of the Equation of Time.' type='checkbox' id='eqt_"+uKG+"' name='eqt_"+uKG+"' value='"+ha+"' />" + " <input "+eotptschecked+" onclick='qmo(this,false);VFD.eHy(this)' title='Toggle display of the data for the 1st, 11th and 22nd of each month.' disabled='true' type='checkbox' id='eqt_"+uKG+"_pts' name='eqt_"+uKG+"_pts' value='"+ha+"' />" +"</li>"; }
}  } ostr += '</ul>'; ostr += "<input onclick='OBI(this)' type='button' class='btn' id='ObI' name='ObI' value='Toggle All Hour Lines' />"; ostr += "<br /><input onclick='OBI(this)' type='button' class='btn' id='FX_' name='FX_' value='Toggle All Analemmas' />"; ostr += '</div>'; dge("lRx").innerHTML = ostr; }
}; function EoK(dialtype,h,d,force) { this.ha = h || 0; this.ElL = d2rad(this.ha); this.decl = d || 0; this.n_d = d2rad(this.decl); this.SmS = parseFloat((parseFloat(this.ha) - parseFloat(VFD.msP)).toFixed(2)); this.azm = 0; this.theta = 0; this.aTO = 0; this.alt = 0; this.afO = 0; this.quadrant = 0; this.isValid = false; this.JpQ = 0; this.egr = 0; this.D1 = 0; this.D2 = 0; this.force = force || false; this.bnp(); this.Anh(); this.jFl(); this.dx = "-"; this.dy = "-"; this.dz = "-"; this.mBr(); this.JpQ = parseFloat(fhx(1,VFD.A,VFD.B,VFD.C,1,this.dx,this.dy,this.dz)).toFixed(3); this.egr = parseFloat(fhx(1,0,0,1,1,this.dx,this.dy,this.dz)).toFixed(3); this.x = "-"; this.y = "-"; this.z = "-"; this.JGN = "-"; this.bnT = "-"; this.RGE = "-"; this.av = 0; this.bv = 0; this.cv = 0; this.dv = 0; this.ah = 0; this.bh = 0; this.ch = 0; this.dh = 0; this.lx = 0; this.ly = 0; this.lz = 0; this.rPv(); this.qYV = (this.alt > 0) ? true : false; if(VFD.SSs == "BlP" || VFD.SSs == "ncP") { if(parseFloat(VFD.rKk) == 0 ) { this.JGN = this.x; this.bnT = this.y; }
this.dist = sAY(0,0,this.JGN,this.bnT); if(parseFloat(sAY(0,0,this.JGN,this.bnT)) < parseFloat(VFD.Tlw)) { this.isValid = true; }  }  } EoK.prototype.rPv = function() { var res = 0.001; switch(VFD.SSs) { case "BlP": if((this.JpQ > 0 && this.egr > 0) || this.force) { var dialCoor = VFD.yum(this.dx,this.dy,this.dz,VFD.gx,VFD.gy,VFD.gz); this.JGN = dialCoor[0]; this.bnT = dialCoor[1]; this.x = dialCoor[2]; this.y = dialCoor[3]; this.z = dialCoor[4]; }
else { } break; case "ncP": if((this.JpQ > 0 && this.egr > 0) || this.force) { var planeV = gBO(1,this.dx,this.dy,this.dz,1,VFD.dxV,VFD.dyV,VFD.dzV); this.av = planeV[1]; this.bv = planeV[2]; this.cv = planeV[3]; this.dv = this.av * VFD.xv + this.bv * VFD.yv + this.cv * VFD.zv; var planeH = gBO(1,this.dx,this.dy,this.dz,1,VFD.dxH,VFD.dyH,VFD.dzH); this.ah = planeH[1]; this.bh = planeH[2]; this.ch = planeH[3]; this.dh = this.ah * VFD.xh + this.bh * VFD.yh + this.ch * VFD.zh; var px, py, pz; if(Math.abs(this.av) > Math.abs(this.bv)) { pz = 0; py = (this.dh - this.dv*this.ah/this.av)/(this.bh - this.bv*this.ah/this.av); px = (this.dv - this.bv*py - this.cv*pz)/this.av; }
else { pz = 0; px = (this.dh - this.dv*this.bh/this.bv)/(this.ah - this.av*this.bh/this.bv); py = (this.dv - this.av*px - this.cv*pz)/this.bv; } var loi = gBO(1,this.ah,this.bh,this.ch,1,this.av,this.bv,this.cv); var lx = loi[1]; var ly = loi[2]; var lz = loi[3]; var coorArr = VFD.yum(lx,ly,lz,px,py,pz); this.JGN = coorArr[0]; this.bnT = coorArr[1]; this.x = coorArr[2]; this.y = coorArr[3]; this.z = coorArr[4]; }
break; case "YPj": if(this.egr > 0) { this.isValid = true; this.x = "na"; this.y = "na"; this.z = "na"; this.bnT = -1 * VFD.Wic * Math.tan(this.afO); if(VFD.__j == "ipf") { this.JGN = VFD.Uiq * (Math.PI-this.aTO); }
else { this.JGN = 0; } if(Math.abs(this.bnT) > VFD.Fry) { this.bnT = -VFD.Fry; }  } break; case "ZPB": if(this.egr > 0) { this.isValid = true; if(!isNaN(parseFloat(this.dx)) && !isNaN(parseFloat(this.dy))) {this.theta = gxo(this.dx,this.dy);}
} break; default: this.z = 0; this.x = 0; this.y = 0; break; }  }; EoK.prototype.calculate_tplo = function() { this.D1 = parseFloat(sAY(tp_layout.x1,tp_layout.y1,this.JGN,this.bnT)).toFixed(2); this.D2 = parseFloat(sAY(tp_layout.x2,tp_layout.y2,this.JGN,this.bnT)).toFixed(2); }
; EoK.prototype.bnp = function() { this.aTO = Math.atan( Math.sin(this.ElL)/( Math.sin(VFD.AYf)*Math.cos(this.ElL) - Math.tan(this.n_d)*Math.cos(VFD.AYf) ) ); this.azm = rad2d(this.aTO); }; EoK.prototype.Anh = function() { this.afO = Math.asin( Math.sin(VFD.AYf)*Math.sin(this.n_d) + Math.cos(VFD.AYf)*Math.cos(this.n_d)*Math.cos(this.ElL) ); this.alt = rad2d(this.afO); }
; EoK.prototype.jFl = function() { if(this.ha == 0) { this.azm = (VFD.lat < 0) ? 0 : 180; if(this.decl > 0 && VFD.lat >= 0) { if(Math.abs(VFD.lat) < Math.abs(this.decl)) this.azm+=180; } if(this.decl < 0 && VFD.lat < 0) { if(Math.abs(VFD.lat) < Math.abs(this.decl)) this.azm+=180; }
} else if(VFD.lat >= 0) { if(this.ha < -180) { this.azm += 0; } else if(this.ha < 0) { if(this.azm > 0) { this.azm += 0; } else { this.azm += 180; }  } else if(this.ha < 180) { if(this.azm > 0) { this.azm += 180; }
} else { this.azm += 0; }  } else { if(this.ha < -180) { this.azm += 180; } else if(this.ha < 0) { if(this.azm > 0) { this.azm += 0; } else { this.azm += 180; }  } else if(this.ha < 180) { if(this.azm > 0) { this.azm += 180; }
} else { this.azm += 180; }  } if((VFD.SSs == "YPj") && (VFD.__j == "ipf")) { if(this.azm < 0) { this.azm += 360; }  } this.aTO = d2rad(this.azm); }; EoK.prototype.mBr = function() { this.dx = Math.sin(this.aTO) * Math.cos(this.afO); this.dy = Math.cos(this.aTO) * Math.cos(this.afO); this.dz = Math.sin(this.afO); }
; EoK.prototype.toHTML = function(KIY) { var rstr = ""; var cP = 3; var pP = 2; var tplo_dist = ""; if(tp_layout.enabled) { this.calculate_tplo(); tplo_dist = "<td style='background:#fee'>( "+this.D1+" , "+this.D2+" )</td>"; }
rstr += "<tr><td>"+KIY+"</td><td>"+parseFloat(this.ha).toFixed(2)+"</td>" + "<td>"+parseFloat(this.alt).toFixed(2)+"</td>" + "<td>"+parseFloat(this.azm).toFixed(2)+"</td>" + "<td>"+(this.dx).toFixed(cP)+"</td>" + "<td>"+(this.dy).toFixed(cP)+"</td>" + "<td>"+(this.dz).toFixed(cP)+"</td>" + "<td>"+(isNaN(parseFloat(this.x)) ? this.x : parseFloat(this.x).toFixed(pP))+"</td>" + "<td>"+(isNaN(parseFloat(this.y)) ? this.y : parseFloat(this.y).toFixed(pP))+"</td>" + "<td>"+(isNaN(parseFloat(this.z)) ? this.z : parseFloat(this.z).toFixed(pP))+"</td>" + "<td class='datacol'>"+(isNaN(parseFloat(this.JGN)) ? this.JGN : parseFloat(this.JGN).toFixed(pP))+"</td>" + "<td class='datacol'>"+(isNaN(parseFloat(this.bnT)) ? this.bnT : parseFloat(this.bnT).toFixed(pP))+"</td>" + tplo_dist + "</tr>"; return rstr; }
; EoK.prototype.ts = function(pk) { var f = pk || 'table'; var color = (this.isValid) ? "red" : "black"; var dots = (this.JpQ > 0 && this.egr > 0) ? true : false; if(f=='table') { return "<table style='background:white'><tr>" + "<td>ha : "+this.ha+"</td>" + "<td>decl : "+this.decl+"</td>" + "<td>dx : "+ parseFloat(this.dx ).toFixed(3)+"</td>" + "<td>dy : "+ parseFloat(this.dy ).toFixed(3)+"</td>" + "<td>dz : "+ parseFloat(this.dz ).toFixed(3)+"</td>" + "<td>azm : "+parseFloat(this.azm).toFixed(2)+"</td>" + "<td>alt : "+parseFloat(this.alt).toFixed(2)+"</td>" + "<td>quadrant : "+this.quadrant+"</td>" + "<td>JGN : "+parseFloat(this.JGN).toFixed(2)+"</td>" + "<td>bnT : "+parseFloat(this.bnT).toFixed(2)+"</td>" + "</tr></table>"; }
else { return "<ul>" + "<li>isValid : "+this.isValid+"</li>" + "<li>ha : "+this.ha+"</li>" + "<li>decl : "+this.decl+"</li>" + "<li>azm : "+this.azm+"</li>" + "<li>alt : "+this.alt+"</li>" + "<li>quadrant : "+this.quadrant+"</li>" + "<li>dx : "+this.dx+"</li>" + "<li>dy : "+this.dy+"</li>" + "<li>dz : "+this.dz+"</li>" + "<li>x : "+this.x+"</li>" + "<li>y : "+this.y+"</li>" + "<li>z : "+this.z+"</li>" + "<li>JGN : "+this.JGN+"</li>" + "<li>bnT : "+this.bnT+"</li>" + "<li>RGE : "+this.RGE+"</li>" + "</ul>"; }
}; EoK.prototype.toString = function() { return "<ul>" + "<li>isValid : "+this.isValid+"</li>" + "<li>ha : "+this.ha+"</li>" + "<li>decl : "+this.decl+"</li>" + "<li>azm : "+parseFloat(this.azm).toFixed(2)+"</li>" + "<li>alt : "+parseFloat(this.alt).toFixed(2)+"</li>" + "<li>quadrant : "+this.quadrant+"</li>" + "<li>dx : "+this.dx+"</li>" + "<li>dy : "+this.dy+"</li>" + "<li>dz : "+this.dz+"</li>" + "<li>x : "+this.x+"</li>" + "<li>y : "+this.y+"</li>" + "<li>z : "+this.z+"</li>" + "<li>JGN : "+this.JGN+"</li>" + "<li>bnT : "+this.bnT+"</li>" + "<li>RGE : "+this.RGE+"</li>" + "</ul>"; return this.ts('list'); return this.decl; }
; var bp_arr = new Array(); var $wf = 1.25; function FWe(o) { var e = document.createElementNS(svgNS,o['type']); e['type'] = null; for(var p in o) { e.setAttribute(p,o[p]); } return e; } function fhx( R1, x1, y1, z1, R2, x2, y2, z2) { return R1*R2*(x1*x2 + y1*y2 + z1*z2); }
function gBO( R1, x1, y1, z1, R2, x2, y2, z2) { var i = y1 * z2 - y2 * z1; var j = x2 * z1 - x1 * z2; var k = x1 * y2 - x2 * y1; var normalize = Math.sqrt( i*i + j*j + k*k ); if(normalize == 0){return new Array(0,0,0,0);}
i /= normalize; j /= normalize; k /= normalize; var mag = R1 * R2 * normalize; return new Array(mag,i,j,k); } function sAY(x1,z1,x2,z2) { return Math.sqrt(Math.pow(parseFloat(x1)-parseFloat(x2),2) + Math.pow(parseFloat(z1)-parseFloat(z2),2)); }
function gxo(deltaX,deltaZ) { var theta; if(parseFloat(deltaX) == 0) { if(parseFloat(deltaZ) > 0) { theta = 90; } else { theta = 270; }  } else if(parseFloat(deltaZ) == 0) { if(parseFloat(deltaX) > 0) { theta = 0; }
else { theta = 180; }  } else { theta = rad2d(Math.atan(deltaZ/deltaX)); if(parseFloat(deltaX)<0 && parseFloat(deltaZ)>0) { theta = parseFloat(theta) + parseFloat(180); } else if(parseFloat(deltaX)<0 && parseFloat(deltaZ)<0) { theta = parseFloat(theta) + parseFloat(180); }
else if(parseFloat(deltaX)>0 && parseFloat(deltaZ)<0) { theta = parseFloat(theta) + parseFloat(360); }  } return theta; } var GjE = {}; function mOs(y) { GjE = {}; if(isNaN(parseInt(y))) { warning("Invalid value detected for 'year'...unable to compute the <i>equation of time</i>",true); warning("...execution halted...",true); return false; }
var dayMilliSec = 24 * 60 * 60 * 1000; var dt = new Date(y,0,1,0); var bgMilliSec = dt.getTime(); dt = new Date(y,0,1,0); var j,s,e,mn,d,preve,prevd; for(var i=0; i<365; i++) { dt.setTime(bgMilliSec + i*dayMilliSec); d = dt.getDate(); j = new mfb(dt.getFullYear(),dt.getUTCMonth()+1,d*1+.75); s= new FCM(j.jday); e = new Hgb(s.time,s.longitude,s.ADB,s.eccentricity); mn = getMonthName(dt.getUTCMonth()); if(!GjE[mn]){ GjE[mn] = {}
;} GjE[mn][d] = {}; GjE[mn][d]['e'] = e.etime; GjE[mn][d]['d'] = s.DECL; GjE[mn][d]['n'] = i; if(preve && prevd) { GjE[mn][d]['pa'] = gxo(e.etime-preve,s.DECL-prevd); } else{ GjE[mn][d]['pa'] = 171;} preve = e.etime; prevd = s.DECL; }
return true; } var noDrag = false; function resizeDiv(event,dobj) { noDrag = true; var nbody = document.getElementsByTagName("body")[0]; var currWidth = (!isNaN(parseInt(dobj.style.width))) ? dobj.style.width : 600; var currHeight = (!isNaN(parseInt(dobj.style.height))) ? dobj.style.height : 300; var sx = event.clientX; var sy = event.clientY; if(document.addEventListener) { nbody.addEventListener("mousemove", adjustSize, true); nbody.addEventListener("mouseup", stopResize, true); }
else if(document.attachEvent) { nbody.attachEvent("onmousemove", adjustSize); nbody.attachEvent("onmouseup", stopResize); } else { var oldmoveHandler = document.onmousemove; var oldupHandler = document.onmouseup; document.onmousemove = adjustSize; document.onmouseup = stopresize; }
if (event.stopPropagation) event.stopPropagation(); else event.cancelBubble = true; if (event.preventDefault) event.preventDefault(); else event.returnValue = false; function adjustSize(e) { if(!e) e = window.event; var delX = e.clientX - sx; var delY = e.clientY - sy; dobj.style.width = (currWidth + delX)+"px"; dobj.style.height = (currHeight + delY)+"px"; if (e.stopPropagation) e.stopPropagation(); else e.cancelBubble = true; }
function stopResize(e) { dobj.style.cursor = "default"; if(!e) e = window.event; if(document.removeEventListener) { nbody.removeEventListener("mousemove", adjustSize, true); nbody.removeEventListener("mouseup", stopResize, true); }
else if(document.detachEvent) { nbody.detachEvent("onmousemove", adjustSize); nbody.detachEvent("onmouseup", stopResize); } else { document.onmousemove = oldmoveHandler; document.onmouseup = oldupHandler; }
if (e.stopPropagation) e.stopPropagation( ); else e.cancelBubble = true; noDrag = false; }  } function adjustZIndex(dobj) { var Ckg = document.getElementsByTagName("div"); var MAXZ = -1; var MAXID = ""; var MINZ = 99999; var MINID = ""; var idx; for(var i=0; i<Ckg.length; i++) { if(Ckg[i].style.zIndex) { idx = parseFloat(Ckg[i].style.zIndex); if(!isNaN(idx)) { if(idx > MAXZ) { MAXZ = idx; }
if(idx < MINZ) { MINZ = idx; }  }  } else { }  } if(parseFloat(dobj.style.zIndex) == MAXZ) return; dobj.style.zIndex = MAXZ+1; } function jng(event,divObj) { adjustZIndex(divObj); if(noDrag) return; var nbody = document.getElementsByTagName("body")[0]; divObj.style.cursor = "move"; var tLl = divObj.offsetLeft; var IbB = divObj.offsetTop; var startX = event.clientX; var startY = event.clientY; if(document.addEventListener) { nbody.addEventListener("mousemove", adjustPos, true); nbody.addEventListener("mouseup", stopMove, true); }
else if(document.attachEvent) { nbody.attachEvent("onmousemove", adjustPos); nbody.attachEvent("onmouseup", stopMove); } else { var oldmoveHandler = document.onmousemove; var oldupHandler = document.onmouseup; document.onmousemove = adjustPos; document.onmouseup = stopMove; }
if (event.stopPropagation) event.stopPropagation(); else event.cancelBubble = true; if (event.preventDefault) event.preventDefault(); else event.returnValue = false; function adjustPos(e) { if(!e) e = window.event; var delX = e.clientX - startX; var delY = e.clientY - startY; divObj.style.left = (tLl + delX)+"px"; divObj.style.top = (IbB + delY)+"px"; if (e.stopPropagation) e.stopPropagation(); else e.cancelBubble = true; }
function stopMove(e) { divObj.style.cursor = "default"; if(!e) e = window.event; if(document.removeEventListener) { nbody.removeEventListener("mousemove", adjustPos, true); nbody.removeEventListener("mouseup", stopMove, true); }
else if(document.detachEvent) { nbody.detachEvent("onmousemove", adjustPos); nbody.detachEvent("onmouseup", stopMove); } else { document.onmousemove = oldmoveHandler; document.onmouseup = oldupHandler; }
if (e.stopPropagation) e.stopPropagation( ); else e.cancelBubble = true; } } function jzv(dir,delta) { switch (dir) { case "left": tx -= delta; ty += 0; Roo.setAttribute( "transform", "translate("+tx+","+ty+"), scale("+mSP+")" ); KgZ.setAttribute( "transform", "scale("+mSP+")" ); break; case "right": tx += delta; ty += 0; Roo.setAttribute( "transform", "translate("+tx+","+ty+"), scale("+mSP+")" ); KgZ.setAttribute( "transform", "scale("+mSP+")" ); break; case "up": tx += 0; ty -= delta; Roo.setAttribute( "transform", "translate("+tx+","+ty+"), scale("+mSP+")" ); KgZ.setAttribute( "transform", "scale("+mSP+")" ); break; case "down": tx += 0; ty += delta; Roo.setAttribute( "transform", "translate("+tx+","+ty+"), scale("+mSP+")" ); KgZ.setAttribute( "transform", "scale("+mSP+")" ); break; case "in": mSP *= delta; Roo.setAttribute( "transform", "translate("+tx+","+ty+"), scale("+mSP+")" ); KgZ.setAttribute( "transform", "scale("+mSP+")" ); break; case "out": mSP /= delta; Roo.setAttribute( "transform", "translate("+tx+","+ty+"), scale("+mSP+")" ); KgZ.setAttribute( "transform", "scale("+mSP+")" ); break; case "restore": mSP = 1; tx = 0; ty = 0; Roo.setAttribute( "transform", "translate("+tx+","+ty+"), scale("+mSP+")" ); KgZ.setAttribute( "transform", "scale("+mSP+")" ); break; }
showZoom(); } function fetchScrollPosition() { var ypos = 10; var w = 0; var h = 0; if (window.innerHeight) { h = window.innerHeight; } else if (document.documentElement && document.documentElement.clientHeight) { h = document.documentElement.clientHeight; }
else if (document.body.clientHeight) { h = document.body.clientHeight; } if (window.innerWidth) { w = window.innerWidth; } else if (document.documentElement && document.documentElement.clientWidth) { w = document.documentElement.clientWidth; }
else if (document.body.clientWidth) { w = document.body.clientWidth; } try { if(window.pageYOffset) { ypos = window.pageYOffset + 10; } if(document.documentElement.scrollTop > 0) { ypos = document.documentElement.scrollTop + 10; }
else if(document.body.scrollTop > 0) { ypos = document.body.scrollTop + 10; }  } catch(e){} return new Array(w,ypos,h); } var down = false; var lastX, lastY; var tx = 0, ty = 0; var mSP = 1; function mzoom(e) { var d,dir,dx,dy,pzm,R; if(!e){e = window.event;}
e.preventDefault(); d=e.detail? e.detail*(-120) : e.wheelDelta; dir = d/Math.abs(d); R = dge('SVGW').getBoundingClientRect(); dx = 200; dy = 200; console.log(""+ e.clientX +" : "+ e.clientY +""); pzm = mSP; mSP = (dir > 0) ? mSP*1.5 : mSP/1.5; dx *= (pzm - mSP); dy *= (pzm - mSP); tx += dx; ty += dy; Roo.setAttribute( "transform", "translate("+tx+","+ty+"), scale("+mSP+")" ); KgZ.setAttribute( "transform", "scale("+mSP+")" ); showZoom(); }
function Zoom(evt) { if(evt.ctrlKey && !evt.altKey) { mSP *= 0.75; tx += mSP*VFD.wcF; ty += mSP*VFD.Fry; Roo.setAttribute( "transform", "translate("+tx+","+ty+"), scale("+mSP+")" ); KgZ.setAttribute( "transform", "scale("+mSP+")" ); showZoom(); }
else if(evt.altKey && !evt.ctrlKey) { mSP *= 1/0.75; tx -= mSP*VFD.wcF; ty -= mSP*VFD.Fry; Roo.setAttribute( "transform", "translate("+tx+","+ty+"), scale("+mSP+")" ); KgZ.setAttribute( "transform", "scale("+mSP+")" ); showZoom(); }
else if(evt.altKey && evt.ctrlKey) { mSP = 1; tx = 0; ty = 0; Roo.setAttribute( "transform", "translate("+tx+","+ty+"), scale("+mSP+")" ); KgZ.setAttribute( "transform", "scale("+mSP+")" ); showZoom(); }
else { } } function Down(evt) { if(evt.altKey || evt.ctrlKey) return; lastX = evt.clientX; lastY = evt.clientY; down = true; Roo.setAttribute("cursor","move"); } function Up(evt) { if(evt.altKey || evt.ctrlKey) return; down = false; if(!evt.altKey && !evt.ctrlKey) Roo.setAttribute("cursor","default"); }
function Move(evt) { if( ! down ) return; var x,y,dx,dy; x = evt.clientX; y = evt.clientY; dx = x - lastX; dy = y - lastY; lastX = x; lastY = y; tx += dx; ty += dy; Roo.setAttribute( "transform", "translate("+tx+","+ty+"), scale("+mSP+")" ); }
function showZoom() { if(dge("BzU")) { dge("fixed").removeChild(dge("BzU")); } var xc = (VFD.SSs == "YPj") ? VFD.Fry*VFD.iKe - 5 : 10; var zc = (VFD.SSs != "ZPB") ? VFD.wcF : VFD.Uiq*2.5 ; zc = zc * VFD.iKe - 25; var sc = mSP.toFixed(2); var n = document.createTextNode(sc+"X"); var t = FWe( {'type':"text", "y":xc, "x":zc, "id":"BzU", "text-anchor":"start", "title":"Zoom Level", "fill":"#800", "cursor":"pointer", "style":"font-size:7pt;"}
); t.appendChild(n); dge("fixed").appendChild(t); if(VFD.SSs == "YPj") {VFD.nIq();} } function show_north() { if(dge("N_arr")) { dge("north").removeChild(dge("N_arr")); } if((VFD.SSs == "BlP") || (VFD.SSs == "ncP")) { var yc = 20; var xc = VFD.wcF * VFD.iKe - 20; if(!dge('N_arr_txt')) { var n = document.createTextNode("NORTH"); var t = FWe( {'type':"text", "y":yc, "x":xc, "id":"N_arr_txt", "text-anchor":"middle", "fill":"#000", "style":"font-size:7pt;"}
); t.appendChild(n); dge("north").appendChild(t); } var x1,y1,x2,y2,x3,y3; yc+=15; var crss = gBO(1,VFD.A,VFD.B,VFD.C,1,1,0,0); var delx = fhx(1,VFD.nx,VFD.ny,0,1,crss[1],crss[2],crss[3]); var yax = gBO(1,VFD.A,VFD.B,VFD.C,1,VFD.nx,VFD.ny,0); var dely = fhx(1,crss[1],crss[2],crss[3],1,yax[1],yax[2],yax[3]); x1 = xc + delx*10; x2 = xc - delx*10; y1 = yc - dely*10; y2 = yc + dely*10; x3 = xc + dely*5; y3 = yc + delx*5; if(VFD.rKk > 90) { var xt = x1; x1=x2; x2=xt; var yt = y1; y1=y2; y2=yt; }
var a = FWe({'type':'path', "d":"M"+x2+","+y2+"L"+x1+","+y1+"L"+x3+","+y3+"L"+xc+","+yc, "title":"This direction represents the intersection of the dial plane and the local meridian (i.e. Due North).", "id":"N_arr", "fill":"none", "stroke":"#000", "stroke-width":1.5, "cursor":"pointer" }
); dge("north").appendChild(a); }  } function J_n(b) { var a,t,v,w,h; a = document.forms[0].tzt_svg; if(b.name=='XF_') { v = (b.value=='cm')?'matrix(35.433,0,0,-35.433,0,0)':'matrix(90.0,0,0,-90.0,0,0)'; a.value = a.value.replace(/matrix\(\d+\.\d+,0,0,-\d+\.\d+,0,0\)/,v); }
else { v = 'viewBox="'; w = 'width="'; h = 'height="'; if(b.value=='letter') { w=765;h=990; } else if(b.value=='legal') { w=765;h=1260; } else { w=744;h=1052; } a.value = a.value.replace(/width='\d+'/,"width='"+w+"'"); a.value = a.value.replace(/height='\d+'/,"height='"+h+"'"); a.value = a.value.replace(/viewBox='0 0 \d+ \d+'/,"viewBox='0 0 "+w+" "+h+"'"); }
} var restoreTo = ""; var restore = {}; var Ked = new Array("FOW","LhP","ZaA","qKL","ddc","ddp","GWz"); function printDialGraphic() { for(var i=0; i<Ked.length; i++) { restore[Ked[i]] = (dge(Ked[i]).style.display == "block") ? true : false; dge(Ked[i]).style.display = "none"; }
window.print(); var d = document.createElement('div'); d.setAttribute("id","restoreDial"); d.style.textAlign = "center"; d.innerHTML = "<a style='font-size:8pt;' href='javascript:restorePrePrintLayout();'>RESTORE</a>"; document.body.insertBefore(d, document.body.firstChild); }
var canvas; var PGH; var VcI; function restorePrePrintLayout() { for(var i=0; i<Ked.length; i++) { if(restore[Ked[i]] == true) { dge(Ked[i]).style.display = "block"; }  } var d = dge("restoreDial"); d.parentNode.removeChild(d); }
var dialogs = new Array('SGl','GBX','LRi','ATX', 'ZIH', 'Dr_', 'txJ','XHp','zgp'); function fnk(bobj) { var xc = dge("SVGW").offsetLeft; var yc = dge("SVGW").offsetTop; xc = fetchScrollPosition()[0]/2 - 100; var dl = dge(bobj.name); dl.style.display = "block"; dl.style.left = (1*xc+100)+"px"; dl.style.top = (1*yc+100)+"px"; adjustZIndex(dl); var tags = new Array("dt","dd"); var dts; for(var j=0; j<tags.length; j++) { dts = document.getElementsByTagName(tags[j]); for(var i=0; i<dts.length; i++) { if(dts[i].hasAttribute("class") && dts[i].getAttribute("class").indexOf("XYZ") != -1) { if(dts[i].getAttribute("class").indexOf(VFD.SSs) != -1) { dts[i].style.display = "block"; }
else { dts[i].style.display = "none"; }  }  }  } if(VFD.SSs == 'tnf') { dge('Yvr').style.display = (VFD.JcA=='anl') ? 'block': 'none' ;  } } function OBI(bobj) { var PJi = 0; var YjS = 0; var state = 'on'; var els = document.forms[0].elements; for(var i=0; i<els.length; i++) { if((bobj.name=="FX_" && els[i].type == "checkbox" && els[i].name.indexOf("eqt_") != -1 && els[i].name.indexOf("_pts") == -1) || ( bobj.name=="ObI" && els[i].type == "checkbox" && els[i].name.indexOf("hourline_") != -1) )  { PJi++; if(els[i].checked) YjS++; }
} state = (YjS/PJi > 0.5) ? 'on' : 'off' ; for(var i=0; i<els.length; i++) { if((bobj.name == "FX_" && els[i].type == "checkbox" && els[i].name.indexOf("eqt_") != -1 && els[i].name.indexOf("_pts") == -1) || ( bobj.name == "ObI" && els[i].type == "checkbox" && els[i].name.indexOf("hourline_") != -1) )  { if(state == 'on') { if(els[i].checked) els[i].click(); }
else { if(!els[i].checked) els[i].click(); }  }  } if(bobj.name.indexOf("_hourlines") != -1) { dge("oDP").checked = (state == 'off') ? true : false ; }  } function closeDialog() {  } var anchor; function mMm(did,flag,mIR) { anchor = "#"+did+"_anchor"; var d = dge(did).style.display; if(flag && flag==1) d = "none"; if(d == "none" || d.length == 0) { dge(did).style.display = "block"; if(mIR) { dge(mIR).onclick(); }
setTimeout(scrollTo,0); } else { dge(did).style.display = "none"; } } function scrollTo() { location.href=anchor; } var prevHelpId; function oKK(helpid,flg) { if(prevHelpId && dge(prevHelpId)) { dge(prevHelpId).style.display = "none"; }
var helpfile = dge(helpid); var arr = fetchScrollPosition(); if(helpfile) { var str = "<div style='-moz-border-radius:5px;-webkit-border-radius:5px;-khtml-border-radius:5px;border-radius:5px;float:left;background:#888;color:white;font-size:7pt;padding:5px;margin:-10px 10px 0px -10px' class='vuB,round5'> H <br />E <br />L <br />P <br />F <br />I <br />L <br />E </div>"; if(helpfile.innerHTML.indexOf("vuB") == -1 && flg) { helpfile.innerHTML = str + helpfile.innerHTML; }
var Wis = parseFloat(helpfile.style.width); Wis = (Wis) ? Wis : 600; prevHelpId = helpid; var dx = (parseFloat(arr[0]) - parseFloat(Wis))/2; var dy = parseFloat(arr[1]) + 50; helpfile.style.display = "block"; helpfile.style.top = dy+"px"; helpfile.style.left = dx+"px"; adjustZIndex(helpfile); }
else { warning("Whoops!...no help file found for <b>"+helpid+"</b>?",true); } } function TcV(tobj,did) { for(var m = tobj.parentNode.firstChild; m != null; m = m.nextSibling) { if(m.hasAttribute && m.hasAttribute("class") && m.getAttribute("class").indexOf("selected") != -1 ) { m.setAttribute("class","tab_unselected"); }
} tobj.setAttribute("class","tab_selected"); if ( !VFD.sSS[did] && dge(did) )  { var d = dge(did); var dv = d.parentNode.getElementsByTagName("div"); for(var i=0; i<dv.length; i++) { dv[i].style.display = 'none'; }
d.style.display = "block"; } else { leO(did); } } var noY; function leO(dialog) { noY = dialog; if(DB_z) warning("passing "+dialog+" to select setup dialog elements function",true); var tags = new Array("dt","dd","span"); for(var i=0; i<tags.length; i++) { var els = document.getElementsByTagName(tags[i]); for(var j=0; j<els.length; j++) { if(els[j].hasAttribute("class") && ( els[j].getAttribute("class").indexOf("ZZZ") != -1)) { if( els[j].getAttribute("class").indexOf(dialog) != -1) { els[j].style.display = "block"; }
else { els[j].style.display = "none"; }  }  }  } } function wNj(pm) { WEl(); var sobj = dge("bYw"); var XrB = sobj.options[sobj.selectedIndex].value; var incrBy = parseFloat(document.forms[0]["URJ"].value); incrBy *= (pm == "plus") ? 1 : -1 ; if(XrB == "x") { warning("Please select a setting to <i>pan</i>.",true); }
else if (isNaN(incrBy)) { warning("Unable to successfully parse <i>Increment Value</i>.",true); } else { var aTe,tKU; var proceed = false; aTe = parseFloat(document.forms[0][XrB].value) + incrBy; tKU = parseFloat(document.forms[0][XrB].value); if(qeS(XrB,aTe,tKU)) { document.forms[0][XrB].value = parseFloat(document.forms[0][XrB].value) + incrBy; document.forms[0][XrB].onchange(); proceed = true; }
if(proceed) { VFD.EBU(); VFD.YeR(XrB); }  } } var Hqr = {  'rKk' : { 'nm' : 'Dial Inclination', 'max' : 180, 'min': 0}, 'msp' : { 'nm' : 'Dial Longitude', 'max' : 180, 'min': -180}, 'oyQ' : { 'nm' : 'Time Zone Meridian', 'max' : 180, 'min': -180}
, 'lat' : { 'nm' : 'Latitude', 'max' : 90, 'min': -90}, 'Wic' : { 'nm' : 'Dial Scale', 'max' : 1000, 'min': 0}, 'wcF' : { 'nm' : 'Dial Width', 'max' : 1000, 'min': 5}, 'Fry' : { 'nm' : 'Dial Height', 'max' : 1000, 'min': 5}
, 'Uiq' : { 'nm' : 'Dial Radius', 'max' : 1000, 'min': 1}, 'QAG' : { 'nm' : 'Dial Radius', 'max' : 1000, 'min': 1}, 'rsF' : { 'nm' : 'Dial Radius', 'max' : 1000, 'min': 1}, 'AxD' : { 'nm' : 'Y-Axis Offset', 'max' : 1000, 'min': 0}
, 'pDT' : { 'nm' : 'X-Axis Offset', 'max' : 1000, 'min': 0}, 'LNV' : { 'nm' : 'Dial Declination', 'max' : 180, 'min': -180}, 'pcX' : { 'nm' : 'EoT Year', 'max' : 2200, 'min': 1900} }; function qeS(vname,newv,oldv) { if(Hqr[vname]) { if(Hqr[vname]['max'] < newv) { warning('The maximum value for <b>'+Hqr[vname]['nm']+'</b> is : '+Hqr[vname]['max'],true); document.forms[0].elements[vname].value = (!isNaN(parseFloat(oldv))) ? oldv : Hqr[vname]['max']; return false; }
else if(Hqr[vname]['min'] > newv) { warning('The minimum value for <b>'+Hqr[vname]['nm']+'</b> is : '+Hqr[vname]['min'],true); document.forms[0].elements[vname].value = (!isNaN(parseFloat(oldv))) ? oldv : Hqr[vname]['min']; return false; }
} return true; } var JfX = { 'x' : {'class':'tnf,BlP,ncP,YPj,ZPB' , 'text' : 'Select Setting'}, 'pcX' : {'class':'tnf' , 'text' : 'Year'}, 'lat' : {'class':'BlP,ncP,YPj,ZPB' , 'text' : 'Latitude'}, 'msp' : {'class':'BlP,ncP,YPj,ZPB' , 'text' : 'Longitude'}
, 'Wic' : {'class':'BlP,YPj,ZPB' , 'text' : 'Scale'}, 'LNV' : {'class':'BlP,ncP' , 'text' : 'Declination'}, 'rKk' : {'class':'BlP,ncP' , 'text' : 'Inclination'}, 'Fry' : {'class':'tnf,BlP,ncP,YPj' , 'text' : 'Height (Y-Dim)'}
, 'wcF' : {'class':'tnf,BlP,ncP' , 'text' : 'Width (X-Dim)'}, 'Uiq' : {'class':'YPj,ZPB' , 'text' : 'Radius'}, 'pDT' : {'class':'ncP' , 'text' : 'X-Axis Offset'}, 'AxD' : {'class':'ncP' , 'text' : 'Y-Axis Offset'}
}; function CkQ(dtype,varname) { var s = dge('bYw'); s.options.length = 0; var nopt,select; for(var fld in JfX) { select = (varname && varname==fld) ? true : false; if(JfX[fld]['class'].indexOf(dtype) != -1) { nopt = new Option(JfX[fld]['text'],fld,false,select); s.options[s.options.length] = nopt; }
}  } function VXR(ha) { var hai = (ha < 0) ? 180 + parseFloat(ha) : ha; var h = parseInt(hai/15); var m = parseInt((hai/15 - h) * 60); m = (m < 10) ? ":0"+m : ":"+m; return h+""+m; } var MSG_z = ''; function warning(msg,show) { var s = (MSG_z.length == 0) ? "" : "<br />"; MSG_z += s+"<b>*</b> "+msg; if(show) ZvB(); }
function ZvB() { if(MSG_z.length > 0) { var arr = fetchScrollPosition(); var wbox = dge("warning"); var w = parseInt(wbox.style.width); wbox.style.display = "block"; wbox.style.top = (parseFloat(arr[1]) + parseFloat(window.innerHeight/10))+"px"; wbox.style.left = (parseFloat(arr[0])/2 - parseFloat(w)/2)+'px'; dge("VNv").innerHTML = MSG_z; dge("AGT").focus(); adjustZIndex(wbox); }
} function WEl() { MSG_z = ''; dge("warning").style.display = "none"; dge("VNv").innerHTML = ""; } function Nxi(tobj) { if(!isNaN(parseFloat(tobj.value))) { if(qeS(tobj.name,parseFloat(tobj.value),null)) { VFD[tobj.name] = parseFloat(tobj.value).toFixed(5); tobj.value = parseFloat(tobj.value); }
} else { if(VFD.vgR[tobj.name]) { tobj.value = VFD.vgR[tobj.name]; VFD[tobj.name] = VFD.vgR[tobj.name]; } else { tobj.value = 0; }  } } function d2rad(angle) { return angle*Math.PI/180; } function rad2d(angle) { return angle*180/Math.PI; }
function db(txt,brk,n) { var lb = (brk && brk==true) ? "<br />" : ""; var s = ""; if(!isNaN(n)) { n = parseInt(n); for(var i=0; i<n; i++) s += " ."; } dge("debug").innerHTML += "<span style='white-space:nowrap'>"+lb+s+txt+"</span>"; dge("debug").style.display = "block"; dge("debug").style.border = "1px solid #f00"; }
function cleardb() { dge("debug").innerHTML = ""; } var abc,xhE; function Lqf(tid,func) { if(dge(tid)) { xhE = tid; abc = dge(tid).innerHTML; var pwin = window.open("","",""); pwin.document.open(); if(location.href.indexOf("DialLayout.xhtml") != -1) { pwin.document.write("<link rel='stylesheet' type='text/css' href='DialLayout.css'>"); }
else { pwin.document.write("<link rel='stylesheet' type='text/css' href='Dial.css'>"); } pwin.document.write("<form>"+abc+"</form>"); pwin.document.close(); if(pwin.document.getElementById(xhE+"_blip")){ pwin.document.getElementById(xhE+"_blip").style.display = "none"; }
var tags = pwin.document.getElementsByTagName("a"); for(var i=0; i<tags.length; i++) { tags[i].style.display = "none"; } if(func){eval(func);} pwin.print(); } else { alert("Whoops!...document text not found...?\n\n"+tid); }
} function tS(obj,recursive) { var o = "<ul>"; try { for(var p in obj) { o += "<li><b>"+p+"</b>: "+obj[p]+"</li>"; if(typeof obj[p] == "object") { if(recursive) { o += tS(obj[p],recursive); }  }  }  }
catch(e) { o += "<li style='color:red'>EXCEPTION: "+e.message+"</li>"; } o += "</ul>"; return o; } function dial_cmp(event,inm) { if(inm.indexOf("0") != -1) { alert("The images for this comparison aren't online yet.\n\n....sorry :(\n\nCheck back soon!"); return; }
var targ = dge("img_displ_div"); var h = fetchScrollPosition(); var img = new Image(); img.src = "CMP_"+inm+"_a.gif"; targ.innerHTML = "<img title='Click to Close.' alt='Click to Close.' style='cursor:pointer' onclick='this.parentNode.style.display=\"none\"' onmouseover=\"this.src='CMP_"+inm+"_b.gif'\" onmouseout=\"this.src='CMP_"+inm+"_a.gif'\" src='"+img.src+"' />"; targ.style.display = "block"; targ.style.background = "#eee"; targ.style.top = (h[1]/1+100/1)+"px"; targ.style.left = (h[0]/2 - img.width/2)+"px"; adjustZIndex(targ); }
function qgj(arr) { var sum=0; var EYJ = 0; for(var i=0; i<arr.length; i++) { sum += parseFloat(arr[i]); } var ave = sum/arr.length; for(var i=0; i<arr.length; i++) { EYJ += Math.pow(arr[i] - ave,2); }
var std = Math.sqrt(EYJ/((arr.length-1))); return new Array(ave,std); } function IDS(lat,decl) { var ah = 90 - Math.abs(rad2d(lat)); var a = 180 - rad2d(Math.acos(Math.tan(lat)*Math.tan(decl))); return 180 - rad2d(Math.acos(Math.tan(lat)*Math.tan(decl))); }
function XqC(apoint) { var scale2 = 1000; var scalefac,maxV; maxV = (Math.abs(apoint.JGN) > Math.abs(apoint.bnT)) ? apoint.JGN : apoint.bnT; if(Math.abs(maxV) > scale2) { scalefac = Math.abs(maxV)/scale2; apoint.JGN /= scalefac; apoint.bnT /= scalefac; }
return apoint; } function qmo(obj,ds) { if(!VFD.dnZ) { VFD.dnZ = {}; } var label = obj.id ; VFD.dnZ[label] = {}; VFD.dnZ[label]['o'] = obj; VFD.dnZ[label]['ds'] = ds; } function QzX(dp1,dp2,steps,awrpr) { var rstr = ''; var decl1 = parseFloat(dp1.decl); var ha1 = parseFloat(dp1.ha); var decl2 = parseFloat(dp2.decl); var ha2 = parseFloat(dp2.ha); var declDelta = (parseFloat(decl2) - parseFloat(decl1))/steps; var haDelta = (parseFloat(ha2) - parseFloat(ha1))/steps; var var2incr = (Math.abs(declDelta) > Math.abs(haDelta)) ? 'decl' : 'ha'; var childVar = (var2incr == 'decl') ? 'ha' : 'decl'; var idp; var deltaVar = eval(var2incr+'Delta'); var startVar = eval(var2incr+'1'); var endVar = eval(var2incr+'2'); var startChildVar = eval(childVar+'1'); var deltaChildVar = eval(childVar+'Delta'); var cp,pp; var knt = 0; for(var ivar = startVar+deltaVar; ivar<endVar; ivar+=deltaVar) { startChildVar += deltaChildVar; if(var2incr == 'decl') { idp = new EoK(VFD.SSs,startChildVar,ivar) }
else { idp = new EoK(VFD.SSs,ivar,startChildVar) } if(isNaN(parseFloat(idp.JGN)) || isNaN(parseFloat(idp.bnT))) {  } else { pp = cp; cp = idp; if(VFD.SSs=='YPj' && pp) { if(sAY(pp.JGN,pp.bnT,cp.JGN,cp.bnT) > VFD.wcF/$wf) { bp_arr.push({'fp':pp,'sp':cp}
); }  } if(awrpr) { awrpr.appendChild( FWe({ 'type':'circle', 'cursor':'pointer', "onmouseover":"lFc('[HA:"+idp.ha+"] COOR:( "+(idp.JGN).toFixed(2)+" , "+idp.bnT+" )');", "onmouseout":"zJF();", 'fill':'#000', 'r':'2', 'cx':c2gs('x',idp.JGN),'cy':c2gs('y',idp.bnT) }
));} rstr += 'L'+c2gs('x',idp.JGN)+','+c2gs('y',idp.bnT)+' '; } knt++; if(knt>100) { break; }  } decl1 = null; ha1 = null; decl2 = null; ha2 = null; declDelta = null; haDelta = null; var2incr = null; childVar = null; idp; deltaVar = null; startVar = null; endVar = null; startChildVar = null; deltaChildVar = null; return rstr; }
function c2gs(axis,coor) { switch(axis) { case "x" : coor = VFD.HTM + VFD.iKe*parseFloat(coor); break; case "y" : coor = VFD.WKM - VFD.iKe*parseFloat(coor); break; case "z" : coor = VFD.WKM - VFD.iKe*parseFloat(coor); break; default: coor = VFD.HTM; break; }
return coor.toFixed(3); } function c2ds(axis,coor) { switch(axis) { case "x" : coor = (parseFloat(coor) - VFD.HTM)/VFD.iKe; break; case "z" : coor = -1*(parseFloat(coor) - VFD.WKM)/VFD.iKe; break; default: break; }
return coor.toFixed(3); } function zCv(bobj) { if(dge("XCQ").style.display=="block") { dge("XCQ").style.display="none"; bobj.value="Furniture [+]"; } else { if(VFD.SSs == 'YPj' && VFD.__j == 'iPF') { alert('There is no standard furniture for this dial type.'); }
else { dge("XCQ").style.display="block"; bobj.value="Furniture [-]"; }  } } function UWY(obj) { if(obj.value=='[--]') { obj.value = '[+]'; obj.title = 'Restore'; var n = obj.parentNode.parentNode.childNodes; for(var c in n) { if(n[c].hasAttribute && n[c].hasAttribute("class") && n[c].getAttribute('class') == 'minimize') { n[c].style.display = "none"; break; }
}  } else { obj.value = '[--]'; obj.title = 'Minimize'; var n = obj.parentNode.parentNode.childNodes; for(var c in n) { if(n[c].hasAttribute && n[c].hasAttribute("class") && n[c].getAttribute('class') == 'minimize') { n[c].style.display = "block"; break; }
}  } } function REU(lid,exe) { var lyr = dge(lid); adjustZIndex(lyr); var hd = mktag('div',{'id':'xblocker', 'style':'opacity:0.5; background:black; width:100%; height:2000px; position:fixed; top:0px; left:0px'}
); hd.innerHTML = ' '; lyr.parentNode.insertBefore(hd,lyr); lyr.style.display = "block"; if(exe){try{eval(exe);}catch(e){}} location.href='#top'; } var Pre = { 'Watch' : {'input':true, 'targid':'watch','size':10}
, 'Delta-X' : {'input':true, 'targid':'deltax','size':3}, 'Delta-Y' : {'input':true, 'targid':'deltay','size':3}, 'Local Time' : {'input':false,'targid':'lt'}, 'LHA' : {'input':false,'targid':'lha'}, 'Alt1' : {'input':false,'targid':'alt1'}
, 'Alt2' : {'input':false,'targid':'alt2'}, 'Sun Azm' : {'input':false,'targid':'sazm'}, 'Wall Azm ' : {'input':false,'targid':'wazm'}, 'Wall Decl' : {'input':false,'targid':'wdec'} }; var kan = { t : null, eot : null, delng : null, Owlng : null, Otzlng: null, Owlat : null, wlng : null, tzlng: null, wlat : null, delwatch : null, fq_ : null, dec : null, rowcnt : 0, rdgcnt : 0, readings : {}
, nodus : 1, IGR : false, init : function() { VFD.EBU(); this.tzlng = parseFloat(document.forms[0].elements.oyQ.value); this.wlng = parseFloat(document.forms[0].elements.msp.value); this.wlat = parseFloat(document.forms[0].elements.lat.value); if(isNaN(this.tzlng) || isNaN(this.wlng)) { alert('Unable to process longitude values from dial setup dialog...?\n\nPlease open up the dial setup and enter appropriate values.\n\nProcessing discontinued.'); return; }
var l = dge('HAC'); l.innerHTML = "Wall Lat: "+this.wlat +" (deg)" +"<br />Wall Long: "+this.wlng +" (deg)" +"<br />Time Zone : "+this.tzlng +" (deg)"; this.delng = ((this.tzlng - this.wlng)*4)/60; var l = dge('BKP'); l.innerHTML = "<b>"+c2tf(this.delng,false)+" </b> (h:m:s)"; if(!this.IGR) { this.Otzlng = parseFloat(document.forms[0].elements.oyQ.value); this.Owlng = parseFloat(document.forms[0].elements.msp.value); this.Owlat = parseFloat(document.forms[0].elements.lat.value); t = dge('waB'); var rh = mktag('tr',null); t.appendChild(rh); var tc; for(var hdg in Pre) { tc = (Pre[hdg]['targid']=='wdec') ? mktag('th',{'style':'color:#800;border:1pt solid #800'}
) : mktag('th',null); tc.innerHTML = hdg; rh.appendChild(tc); } tc = mktag('td',{'style':'border:0pt;font-size:7pt'}); tc.innerHTML = "Ignore"; rh.appendChild(tc); tc = mktag('td',{'style':'border:0pt;font-size:7pt'}
); tc.innerHTML = "Discard"; rh.appendChild(tc); this.klK(dge('Xoj')); this.dVj(dge('i_P')); this.pWC(); this.IGR = true; }  }, wanker1 : function() { var i = { 0 : { 'watch':'10:37:15','deltax': '-3.55','deltay':'6.05'}
, 1 : { 'watch':'11:00:50','deltax': '-2.90','deltay':'6.10'}, 2 : { 'watch':'12:03:20','deltax': '-0.10','deltay':'6.10'}, 3 : { 'watch':'13:01:06' ,'deltax': '2.15' ,'deltay':'6.05'}, 4 : { 'watch':'14:00:00' ,'deltax': '4.50' ,'deltay':'5.35'}
, 5 : { 'watch':'15:00:00' ,'deltax': '7.60' ,'deltay':'5.5'}, 6 : { 'watch':'16:01:13' ,'deltax': '12.35','deltay':'4.8'}, }; for(var inx in i) { for(var ipt in i[inx]) { dge('input'+inx+ipt).value = i[inx][ipt]; dge('input'+inx+ipt).onchange(); }
}  }, BKk : function() { this.reset('all'); document.forms[0].elements.oyQ.value = 90; document.forms[0].elements.msp.value = 93.3; document.forms[0].elements.lat.value = 37.5; this.init(); dge('vc_').value = '5.47'; dge('i_P').value = '18.5/10/2009'; dge('Xoj').value = '-00:04'; dge('vc_').onchange(); dge('i_P').onchange(); dge('Xoj').onchange(); var i = { 0 : { 'watch':'8:53:37' ,'deltax': '-7.65','deltay':'4.60'}
, 1 : { 'watch':'10:06:25' ,'deltax': '-4.15','deltay':'5.15'}, 2 : { 'watch':'11:28:18' ,'deltax': '-1.15','deltay':'5.25'}, 3 : { 'watch':'12:25:07' ,'deltax': '0.75' ,'deltay':'5.20'}, 4 : { 'watch':'13:25:02' ,'deltax': '2.80' ,'deltay':'5.05'}
, 5 : { 'watch':'14:40:30' ,'deltax': '6.00' ,'deltay':'4.70'}, 6 : { 'watch':'16:13:06' ,'deltax': '12.00','deltay':'3.30'}, }; for(var inx in i) { for(var ipt in i[inx]) { dge('input'+inx+ipt).value = i[inx][ipt]; dge('input'+inx+ipt).onchange(); }
}  }, reset : function(action) { if(action=='all') { document.forms[0].elements.oyQ.value = this.Otzlng; document.forms[0].elements.msp.value = this.Owlng; document.forms[0].elements.lat.value = this.Owlat; this.init(); var d = new Date(); dge('vc_').value = '1.0'; dge('i_P').value = d.getDate()+'/'+(d.getMonth()+1)+'/'+d.getFullYear(); dge('Xoj').value = '00:00'; dge('vc_').onchange(); dge('i_P').onchange(); dge('Xoj').onchange(); }
var r = dge('waB').childNodes; var nc = new Array(); for(var i=1; i<r.length; i++) { nc.push(r[i]); } for(var i=0; i<nc.length; i++) { nc[i].parentNode.removeChild(nc[i]); } for(var rdg in this.readings) { this.readings[rdg] = null; }
this.readings = {}; this.LTn(); this.rdgcnt=0; this.rowcnt=0; this.pWC(); }, klK : function(tobj) { var s = (tobj.value.indexOf('-') != -1) ? -1 : 1; var ms = tobj.value.split(/[:.]/g); if(ms.length!=2 || isNaN(ms[0]) || isNaN(ms[1])) { alert("There was an error processing the watch correction.\n\nA value of zero has been assumed."); tobj.value = '00:00'; tobj.select(); }
this.delwatch = s*(Math.abs(parseFloat(ms[0])) + Math.abs(parseFloat(ms[1])/60)); this.delwatch /= 60; var w = dge('hPe'); w.innerHTML = "<b>"+c2tf(this.delwatch,false)+"</b> (h:m:s)"; this.YUu(); }, dVj : function(tobj) { var dd = tobj.value.split(/\//g); var y = parseFloat(dd[2]); var m = parseFloat(dd[1]); var d = parseFloat(dd[0]); if(isNaN(y) || isNaN(m) || isNaN(d)) { if(dd[0] != 'dd'){ alert("Error processing date...\n\nSetting to today's date.");}
y = (isNaN(y)) ? (new Date()).getFullYear() : y; m = (isNaN(m)) ? (new Date()).getMonth()+1 : m ; d = (isNaN(d)) ? (new Date()).getDate() : d; } tobj.value = d+'/'+m+'/'+y; var jd = new mfb(y,m,d,12); scoor = new FCM(jd.jday); etime = new Hgb(scoor.time,scoor.longitude,scoor.ADB,scoor.eccentricity); var t = dge('eWB'); t.innerHTML = " Solar DECL: "+scoor.DECL.toFixed(2) +" (deg)" +"<br />Solar RA: "+scoor.RA.toFixed(2) +" (deg)" +"<br />Solar EoT: "+etime.etime.toFixed(2)+" (min)"; t = dge('YLo'); t.innerHTML = "<b>"+c2tf(etime.etime/60,false)+"</b> (h:m:s)"; this.eot = etime.etime/60; this.dec = scoor.DECL; this.YUu(); }
, YUu : function() { try { this.fq_ = parseFloat(this.delng) + parseFloat(this.delwatch) + parseFloat(this.eot); dge('Jia').innerHTML = "<b>"+c2tf(this.fq_,false)+" </b> (h:m:s)"; for(var rdg in this.readings) { this.readings[rdg].sWm(); }
}catch(e){warning(e.message,true);} }, Flw : function(iobj,rnbr,field) { switch(field) { case 'Watch': var v = iobj.value.split(/[:.]/g); if(v.length !=3 || isNaN(parseFloat(v[0])) || isNaN(parseFloat(v[1])) || isNaN(parseFloat(v[2])) )  { iobj.select(); alert("Error processing time...\n\nEnter values in the form: hh:mm:ss.ss"); return false; }
var h = parseFloat(v[0]); var m = parseFloat(v[1]); var s = parseFloat(v[2]); if(this.readings[rnbr]) { this.readings[rnbr].hh = h; this.readings[rnbr].mm = m; this.readings[rnbr].ss = s; } else { this.readings[rnbr] = new XgQ(rnbr,h,m,s,null,null); this.rdgcnt++; }
this.readings[rnbr].sWm(); break; case 'Delta-X': var delx = parseFloat(iobj.value); if(isNaN(delx)) { alert("Invalid value detected for Delta-X"); iobj.value = 0; iobj.select(); } if(this.readings[rnbr]) { this.readings[rnbr].delx = delx; if(this.readings[rnbr].dely != null) { this.readings[rnbr].LKu(); }
} else { this.readings[rnbr] = new XgQ(rnbr,null,null,null,delx,null); this.rdgcnt++; } break; case 'Delta-Y': var dely = Math.abs(parseFloat(iobj.value)); if(isNaN(dely)) { alert("Invalid value detected for Delta-Y"); iobj.value = 0; iobj.select(); }
if(this.readings[rnbr]) { this.readings[rnbr].dely = dely; if(this.readings[rnbr].delx != null) { this.readings[rnbr].LKu(); }  } else { this.readings[rnbr] = new XgQ(rnbr,null,null,null,null,dely); this.rdgcnt++; }
break; default: break; }  }, pWC : function() { var t = dge('waB'); rh = mktag('tr',{'id':'row'+this.rowcnt}); t.appendChild(rh); for(var hdg in Pre) { tc = mktag('td',{'id':this.rowcnt+Pre[hdg]['targid']}
); if(Pre[hdg]['input'] == true) { tc.innerHTML = "<input onchange='kan.Flw(this,"+this.rowcnt+",\""+hdg+"\");' size='"+Pre[hdg]['size']+"' name='input"+this.rowcnt+Pre[hdg]['targid']+"' id='input"+this.rowcnt+Pre[hdg]['targid']+"' value='' />"; }
else { if(Pre[hdg]['targid']=='wdec') { tc.style.background = '#eee'; tc.style.fontWeight = 'bold'; } tc.innerHTML = "..."; } rh.appendChild(tc); } tc = mktag('td',{'style':'border:0pt;'}); tc.innerHTML = "<input title='Check if value should not be included in determining average.' type='checkbox' onclick='kan.qsW(this)' value='"+this.rowcnt+"' name='ignore"+this.rowcnt+"' id='ignore"+this.rowcnt+"' />"; rh.appendChild(tc); tc = mktag('td',{'style':'border:0pt;'}
); tc.innerHTML = "<input title='Completely remove this reading from the table.' type='checkbox' onclick='kan.discard(this)' value='"+this.rowcnt+"' name='discard"+this.rowcnt+"' id='discard"+this.rowcnt+"' />"; rh.appendChild(tc); dge('input'+this.rowcnt+'watch').focus(); this.rowcnt++; }
, discard : function(cobj) { var ri = cobj.value; if(cobj.checked && ri == this.rowcnt-1) { cobj.checked = false; return; } this.readings[ri].Hey = false; this.LTn(); dge('row'+ri).style.display='none'; }
, qsW : function(cobj) { var ix = cobj.value; if(this.readings[ix]) { this.readings[ix].Hey = (cobj.checked) ? false : true ; this.LTn(); } else { cobj.checked = false; }  }, LTn : function() { var r2u = 0; for(var r in this.readings) { if(this.readings[r].Hey) {r2u++;}
} if(r2u < 3) { if(dge('dFm')) { dge('dFm').innerHTML = ''; dge('dFm').style.display = 'none'; } return; } var v = new Array(); for(var r in this.readings) { if(this.readings[r].Hey) { v.push(this.readings[r]['wdec']); }
} var stdv = qgj(v); var htm = ' <b>&lt;AVER&gt;: '+ parseFloat(stdv[0]).toFixed(1)+'</b> +/- <i>'+parseFloat(stdv[1]).toFixed(1)+'</i>'; if(dge('dFm')) { dge('dFm').innerHTML = htm; dge('dFm').style.display = 'block'; }
else { var t = dge('waB').parentNode; var d = document.createElement('div'); d.setAttribute('id','dFm'); d.setAttribute('style','float:right;background:#fee;margin:0px 40px 0px 0px;padding:15px;border:1pt solid #800'); t.appendChild(d); d.innerHTML = htm; }
}, fetch_data : function(w) { var f1 = w.document.forms[0]; var f2 = document.forms[0]; var fdz = new Array('vc_', 'i_P', 'Xoj'); for(var i=0; i<fdz.length; i++) { f1.elements[fdz[i]].value=f2.elements[fdz[i]].value; }
for(var r in this.readings) { f1.elements['ignore'+r].checked = f2.elements['ignore'+r].checked; for(var p in Pre) { if(Pre[p]['input']) { f1.elements['input'+r+Pre[p]['targid']].value=f2.elements['input'+r+Pre[p]['targid']].value; }
}  }  }, jgc : function(iobj) { if(isNaN(parseFloat(iobj.value))) { alert("Invalid value."); iobj.select(); } else { this.nodus = parseFloat(iobj.value); for(var rdg in this.readings) { try{this.readings[rdg].LKu();}
catch(e){} }  }  }, }; function XgQ(i,h,m,s,deex,deey) { this.idx = i; this.Hey = true; this.hh = h; this.mm = m; this.ss = s; this.delx = deex; this.dely = deey; this.localtime = ''; this.lha = 0; this.hasTime = false; this.hasDelta = false; this.alt1 = 0; this.alt2 = 0; this.sazm = 0; this.wazm = 0; this.wdec = 0; }
; XgQ.prototype.sWm = function() { this.localtime = parseFloat(this.hh) + parseFloat(this.mm)/60 + parseFloat(this.ss)/3600 + parseFloat(kan.fq_); var t = dge(this.idx+'lt'); t.innerHTML = c2tf(this.localtime,true); this.lha = ((this.localtime-12)*15).toFixed(5); t = dge(this.idx+'lha'); t.innerHTML = this.lha; var dp = new EoK('ZPB',this.lha,kan.dec); t = dge(this.idx+'sazm'); t.innerHTML = parseFloat(dp.azm).toFixed(3); this.sazm = dp.azm; t = dge(this.idx+'alt1'); t.innerHTML = parseFloat(dp.alt).toFixed(3); this.alt1 = dp.alt; this.hasTime = true; if(this.hasDelta) { this.MDt(); }
}; XgQ.prototype.LKu = function() { var htleg = Math.sqrt(this.delx*this.delx + kan.nodus*kan.nodus); this.alt2 = rad2d(Math.atan(this.dely/htleg)); var t = dge(this.idx+'alt2'); t.innerHTML = parseFloat(this.alt2).toFixed(3); this.wazm = 0 + rad2d(Math.atan(this.delx/kan.nodus)); this.wazm += (this.wazm < 0) ? 180 : 180; t = dge(this.idx+'wazm'); t.innerHTML = parseFloat(this.wazm).toFixed(3); this.hasDelta = true; if(this.hasTime) { this.MDt(); }
}; XgQ.prototype.MDt = function() { this.wdec = parseFloat(this.sazm) - parseFloat(this.wazm); t = dge(this.idx+'wdec'); t.innerHTML = parseFloat(this.wdec).toFixed(1); if(kan.rowcnt == kan.rdgcnt) { kan.pWC(); }
kan.LTn(); }; function mktag(ttype,attr) { var e = document.createElement(ttype); if(attr) { for(var p in attr) { e.setAttribute(p,attr[p]); } } return e; } function numberorder(a, b) { return a - b; }
function ConvertHA2Time(val,useampm) { var ampm = ''; if(useampm) { ampm = (parseFloat(val)<0) ? 'am' : 'pm' ;  } val = (parseFloat(val)<0) ? 12+parseFloat(val) : val ; var rstr = (parseInt(val)==0) ? '12' : parseInt(val); var min = parseInt(Math.abs(60*(val - parseInt(val)))); min = (min==0) ? '00' : min; rstr += ":" + min + ' ' +ampm; return rstr; }
function c2dh(hstr) { var flds = hstr.split(/[:.]/g); var sign = (flds[0].indexOf("-") != -1) ? -1 : 1 ; return sign*(Math.abs(parseFloat(flds[0])) + parseFloat(flds[1])/60 + parseFloat(flds[2])/3600); }
function c2tf(v,pad,ampm,wt,ss) { var wt1 = (wt) ? '<'+wt+'>' : ''; var wt2 = (wt) ? '</'+wt+'>' : ''; var s = (v < 0) ? '-' : ''; v = Math.abs(v); var f1 = parseInt(v); var n1 = parseFloat(v)-f1; var f2 = parseInt( n1*60 ); var n2 = n1*60; var f3 = ((n2 - f2)*60).toFixed(0); if(pad){f1 = (f1 == 0) ? 12 : f1;}
f2 = (f2 < 10) ? '0'+f2 : f2; f3 = (f3 < 10) ? '0'+f3 : f3; var atxt = ''; if(ampm) { var s1 = (ss) ? '' : '' ; var s2 = (ss) ? '' : '' ; atxt = (f1>=12) ? s1+' PM'+s2 : s1+' AM'+s2; f1 = (f1>12) ? f1-12 : f1; }
return wt1+s+f1+':'+f2+':'+f3+atxt+wt2; } function ConvertToHMS(val) { var hours = val/15; var rstr = parseInt(hours) + "<sup>h</sup>"; var min = Math.abs(60*(hours - parseInt(hours))); rstr += " " + parseInt(min) + "<sup>m</sup>"; var sec = 60*(min - parseInt(min)); rstr += " " + parseInt(sec) + "<sup>s</sup>"; return rstr; }
function ConvertToDMS(val) { var deg = parseInt(val); var rstr = deg + "&deg;"; var min = Math.abs(60*(val - deg)); rstr += " " + parseInt(min) + "<sup>m</sup>"; var sec = 60*(min - parseInt(min)); rstr += " " + parseInt(sec) + "<sup>s</sup>"; return rstr; }
function getDayOfWeek(n) { var dow = {0 : "Sun", 1 : "Mon", 2 : "Tue", 3 : "Wed", 4 : "Thu", 5 : "Fri", 6 : "Sat"}; return dow[n]; } function getMonthName(n) { var mname = {0 : "Jan", 1 : "Feb", 2 : "Mar", 3 : "Apr", 4 : "May", 5 : "Jun", 6 : "Jul", 7:"Aug", 8:"Sep", 9:"Oct", 10:"Nov", 11 :"Dec" }
; return mname[n]; } function format(value,precision) { return value.toString().substring(0,value.toString().indexOf(".")+precision+1); } function zJF(txt) { var d = dge('TNB'); d.innerHTML = ''; d.style.display = 'none'; }
function lFc(evt,txt) { var dy = (fetchScrollPosition())[1]; var d = dge('TNB'); d.innerHTML = txt+""; d.style.display = 'block'; adjustZIndex(d); var ua = navigator.userAgent; if(ua.indexOf('Opera') != -1 || ua.indexOf('Chrome') != -1) { try { d.style.position = 'absolute'; d.style.top = (evt.clientY+5+dy)+'px'; d.style.left = (evt.clientX+15)+'px'; }
catch(e){} } else if(ua.indexOf('Firefox') != -1) { try { d.style.position = 'absolute'; d.style.top = (evt.clientY+5+dy)+'px'; d.style.left = (evt.clientX+15)+'px'; } catch(e){} }  } function eh(el,evt) { warning(el.getAttribute("html"),true); warning(tS(arguments),true); }
function dge(id){return document.getElementById(id);} function max_ha(l,d) { return Math.abs(180 - rad2d((Math.acos(Math.tan(d2rad(d))*Math.tan(Math.abs(d2rad(l)))))).toFixed(0)); } function vop(M,e) { var ADB = M; var eccentricity = e; ADB = ADB * (2*Math.PI) / 360; var E1 = ADB; var E2 = 0; var count = 0; var diff = E1 - E2; while(diff > 0.000001) { count++; E2 = ADB + eccentricity*Math.sin(E1); diff = Math.abs(E1-E2)/E1; E1 = E2; if(count > 1000) { alert("Endless loop in 'Equation of Kepler'\n\nEXITING LOOP"); break; }
} return E2; } function Hgb(T,L,M,e) { this.time = T; this.longitude = L; this.ADB = M; this.eccentricity = e; this.y = Math.pow(Math.tan(Xcj(T)/2/180*Math.PI),2); this.etime = this.y * Math.sin(2 * this.longitude * Math.PI/180) - 2 * this.eccentricity * Math.sin(this.ADB * Math.PI/180) + 4 * this.eccentricity * this.y * Math.sin(this.ADB * Math.PI/180) * Math.cos(2 * this.longitude * Math.PI/180) - 0.5 * this.y * this.y * Math.sin(4 * this.longitude * Math.PI/180) - 5/4 * this.eccentricity * this.eccentricity * Math.sin(2 * this.ADB * Math.PI/180); this.etime *= 180/Math.PI; this.etime *= 4; }
function mfb(y,m,d) { this.year = parseInt(y); this.month = parseInt(m); this.day = parseFloat(d); this.jday = 0; this.time = 0; var yy = this.year; var mm = this.month; var dd = this.day; var A = 0; var B = 0; if(this.month <= 2) { yy = this.year - 1; mm = this.month + 12; }
A = parseInt(yy/100); B = 2 - A + parseInt(A/4); this.jday = parseInt(365.25 * yy) + parseInt(30.6001*(mm + 1)) + this.day + 1720994.5; var wkJ = this.month.toString(); wkJ = (wkJ.length == 1) ? "0" + wkJ : wkJ ; var roI = this.day.toString(); roI = (roI.indexOf(".") == 1) ? "0" + roI : roI ; this.dstring = this.year + "." + wkJ + roI.replace(".",""); if(parseFloat(this.dstring) > 1582.1015) { this.jday += B; }
this.time = (this.jday - 2415020)/36525; } function Xcj(T) { return 23.452294 - 0.0130125*T - 0.00000164*T*T - 0.000000504*T*T*T; } function FCM(j) { this.jd = j; this.time = (this.jd - 2415020)/36525; this.Zvi = 0; this.FMl = 0; this.qCJ = 0; this.RA = 0; this.DECL = 0; this.Radius = 0; this.longitude = 279.69668 + 36000.76892*this.time + 0.0003025 * this.time * this.time; this.longitude = (this.longitude/360 - parseInt(this.longitude/360))*360; this.ADB = 358.47583 + 35999.04953 * this.time - 0.000150 * this.time * this.time - 0.0000033 * this.time * this.time * this.time; this.ADB = (this.ADB/360 - parseInt(this.ADB/360))*360; this.eccentricity = 0.01675104 - 0.0000418 * this.time - 0.000000126 * this.time * this.time * this.time; this.Zvi = (vop(this.ADB, this.eccentricity))*180/Math.PI; this.FMl = 2*Math.atan(Math.sqrt((1+parseFloat(this.eccentricity))/(1-parseFloat(this.eccentricity))) * Math.tan(parseFloat(this.Zvi*Math.PI/180/2))); if(this.FMl < 1) { this.FMl += 2*Math.PI; }
this.FMl *= 180/Math.PI; this.qCJ = this.longitude + this.FMl - this.ADB; if(this.qCJ > 360) { this.qCJ -= 360; } this.c = (1.919460 - 0.004789*this.time - 0.000014*this.time*this.time)*Math.sin(this.ADB*Math.PI/180); this.c += (0.020094 - 0.0001*this.time)*Math.sin(2*this.ADB*Math.PI/180); this.c += 0.000293*Math.sin(3*this.ADB*Math.PI/180); var obliquity = Xcj(this.time); this.RA = Math.atan(Math.cos(obliquity*Math.PI/180)*Math.sin(this.qCJ*Math.PI/180)/Math.cos(this.qCJ*Math.PI/180))*180/Math.PI; this.DECL = Math.asin(Math.sin(obliquity*Math.PI/180)*Math.sin(this.qCJ*Math.PI/180))*180/Math.PI; if(this.RA < 0) {  }
if((this.qCJ > 90) && (this.qCJ < 180)) { this.RA += 180; } else if((this.qCJ > 180) && (this.qCJ < 270)) { this.RA += 180; } else if((this.qCJ > 270) && (this.qCJ < 360)) { this.RA += 360; } this.Radius = 1.0000002*(1 - this.eccentricity*this.eccentricity)/(1 + this.eccentricity*Math.cos(this.FMl*Math.PI/180)); }
function IRO(as_svg) { var thedial = dge('Roo'); var dxf = "0\nSECTION\n2\nENTITIES\n0"; var svg_paths = []; var p = thedial.getElementsByTagNameNS(svgNS,"path"); for(var i = 0; i<p.length; i++) { if(p[i].style.display != "none" && p[i].parentNode.style.display != 'none') { dxf += pZc(p[i]); if(as_svg && as_svg == true) { svg_paths.push(p[i]); }
}  } if(as_svg && as_svg == true) { return svg_paths; } var t = thedial.getElementsByTagNameNS(svgNS,"text"); for(var i = 0; i<t.length; i++) { if(t[i].style.display != "none" && t[i].parentNode.style.display != 'none') { dxf += YiO(t[i]); }
} var c = thedial.getElementsByTagNameNS(svgNS,"circle"); for(var i = 0; i<c.length; i++) { if(c[i].style.display != "none" && c[i].parentNode.style.display != 'none') {  }  } dxf += "\nENDSEC\n0\nEOF"; document.forms[0].tzt.value = dxf; oKK('OrJ',false); document.forms[0].tzt.focus(); }
function pZc(ap,lname) { var dstr = ''; var lyrname = TRm('path',ap); var d = ap.getAttribute('d'); var coordinates = d.split(/[ML]/g); coordinates.shift(); if(coordinates.length == 2) { dstr += jYg(coordinates,lyrname); }
else if(coordinates.length > 2) { dstr += Vgy(coordinates,lyrname); } else { } return dstr; } function jYg(coors,lrn) { var lstr = "\nLINE\n 8\n"+lrn; var coor,xc1,yc1,xc2,yc2; coor = coors[0].split(/,/); xc1 = c2ds('x',coor[0]); yc1 = c2ds('z',coor[1]); coor = coors[1].split(/,/); xc2 = c2ds('x',coor[0]); yc2 = c2ds('z',coor[1]); lstr += "\n 10" + "\n"+xc1 + "\n 20" + "\n"+yc1 + "\n 11" + "\n"+xc2 + "\n 21" + "\n"+yc2 + "\n0"; if( isNaN(xc1) || isNaN(yc1) || isNaN(xc2) || isNaN(yc2) )  { lstr = ''; }
return lstr; } function Vgy(plcoors,ln) { var plstr = "\nPOLYLINE\n 8\n"+ln+"\n66\n1\n0"; var coor,xc,yc; for(var i=0; i<plcoors.length; i++) { coor = plcoors[i].split(/,/); xc = c2ds('x',coor[0]); yc = c2ds('z',coor[1]); if( isNaN(xc) || isNaN(yc) )  { warning("INVALID NUMERIC VALUE DETECTED WHILE PACKAGING 'POLYLINE'...SKIPPING VERTEX "+' <br />COOR: '+coor+' For Layer: '+ln,true); }
else { plstr += "\nVERTEX" + "\n 8\n"+ln + "\n 10\n"+xc + "\n 20\n"+yc + "\n0"; }  } plstr += "\nSEQEND\n8\n"+ln+"\n0"; return plstr; } var zzzcnt = 0; function CrF(acirc) { var lyrnam = TRm('circle',acirc); var cstr = "\nCIRCLE\n 8\n"+lyrnam; var xc,yc,r; xc = c2ds('x',acirc.cx.baseVal.value); yc = c2ds('z',acirc.cy.baseVal.value); r = acirc.r.baseVal.value; if( isNaN(xc) || isNaN(yc) || isNaN(r)) { warning("INVALID NUMERIC VALUE DETECTED WHILE PACKAGING 'CIRCLE'...SKIPPING ",true); }
else { cstr += "\n 10\n"+xc + "\n 20\n"+yc + "\n 40\n"+r + "\n0"; } return cstr; } function YiO(txt) { var hgt = 0.60; var tstr = "\nTEXT\n62\n7\n 8\nL_Text\n60\n0"; var tx = c2ds('x',txt.getAttribute('x')); var ty = c2ds('z',txt.getAttribute('y')); var tdx = (txt.hasAttribute('dx')) ? c2ds('x',parseFloat(txt.getAttribute('dx'))) : 0 ; var tdy = (txt.hasAttribute('dy')) ? c2ds('y',parseFloat(txt.getAttribute('dy'))) : 0 ; tstr += "\n 10\n"+tx; tstr += "\n 20\n"+ty; tstr += "\n1\n"+txt.childNodes[0].nodeValue; tstr += "\n 40\n"+hgt; tstr += "\n 50\n"+1; tstr += "\n0"; return tstr; return ''; }
function ZaJ() { if(dge("dxfelements") && dge("lrz")) { dge("lrz").removeChild(dge("dxfelements")); } } var Aqh = 0; var HVd = 0; function aJz() { var dxf = document.forms[0].elements['dxf'].value; Aqh = parseFloat(document.forms[0].elements.gMU.value); HVd = parseFloat(document.forms[0].elements.Ziy.value); if(dxf.length < 20) { alert("Please enter the file."); return; }
var Gds = dge("lrz"); if(dge('dxfelements')) { Gds.removeChild(dge('dxfelements')); } var wrapper = FWe({'type':'g','id':'dxfelements'}); Gds.appendChild(wrapper); dxf = dxf.replace(/ 8\n0/g,' 8\nORG'); var els = dxf.split(/LINE|POLYLINE|CIRCLE|TEXT/g); for(var i=0; i<els.length; i++) { if(els[i].indexOf(8) != -1) { if(els[i].indexOf("VERTEX") == -1) { ter(els[i],wrapper); }
else { eoX(els[i],wrapper); }  }  }  } function ter(line,wrapper) { var template = /10\s+(-?\d+.\d+)\s+20\s+(-?\d+.\d+)\s+11\s+(-?\d+.\d+)\s+21\s+(-?\d+.\d+)/; var coors = line.match(template); if(coors) { wrapper.appendChild(FWe({ 'type':'path', 'd':'M '+c2gs('x',(coors[1]-Aqh))+','+c2gs('z',(coors[2]-HVd))+' L '+c2gs('x',(coors[3]-Aqh))+','+c2gs('z',(coors[4]-HVd)), 'stroke':'#0ff', 'stroke-width':'3' }
)); } } function eoX(pline,wrapper) { var template = /10\s+(-?\d+.\d+)\s+20\s+(-?\d+.\d+)/; var vtxs = pline.split(/VERTEX/g); var plstr = ''; var cnt = 0; for(var i=0; i<vtxs.length; i++) { var coors = vtxs[i].match(template); if(coors) { if(cnt==0) { plstr +='M '+c2gs('x',(coors[1]-Aqh))+','+c2gs('z',(coors[2]-HVd)); }
else { plstr +='L '+c2gs('x',(coors[1]-Aqh))+','+c2gs('z',(coors[2]-HVd)); } cnt++; }  } if(plstr != '') { wrapper.appendChild(FWe({ 'type':'path', 'd':plstr, 'stroke':'#0ff', 'fill':'none', 'stroke-width':'3' }
)); } } var pstrz = {  'roN':'BaileyPosition', 'tNP':'Analemma', 'eotanayaxis':'EoTScale', 'Chb':'Zodiac', 'xyzlcl':'Shepherd_LocalTime', 'xyzeot':'Shepherd_LocalTime_WEoT', 'xyzstd':'Shepherd_StdTime', 'xyzswe':'Shepherd_StdTime_WEoT', 'eotanaxaxis':'SolarDeclScale', 'analemma_shadowline':'ShadowLinePath', 'chb':'HourMarkers', 'chB':'HalfHourMarkers', 'eotdateyaxis':'DateScale', 'eotdatexaxis':'EoTScale', 'kUi':'HourLines', 'RuG':'HalfHourLines', 'horizon':'Horizon', 'dialorigin':'DialOrigin', 'substyle':'Substyle', 'vWP':'SolarCalendar', 'babylonian':'Babylonian', '1dofmonth':'FirstDayOfMonth', 'shadowline':'ShadowLines', 'lambert':'LambertCircles', 'cylindermarker':'CylinderMarker', 'NXQ':'emT', 'EIW':'oIG', 'mJR':'ZNX', 'wDT':'WpQ', 'italian':'Italian' }
; var tstrz = {  'cylmarkertxt':'CylMarkerText', }; var cstrz = {  'x':'x', 'analemmahourmark':'HourMarkers' }; function TRm(en,e) { var lrnm = '0'; switch(en) { case "path": lrnm = 'L_PTH'; for(var ids in pstrz) { if(e.id && e.id.indexOf(ids) != -1) { lrnm = pstrz[ids]; break; }
} break; case "text": lrnm = 'L_TXT'; for(var ids in tstrz) { if(e.id && e.id.indexOf(ids) != -1) { lrnm = tstrz[ids]; break; }  } break; case "circle": lrnm = 'L_CRC'; for(var ids in cstrz) { if(e.id && e.id.indexOf(ids) != -1) { lrnm = cstrz[ids]; break; }
} break; default: break; } return lrnm; } function export_dial_to_svg() { var path_arr = IRO(true); var text = "<?xml version='1.0' encoding='ISO-8859-1' standalone='no'?>" + "\n<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 20010904//EN' 'http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd'>" + "\n<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xml:space='preserve' width='765' height='990' viewBox='0 0 765 990' zoomAndPan='disable' >" + "\n<g id='g123' transform='matrix(90.0,0,0,-90.0,0,0)'>" + "\n<g id='sc_nth'>"; try { var dsc = dge('wjL').getElementsByTagNameNS(svgNS,"path"); for(var i=0;i<dsc.length;i++) { text += "\n<path stroke='#f00' stroke-width='0.01' fill='none' d='"+package_path2_inkscape(dsc[i])+"' />"; }
text += "\n<path stroke='#f00' stroke-width='0.01' fill='none' d='"+ package_path2_inkscape(dge('north').getElementsByTagNameNS(svgNS,"path")[0])+"' />"; } catch(e){} text += "\n</g>"; for(var i=0; i<path_arr.length; i++) {  {  }
text += "\n<path stroke='#000' stroke-width='0.01' fill='none' d='"+package_path2_inkscape(path_arr[i])+"' />"; } text += "\n</g>\n</svg>"; document.forms[0].tzt_svg.value = text; oKK('help_svg',false); document.forms[0].tzt_svg.focus(); }
function package_path2_inkscape(ap) { var inkstr = ''; var d = ap.getAttribute('d'); var coordinates = d.split(/[ML]/g); coordinates.shift(); if(coordinates.length == 2) { inkstr += package_line2_inkscape(coordinates); }
else if(coordinates.length > 2) { inkstr += package_polyline2_inkscape(coordinates); } else { } return inkstr; } function package_line2_inkscape(coors) { var coor,xc1,yc1,xc2,yc2; coor = coors[0].split(/,/); xc1 = c2ds('x',coor[0]); yc1 = c2ds('z',coor[1]); coor = coors[1].split(/,/); xc2 = c2ds('x',coor[0]); yc2 = c2ds('z',coor[1]); var lstr = "M"+xc1+","+yc1+" L"+xc2+","+yc2; if( isNaN(xc1) || isNaN(yc1) || isNaN(xc2) || isNaN(yc2) )  { lstr = ''; }
return lstr; } function package_polyline2_inkscape(plcoors) { var coor,xc,yc,apd; var plstr = ""; for(var i=0; i<plcoors.length; i++) { apd = (i==0) ? "M" : "\n\tL"; coor = plcoors[i].split(/,/); xc = c2ds('x',coor[0]); yc = c2ds('z',coor[1]); if( isNaN(xc) || isNaN(yc) )  { warning("INVALID NUMERIC VALUE DETECTED WHILE PACKAGING 'POLYLINE'...SKIPPING VERTEX "+' <br />COOR: '+coor+' For Layer: '+ln,true); }
else { plstr += apd+xc+","+yc; }  } return plstr; } var tp_layout = { x1 : 0, y1 : 0, x2 : 0, y2 : 0, tmin : 0, tmax : 0, count : 0, ha_start : -90, ha_end : 90, ha_nbr_pts : 3, enabled : false, is_hardcoded : true, dpoints : [], orig_dial_scale : 0, adjusted_gnomon : function(xpos) { return this.orig_dial_scale - 1.25/60*xpos; }
, fetch_input_screen : function() { dge("tplo_layout").style.display = "block"; adjustZIndex(dge("tplo_layout")); }, set_input : function(iobj,fld) { if(isNaN(parseInt(iobj.value))) { iobj.focus(); iobj.select(); alert("Invalid Number"); return; }
switch(fld) { case "ha_start" : iobj.value = parseInt(iobj.value); this.ha_start = iobj.value; break; case "ha_end" : iobj.value = parseInt(iobj.value); this.ha_end = iobj.value; break; case "ha_nbr_pts" : iobj.value = parseInt(iobj.value); this.ha_nbr_pts = iobj.value; break; default : alert("Indeterminate switch in tp_layout.set_input() ?"); break; }
}, set_coor : function(iobj) { if(!isNaN(parseFloat(iobj.value))) { switch (iobj.name) { case "lc1x" : this.x1 = parseFloat(iobj.value); break; case "lc1y" : this.y1 = parseFloat(iobj.value); break; case "lc2x" : this.x2 = parseFloat(iobj.value); break; case "lc2y" : this.y2 = parseFloat(iobj.value); break; default: alert("Invalid 'switch(case)' :"+iobj.name+"\n\nFunction: tp_layout.set_coor()"); break; }
} else { iobj.select(); iobj.focus(); alert("Invalid number."); }  }, ck_data : function(fld,val,ix) { switch(fld) { case "date" : this.dpoints[ix].parse_date(val); break; case "time" : this.dpoints[ix].parse_time(fld,val); break; case "corr" : this.dpoints[ix].parse_time(fld,val); break; default : alert("Invalid field passed to tp_layout.ck_data()"); break; }
}, load_data : function(retrn) { if(this.is_hardcoded) { this.x1 = -0.5; this.x2 = -0.75; this.y1 = -17.5 - VFD.Wic*Math.sin(VFD.AYf); this.y2 = -88.75 - VFD.Wic*Math.sin(VFD.AYf); this.x1 = 0; this.x2 = 5.23; this.y1 = 0; this.y2 = 119.76; dge("lc1x").value = this.x1; dge("lc1y").value = this.y1; dge("lc2x").value = this.x2; dge("lc2y").value = this.y2; if(retrn && retrn == "return"){return;}
} this.tmin = parseFloat(dge("tplo_min_time").value); this.tmax = parseFloat(dge("tplo_max_time").value); if(isNaN(this.tmin) || isNaN(this.tmax)) { alert("Invalid entry for time bracket."); return; }
var data; eval(dge("tplo_txtarea").value); var p; for(var j in data) { this.dpoints.push(new tplo_dp(j,data[j]['date'],data[j]['time'],data[j]['corr'],data[j]['D1'],data[j]['D2'])); } this.display(); }
, clear_data : function() { for(var i=0; i<this.dpoints.length; i++) { if(dge("tplor"+i)) { dge("tplor"+i).parentNode.removeChild(dge("tplor"+i)); }  } this.dpoints = []; }, fetch_data : function(w) { w.document.getElementById("tplo_txtarearow").parentNode.removeChild(w.document.getElementById("tplo_txtarearow")); w.document.getElementById("tplo_btnrow").parentNode.removeChild(w.document.getElementById("tplo_btnrow")); }
, sort_by_ha : function() { var ha_arr = []; for(var jdx in this.dpoints) { ha_arr.push(this.dpoints[jdx].hhmmss); } ha_arr.sort(numberorder); var tmp_arr = []; for(var j=0; j<ha_arr.length; j++) { for(var idx in this.dpoints) { if(this.dpoints[idx].hhmmss == ha_arr[j]) { tmp_arr.push(this.dpoints[idx]); }
}  } this.clear_data(); for(var j=0; j<tmp_arr.length; j++) { this.dpoints.push(tmp_arr[j]); } this.display(); }, display : function() { return; if(dge('tplo_wrpr')) { VFD.WAM.removeChild(dge('tplo_wrpr')); }
var wrpr = FWe( {'type':'g','id':'tplo_wrpr'} ); VFD.WAM.appendChild(wrpr); var deltas1 = []; var deltas2 = []; var deltas3 = []; for(var i=0; i<this.dpoints.length; i++) { this.dpoints[i].display(wrpr); if((this.dpoints[i].hhmmss > this.tmin) && (this.dpoints[i].hhmmss < this.tmax)) { deltas1.push(this.dpoints[i].delta1); deltas2.push(this.dpoints[i].delta2); deltas3.push(this.dpoints[i].delta1); deltas3.push(this.dpoints[i].delta2); }
} var result1 = qgj(deltas1); var result2 = qgj(deltas2); var result3 = qgj(deltas3); dge("tplo_res1").innerHTML = parseFloat(result1[0]).toFixed(1)+ " +/- "+parseFloat(result1[1]).toFixed(1); dge("tplo_res2").innerHTML = parseFloat(result2[0]).toFixed(1)+ " +/- "+parseFloat(result2[1]).toFixed(1); dge("tplo_res3").innerHTML = parseFloat(result3[0]).toFixed(1)+ " +/- "+parseFloat(result3[1]).toFixed(1)+"<br /> "; wrpr.appendChild(FWe({ 'type':"circle", 'id':'tplo_pt1', "onmouseover":"lFc(evt,'<b>[Pt1] </b><br />: "  +"Coor:( "+parseFloat(this.x1).toFixed(2)+" , " +parseFloat(this.y1).toFixed(2)+" )');", "onmouseout":"zJF();", "cursor":"pointer", "cx":c2gs('x',this.x1), "cy":c2gs('z',this.y1), "stroke":"#000", "fill":"#ffff00", "stroke-width":"0.5pt", "r":2.5 }
)); wrpr.appendChild(FWe({ 'type':"circle", 'id':'tplo_pt2', "onmouseover":"lFc(evt,'<b>[Pt1] </b><br />: "  +"Coor:( "+parseFloat(this.x2).toFixed(2)+" , " +parseFloat(this.y2).toFixed(2)+" )');", "onmouseout":"zJF();", "cursor":"pointer", "cx":c2gs('x',this.x2), "cy":c2gs('z',this.y2), "stroke":"#000", "fill":"#ffff00", "stroke-width":"0.5pt", "r":2.5 }
)); }, tplo_reload_all : function() { if(!this.enabled) return; try{this.clear_data();}catch(e){} this.load_data(); }, fetch_intermediate_pts : function(d) { dge("tplo_epdiv").style.display = "block"; if(dge("tplo_table"+d)) { alert("Declination : "+d+" is already part of the output collection."); return; }
var incr = 15/(parseInt(this.ha_nbr_pts) + 1.0); var ha,hai,dpt; var tstr = ""; var thediv = dge("tplo_table_div"); var thetable = mktag("table",{"id":"tplo_table"+d}); var arow = mktag("tr",{}); arow.innerHTML = "<th colspan='"+(1*this.ha_nbr_pts+1)+"'><div title='Remove Table' style='padding:0 3px 0 3px;float:right' class='close' onclick='dge(\"tplo_table_div\").removeChild(dge(\"tplo_table\"+"+d+"));'>X</div>2PT Layout Data for: DECL = "+ d +"</th>"; thediv.appendChild(thetable); thetable.appendChild(arow); for(var i=0; i<VFD.tMe.length; i++) { ha = parseFloat(VFD.tMe[i]); if(parseFloat(ha) > this.ha_start && parseFloat(ha) < this.ha_end) { thetable.appendChild(arow); tstr = ""; for(var j=0; j<=this.ha_nbr_pts; j++) { hai = ha + incr*j; dpt = new EoK(VFD.SSs,hai,d); dpt.calculate_tplo(); tstr += "<td><b>"+ConvertHA2Time((hai/15 + Math.abs(VFD.msP/15)),true) +"</b> (HA: "+parseFloat(hai).toFixed(2)+")<br />D1: "+parseFloat(dpt.D1).toFixed(2)+" / D2: "+parseFloat(dpt.D2).toFixed(2) +"</td>"; }
arow = mktag("tr",{}); arow.innerHTML = tstr; thetable.appendChild(arow); }  } dge("tplo_epdiv").style.display = "block"; }, calc_decl : function(d,h) { return; var decl = d || 0; var range = h || 60; var dp,ha,newg; var wrpr = dge('tplo_wrpr'); var ostr = '<div id="tplo_ods_'+this.orig_dial_scale+'">' +'<table><tr><th colspan="4">DECL: '+decl+' | Base Gnomon Length: '+this.orig_dial_scale+'<span onclick="Lqf(\'tplo_ods_'+this.orig_dial_scale+'\',null)" style="color:#800;font-size:6pt;font-weight:normal;cursor:pointer;float:right">PRINT</span></th>' +'<th>G-length</th><th>(D1.x,D1.y)</th><th>(D2.x,D2.y)</th></tr>'; for(var i=-range; i<range; i+=15/4) { try { ha = i + VFD.msP; dp = new EoK(VFD.SSs,ha,decl,null); if(dp.isValid) { newg = tp_layout.adjusted_gnomon(Math.abs(dp.JGN)); this.load_data("return"); VFD.Wic = newg; VFD.tqJ(); dp = new EoK(VFD.SSs,ha,decl,null); dc1 = parseFloat(sAY(tp_layout.x1,tp_layout.y1,dp.JGN,dp.bnT)).toFixed(2); dc2 = parseFloat(sAY(tp_layout.x2,tp_layout.y2,dp.JGN,dp.bnT)).toFixed(2); ostr += "\n<tr><td style='text-align:left'>HA : "+i+"</td>"; ostr += '<td> ( '+parseFloat(dp.JGN).toFixed(1)+' , '+parseFloat(dp.bnT).toFixed(1)+' )</td>' + '<td> [D1: '+parseFloat(dc1).toFixed(1)+']</td><td> [D2 : '+parseFloat(dc2).toFixed(1)+' ]</td>' + '<td>'+parseFloat(newg).toFixed(1)+'</td>' + '<td>('+parseFloat(tp_layout.x1).toFixed(1)+ ' , '+parseFloat(tp_layout.y1).toFixed(1)+')</td>' + '<td>('+parseFloat(tp_layout.x2).toFixed(1)+ ' , '+parseFloat(tp_layout.y2).toFixed(1)+' )</td></tr>'; wrpr.appendChild(FWe({ 'type':"circle", "onmouseover":"lFc(evt,'" +"<br />HA: "+parseFloat(ha).toFixed(2)+" "  +"<br />DialScale: "+parseFloat(VFD.Wic).toFixed(2)+" "  +"<br />Coor: ("+parseFloat(dp.JGN).toFixed(2)+" , " +parseFloat(dp.bnT).toFixed(2)+" ) " +"<br /> D1: "+dc1+"" +"<br /> D2: "+dc2+"');", "onmouseout":"zJF();", "cursor":"pointer", "cx":c2gs('x',dp.JGN), "cy":c2gs('z',dp.bnT), "fill":"#800", "stroke":"#000", "stroke-width":"0.1px", "r":1.5 }
)); }  } catch(e){} } ostr += "</table></div>"; if(!dge('tp_tmp')) { var d = mktag('div',{'id':'tp_tmp'}); d.innerHTML = "<h3>TwoPoint Layout Data</h3>"; document.getElementsByTagName('body')[0].appendChild(d); dge('tp_tmp').innerHTML += ostr; }
dge('execode_targ').value += ostr; }, fetch_inputs : function() {  }  }; function tplo_dp(inx,thedate,thetime,corr,dee1,dee2) { this.idx = inx; this.yymmdd = thedate || 0; this.yy = 0; this.mm = 0; this.dd = 0; this.eot = 0, this.hhmmss = thetime || 0; this.watch_dt = corr || 0; this.dm1 = dee1 || 0; this.dm2 = dee2 || 0; this.dc1 = 0; this.dc2 = 0; this.delta1 = 0; this.delta2 = 0; this.dialpt = null; this.time_set = false; this.corr_set = false; this.date_set = false; this.parse_time('time',thetime); this.parse_time('corr',corr); this.parse_date(thedate); if(this.yy != 0) this.calc(); }
tplo_dp.prototype.calc = function() { if(this.time_set && this.date_set) { var j = new mfb(this.yy,this.mm,parseInt(this.dd)+1.0); var s = new FCM(j.jday); var e = new Hgb(s.time,s.longitude,s.ADB,s.eccentricity); var h = (this.hhmmss - 12)*15 + VFD.msP + e.etime/4 + this.watch_dt*15; this.eot = parseFloat(e.etime).toFixed(2); this.dialpt = new EoK(VFD.SSs,h,s.DECL,null); this.dialpt.calculate_tplo(); this.dc1 = sAY(tp_layout.x1,tp_layout.y1,this.dialpt.JGN,this.dialpt.bnT); this.dc2 = sAY(tp_layout.x2,tp_layout.y2,this.dialpt.JGN,this.dialpt.bnT); }
}; tplo_dp.prototype.display = function(wrpr) { return; this.delta1 = parseFloat(this.dc1 - this.dm1).toFixed(2); this.delta2 = parseFloat(this.dc2 - this.dm2).toFixed(2); var dtp = sAY(tp_layout.x1,tp_layout.y1,tp_layout.x2,tp_layout.y2); var theta1 = Math.atan( (tp_layout.x1 - tp_layout.x2) / (tp_layout.y1 - tp_layout.y2)); var theta2 = Math.acos((dtp*dtp + this.dm2*this.dm2 - this.dm1*this.dm1) / (2*dtp*this.dm2)); var alpha = Math.PI/2 - (theta1 + theta2); var mx = tp_layout.x2 + this.dm2 * Math.cos(alpha); var my = tp_layout.y2 + this.dm2 * Math.sin(alpha); var sep = parseFloat(sAY(mx,my,this.dialpt.JGN,this.dialpt.bnT)).toFixed(2); var ap = 'M'+c2gs('x',mx)+',' +c2gs('z',my) +' L '+c2gs('x',this.dialpt.JGN)+',' +c2gs('z',this.dialpt.bnT); { var ng = tp_layout.adjusted_gnomon(Math.abs(this.dialpt.JGN)); VFD.Wic = ng; VFD.tqJ(); var apt = new EoK(VFD.SSs,this.dialpt.ha,this.dialpt.decl); sep = parseFloat(sAY(mx,my,apt.JGN,apt.bnT)).toFixed(2); var ap = 'M'+c2gs('x',mx)+',' +c2gs('z',my) +' L '+c2gs('x',apt.JGN)+',' +c2gs('z',apt.bnT); wrpr.appendChild(FWe({ 'type':'path', "d":ap, "onmouseover":"lFc(evt,'PT: "+this.idx+"<br />Delta: "+sep+"\"');", "onmouseout":"zJF();", "fill":"none", "stroke":"#000", "stroke-width":0.5, "cursor":"pointer" }
)); } wrpr.appendChild(FWe({ 'type':"circle", 'id':'tplo'+this.idx, "onmouseover":"lFc(evt,'<b>["+this.idx+"] </b>"+this.dd+"/"+this.mm+"/"+this.yy +"<br />Time: "+this.hhmmss +"<br />Corr: "+this.watch_dt +"<br />Gnomon: "+parseFloat(ng).toFixed(2) +"<br />EoT: "+this.eot +"<br />HA: "+this.dialpt.ha +"<br />DECL: "+parseFloat(this.dialpt.decl).toFixed(2)+" "  +"<br />Coor:( "+parseFloat(this.dialpt.JGN).toFixed(2)+" , "+parseFloat(this.dialpt.bnT).toFixed(2)+" )');", "onmouseout":"zJF();", "cursor":"pointer", "cx":c2gs('x',apt.JGN), "cy":c2gs('z',apt.bnT), "fill":"#00f", "stroke":"#000", "stroke-width":"0.1px", "r":1.5 }
)); wrpr.appendChild(FWe({ 'type':"circle", 'id':'tplo_measured'+this.idx, "onmouseover":"lFc(evt,'<b>["+this.idx+"] </b>"+this.dd+"/"+this.mm+"/"+this.yy+"<br />EoT: "  +this.eot+" "+this.hhmmss+"<br />Coor:( "+parseFloat(mx).toFixed(2)+" , " +parseFloat(my).toFixed(2)+" )');", "onmouseout":"zJF();", "cursor":"pointer", "cx":c2gs('x',mx), "cy":c2gs('z',my), "fill":"#f00", "stroke":"#000", "stroke-width":"0.1px", "r":1.5 }
)); VFD.Wic = tp_layout.orig_dial_scale; VFD.tqJ(); }; tplo_dp.prototype.insert_html = function() { var r = mktag("tr",{"id":"tplor"+this.idx}); r.innerHTML = "<td id='tplo_nbr'>"+this.idx+"</td> "  + "<td><input size='9' type='text' name='tplo_"+this.idx+"_date' id='tplo_"+this.idx+"_date' value='"+this.yymmdd+"' onchange='tp_layout.ck_data(\"date\",this.value,"+this.idx+")' /></td> "  + "<td><input size='7' type='text' name='tplo_"+this.idx+"_time' id='tplo_"+this.idx+"_time' value='"+this.hhmmss+"' onchange='tp_layout.ck_data(\"time\",this.value,"+this.idx+")' /><span style='font-size:7pt' id='decimal_"+this.idx+"_time'></span></td> "  + "<td><input size='6' type='text' name='tplo_"+this.idx+"_corr' id='tplo_"+this.idx+"_corr' value='"+this.watch_dt+"' onchange='tp_layout.ck_data(\"corr\",this.value,"+this.idx+")' /><span style='font-size:7pt' id='decimal_"+this.idx+"_corr'></span></td> "  + "<td id='tplo_"+this.idx+"_dfc'> </td>" + "<td id='tplo_"+this.idx+"_d1d2'> </td>"; dge("tplo_coor").insertBefore(r, dge("tplo_lastrow")); }
tplo_dp.prototype.parse_time = function(f,v) { var result = 0; try { result = c2dh(v); if(isNaN(result)) { alert("Invalid value for: "+f.toUpperCase()); dge("tplo_"+this.idx+"_"+f).select(); dge("tplo_"+this.idx+"_"+f).focus(); eval("this."+f+"_set=false;"); return; }
} catch(e) { alert("Invalid value for: "+f.toUpperCase()+"\n\nMSG: "+e.message); dge("tplo_"+this.idx+"_"+f).select(); dge("tplo_"+this.idx+"_"+f).focus(); eval("this."+f+"_set=false;"); return; } if(f == "time") { this.hhmmss = result; this.time_set = true; }
else { this.watch_dt = result; this.corr_set = true; } this.calc(); }; tplo_dp.prototype.parse_date = function(v) { var f = v.split(/[.:]/g); try { if(f.length == 3) { if( isNaN(parseInt(f[0])) || isNaN(parseInt(f[1])) || isNaN(parseInt(f[2])) )  { alert("Date appears to be invalid...?"); this.date_set = false; }
else { this.yy = parseInt(f[0]); this.mm = parseInt(f[1]); this.dd = parseInt(f[2]); this.date_set = (this.yy != 0) ? true : false ; }  } else { alert("Date appears to be invalid...?"); this.date_set = false; }
} catch(e) { alert("Date appears to be invalid...?\n\nMSG: "+e.message); this.date_set = false; } this.calc(); };  